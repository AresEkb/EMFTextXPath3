// $ANTLR 3.4

	package org.emftext.language.xpath3.resource.xpath3.mopp;
	
	import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.antlr.runtime3_4_0.ANTLRInputStream;
import org.antlr.runtime3_4_0.BitSet;
import org.antlr.runtime3_4_0.CommonToken;
import org.antlr.runtime3_4_0.CommonTokenStream;
import org.antlr.runtime3_4_0.IntStream;
import org.antlr.runtime3_4_0.Lexer;
import org.antlr.runtime3_4_0.RecognitionException;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;


import org.antlr.runtime3_4_0.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class Xpath3Parser extends Xpath3ANTLRParserBase {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "DECIMAL_LITERAL", "DOUBLE_LITERAL", "INTEGER_LITERAL", "NCNAME", "QNAME", "STRING_LITERAL", "WHITESPACE", "'!='", "'$'", "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'..'", "'/'", "'//'", "':'", "'::'", "'<'", "'<<'", "'<='", "'='", "'>'", "'>='", "'>>'", "'?'", "'@'", "'['", "']'", "'ancestor'", "'ancestor-or-self'", "'and'", "'as'", "'attribute'", "'cast'", "'castable'", "'child'", "'comment'", "'descendant'", "'descendant-or-self'", "'div'", "'document-node'", "'element'", "'else'", "'empty-sequence'", "'eq'", "'every'", "'except'", "'following'", "'following-sibling'", "'for'", "'ge'", "'gt'", "'idiv'", "'if'", "'in'", "'instance'", "'intersect'", "'is'", "'item'", "'le'", "'lt'", "'mod'", "'namespace'", "'ne'", "'node'", "'of'", "'or'", "'parent'", "'preceding'", "'preceding-sibling'", "'processing-instruction'", "'return'", "'satisfies'", "'schema-attribute'", "'schema-element'", "'self'", "'some'", "'text'", "'then'", "'to'", "'treat'", "'union'", "'|'"
    };

    public static final int EOF=-1;
    public static final int T__11=11;
    public static final int T__12=12;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__19=19;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__50=50;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__59=59;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__90=90;
    public static final int DECIMAL_LITERAL=4;
    public static final int DOUBLE_LITERAL=5;
    public static final int INTEGER_LITERAL=6;
    public static final int NCNAME=7;
    public static final int QNAME=8;
    public static final int STRING_LITERAL=9;
    public static final int WHITESPACE=10;

    // delegates
    public Xpath3ANTLRParserBase[] getDelegates() {
        return new Xpath3ANTLRParserBase[] {};
    }

    // delegators


    public Xpath3Parser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public Xpath3Parser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
        this.state.initializeRuleMemo(290 + 1);
         

    }

    public String[] getTokenNames() { return Xpath3Parser.tokenNames; }
    public String getGrammarFileName() { return "Xpath3.g"; }


    	private org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolverFactory tokenResolverFactory = new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TokenResolverFactory();
    	
    	/**
    	 * the index of the last token that was handled by collectHiddenTokens()
    	 */
    	private int lastPosition;
    	
    	/**
    	 * A flag that indicates whether the parser should remember all expected elements.
    	 * This flag is set to true when using the parse for code completion. Otherwise it
    	 * is set to false.
    	 */
    	private boolean rememberExpectedElements = false;
    	
    	private Object parseToIndexTypeObject;
    	private int lastTokenIndex = 0;
    	
    	/**
    	 * A list of expected elements the were collected while parsing the input stream.
    	 * This list is only filled if <code>rememberExpectedElements</code> is set to
    	 * true.
    	 */
    	private List<org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectedTerminal> expectedElements = new ArrayList<org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectedTerminal>();
    	
    	private int mismatchedTokenRecoveryTries = 0;
    	/**
    	 * A helper list to allow a lexer to pass errors to its parser
    	 */
    	protected List<RecognitionException> lexerExceptions = Collections.synchronizedList(new ArrayList<RecognitionException>());
    	
    	/**
    	 * Another helper list to allow a lexer to pass positions of errors to its parser
    	 */
    	protected List<Integer> lexerExceptionPositions = Collections.synchronizedList(new ArrayList<Integer>());
    	
    	/**
    	 * A stack for incomplete objects. This stack is used filled when the parser is
    	 * used for code completion. Whenever the parser starts to read an object it is
    	 * pushed on the stack. Once the element was parser completely it is popped from
    	 * the stack.
    	 */
    	List<EObject> incompleteObjects = new ArrayList<EObject>();
    	
    	private int stopIncludingHiddenTokens;
    	private int stopExcludingHiddenTokens;
    	private int tokenIndexOfLastCompleteElement;
    	
    	private int expectedElementsIndexOfLastCompleteElement;
    	
    	/**
    	 * The offset indicating the cursor position when the parser is used for code
    	 * completion by calling parseToExpectedElements().
    	 */
    	private int cursorOffset;
    	
    	/**
    	 * The offset of the first hidden token of the last expected element. This offset
    	 * is used to discard expected elements, which are not needed for code completion.
    	 */
    	private int lastStartIncludingHidden;
    	
    	private org.emftext.language.xpath3.resource.xpath3.IXpath3LocationMap locationMap;
    	
    	private org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3SyntaxErrorMessageConverter syntaxErrorMessageConverter = new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3SyntaxErrorMessageConverter(tokenNames);
    	
    	@Override
    	public void reportError(RecognitionException re) {
    		addErrorToResource(syntaxErrorMessageConverter.translateParseError(re));
    	}
    	
    	protected void addErrorToResource(final String errorMessage, final int column, final int line, final int startIndex, final int stopIndex) {
    		postParseCommands.add(new org.emftext.language.xpath3.resource.xpath3.IXpath3Command<org.emftext.language.xpath3.resource.xpath3.IXpath3TextResource>() {
    			public boolean execute(org.emftext.language.xpath3.resource.xpath3.IXpath3TextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for code completion
    					return true;
    				}
    				resource.addProblem(new org.emftext.language.xpath3.resource.xpath3.IXpath3Problem() {
    					public org.emftext.language.xpath3.resource.xpath3.Xpath3EProblemSeverity getSeverity() {
    						return org.emftext.language.xpath3.resource.xpath3.Xpath3EProblemSeverity.ERROR;
    					}
    					public org.emftext.language.xpath3.resource.xpath3.Xpath3EProblemType getType() {
    						return org.emftext.language.xpath3.resource.xpath3.Xpath3EProblemType.SYNTAX_ERROR;
    					}
    					public String getMessage() {
    						return errorMessage;
    					}
    					public Collection<org.emftext.language.xpath3.resource.xpath3.IXpath3QuickFix> getQuickFixes() {
    						return null;
    					}
    				}, column, line, startIndex, stopIndex);
    				return true;
    			}
    		});
    	}
    	
    	protected void addErrorToResource(org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3LocalizedMessage message) {
    		if (message == null) {
    			return;
    		}
    		addErrorToResource(message.getMessage(), message.getColumn(), message.getLine(), message.getCharStart(), message.getCharEnd());
    	}
    	
    	public void addExpectedElement(EClass eClass, int expectationStartIndex, int expectationEndIndex) {
    		for (int expectationIndex = expectationStartIndex; expectationIndex <= expectationEndIndex; expectationIndex++) {
    			addExpectedElement(eClass, org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectationConstants.EXPECTATIONS[expectationIndex]);
    		}
    	}
    	
    	public void addExpectedElement(EClass eClass, int expectationIndex) {
    		addExpectedElement(eClass, org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectationConstants.EXPECTATIONS[expectationIndex]);
    	}
    	
    	public void addExpectedElement(EClass eClass, int[] ids) {
    		if (!this.rememberExpectedElements) {
    			return;
    		}
    		int terminalID = ids[0];
    		int followSetID = ids[1];
    		org.emftext.language.xpath3.resource.xpath3.IXpath3ExpectedElement terminal = org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3FollowSetProvider.TERMINALS[terminalID];
    		org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ContainedFeature[] containmentFeatures = new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ContainedFeature[ids.length - 2];
    		for (int i = 2; i < ids.length; i++) {
    			containmentFeatures[i - 2] = org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3FollowSetProvider.LINKS[ids[i]];
    		}
    		org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3ContainmentTrace containmentTrace = new org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3ContainmentTrace(eClass, containmentFeatures);
    		EObject container = getLastIncompleteElement();
    		org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectedTerminal expectedElement = new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectedTerminal(container, terminal, followSetID, containmentTrace);
    		setPosition(expectedElement, input.index());
    		int startIncludingHiddenTokens = expectedElement.getStartIncludingHiddenTokens();
    		lastStartIncludingHidden = startIncludingHiddenTokens;
    		this.expectedElements.add(expectedElement);
    	}
    	
    	protected void collectHiddenTokens(EObject element) {
    	}
    	
    	protected void copyLocalizationInfos(final EObject source, final EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		final org.emftext.language.xpath3.resource.xpath3.IXpath3LocationMap locationMap = this.locationMap;
    		if (locationMap == null) {
    			// the locationMap can be null if the parser is used for code completion
    			return;
    		}
    		postParseCommands.add(new org.emftext.language.xpath3.resource.xpath3.IXpath3Command<org.emftext.language.xpath3.resource.xpath3.IXpath3TextResource>() {
    			public boolean execute(org.emftext.language.xpath3.resource.xpath3.IXpath3TextResource resource) {
    				locationMap.setCharStart(target, locationMap.getCharStart(source));
    				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
    				locationMap.setColumn(target, locationMap.getColumn(source));
    				locationMap.setLine(target, locationMap.getLine(source));
    				return true;
    			}
    		});
    	}
    	
    	protected void copyLocalizationInfos(final CommonToken source, final EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		final org.emftext.language.xpath3.resource.xpath3.IXpath3LocationMap locationMap = this.locationMap;
    		if (locationMap == null) {
    			// the locationMap can be null if the parser is used for code completion
    			return;
    		}
    		postParseCommands.add(new org.emftext.language.xpath3.resource.xpath3.IXpath3Command<org.emftext.language.xpath3.resource.xpath3.IXpath3TextResource>() {
    			public boolean execute(org.emftext.language.xpath3.resource.xpath3.IXpath3TextResource resource) {
    				if (source == null) {
    					return true;
    				}
    				locationMap.setCharStart(target, source.getStartIndex());
    				locationMap.setCharEnd(target, source.getStopIndex());
    				locationMap.setColumn(target, source.getCharPositionInLine());
    				locationMap.setLine(target, source.getLine());
    				return true;
    			}
    		});
    	}
    	
    	/**
    	 * Sets the end character index and the last line for the given object in the
    	 * location map.
    	 */
    	protected void setLocalizationEnd(Collection<org.emftext.language.xpath3.resource.xpath3.IXpath3Command<org.emftext.language.xpath3.resource.xpath3.IXpath3TextResource>> postParseCommands , final EObject object, final int endChar, final int endLine) {
    		if (disableLocationMap) {
    			return;
    		}
    		final org.emftext.language.xpath3.resource.xpath3.IXpath3LocationMap locationMap = this.locationMap;
    		if (locationMap == null) {
    			// the locationMap can be null if the parser is used for code completion
    			return;
    		}
    		postParseCommands.add(new org.emftext.language.xpath3.resource.xpath3.IXpath3Command<org.emftext.language.xpath3.resource.xpath3.IXpath3TextResource>() {
    			public boolean execute(org.emftext.language.xpath3.resource.xpath3.IXpath3TextResource resource) {
    				locationMap.setCharEnd(object, endChar);
    				locationMap.setLine(object, endLine);
    				return true;
    			}
    		});
    	}
    	
    	public org.emftext.language.xpath3.resource.xpath3.IXpath3TextParser createInstance(InputStream actualInputStream, String encoding) {
    		try {
    			if (encoding == null) {
    				return new Xpath3Parser(new CommonTokenStream(new Xpath3Lexer(new ANTLRInputStream(actualInputStream))));
    			} else {
    				return new Xpath3Parser(new CommonTokenStream(new Xpath3Lexer(new ANTLRInputStream(actualInputStream, encoding))));
    			}
    		} catch (IOException e) {
    			new org.emftext.language.xpath3.resource.xpath3.util.Xpath3RuntimeUtil().logError("Error while creating parser.", e);
    			return null;
    		}
    	}
    	
    	/**
    	 * This default constructor is only used to call createInstance() on it.
    	 */
    	public Xpath3Parser() {
    		super(null);
    	}
    	
    	protected EObject doParse() throws RecognitionException {
    		this.lastPosition = 0;
    		// required because the lexer class can not be subclassed
    		((Xpath3Lexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
    		((Xpath3Lexer) getTokenStream().getTokenSource()).lexerExceptionPositions = lexerExceptionPositions;
    		Object typeObject = getTypeObject();
    		if (typeObject == null) {
    			return start();
    		} else if (typeObject instanceof EClass) {
    			EClass type = (EClass) typeObject;
    			if (type.getInstanceClass() == org.emftext.language.xpath3.Expr.class) {
    				return parse_org_emftext_language_xpath3_Expr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.ForExpr.class) {
    				return parse_org_emftext_language_xpath3_ForExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.QuantifiedExpr.class) {
    				return parse_org_emftext_language_xpath3_QuantifiedExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.Iterator.class) {
    				return parse_org_emftext_language_xpath3_Iterator();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.IfExpr.class) {
    				return parse_org_emftext_language_xpath3_IfExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.OrExpr.class) {
    				return parse_org_emftext_language_xpath3_OrExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.AndExpr.class) {
    				return parse_org_emftext_language_xpath3_AndExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.ComparisonExpr.class) {
    				return parse_org_emftext_language_xpath3_ComparisonExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.RangeExpr.class) {
    				return parse_org_emftext_language_xpath3_RangeExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.GeneralComp.class) {
    				return parse_org_emftext_language_xpath3_GeneralComp();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.ValueComp.class) {
    				return parse_org_emftext_language_xpath3_ValueComp();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.NodeComp.class) {
    				return parse_org_emftext_language_xpath3_NodeComp();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.AdditiveExpr.class) {
    				return parse_org_emftext_language_xpath3_AdditiveExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.MultiplicativeExpr.class) {
    				return parse_org_emftext_language_xpath3_MultiplicativeExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.UnionExpr.class) {
    				return parse_org_emftext_language_xpath3_UnionExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.IntersectExceptExpr.class) {
    				return parse_org_emftext_language_xpath3_IntersectExceptExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.InstanceofExpr.class) {
    				return parse_org_emftext_language_xpath3_InstanceofExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.TreatExpr.class) {
    				return parse_org_emftext_language_xpath3_TreatExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.CastableExpr.class) {
    				return parse_org_emftext_language_xpath3_CastableExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.CastExpr.class) {
    				return parse_org_emftext_language_xpath3_CastExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.UnaryExpr.class) {
    				return parse_org_emftext_language_xpath3_UnaryExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.FilterExpr.class) {
    				return parse_org_emftext_language_xpath3_FilterExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.FunctionCall.class) {
    				return parse_org_emftext_language_xpath3_FunctionCall();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.PathExpr.class) {
    				return parse_org_emftext_language_xpath3_PathExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.ChildStepExpr.class) {
    				return parse_org_emftext_language_xpath3_ChildStepExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.DescOrSelfStepExpr.class) {
    				return parse_org_emftext_language_xpath3_DescOrSelfStepExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.RootStepExpr.class) {
    				return parse_org_emftext_language_xpath3_RootStepExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.SelfStepExpr.class) {
    				return parse_org_emftext_language_xpath3_SelfStepExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.GeneralForwardStep.class) {
    				return parse_org_emftext_language_xpath3_GeneralForwardStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.AbbrevForwardStep.class) {
    				return parse_org_emftext_language_xpath3_AbbrevForwardStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.GeneralReverseStep.class) {
    				return parse_org_emftext_language_xpath3_GeneralReverseStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.AbbrevReverseStep.class) {
    				return parse_org_emftext_language_xpath3_AbbrevReverseStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.NodeKindTest.class) {
    				return parse_org_emftext_language_xpath3_NodeKindTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.QNameTest.class) {
    				return parse_org_emftext_language_xpath3_QNameTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.AnyWildcard.class) {
    				return parse_org_emftext_language_xpath3_AnyWildcard();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.LocalNameWildcard.class) {
    				return parse_org_emftext_language_xpath3_LocalNameWildcard();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.NamespaceWildcard.class) {
    				return parse_org_emftext_language_xpath3_NamespaceWildcard();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.Predicate.class) {
    				return parse_org_emftext_language_xpath3_Predicate();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.VarRef.class) {
    				return parse_org_emftext_language_xpath3_VarRef();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.ParenthesizedExpr.class) {
    				return parse_org_emftext_language_xpath3_ParenthesizedExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.ContextItemExpr.class) {
    				return parse_org_emftext_language_xpath3_ContextItemExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.SingleType.class) {
    				return parse_org_emftext_language_xpath3_SingleType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.EmptySequenceType.class) {
    				return parse_org_emftext_language_xpath3_EmptySequenceType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.ItemSequenceType.class) {
    				return parse_org_emftext_language_xpath3_ItemSequenceType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.ItemKindTest.class) {
    				return parse_org_emftext_language_xpath3_ItemKindTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.AnyItemType.class) {
    				return parse_org_emftext_language_xpath3_AnyItemType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.AtomicItemType.class) {
    				return parse_org_emftext_language_xpath3_AtomicItemType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.AtomicType.class) {
    				return parse_org_emftext_language_xpath3_AtomicType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.OptionalAtomicType.class) {
    				return parse_org_emftext_language_xpath3_OptionalAtomicType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.AnyKindTest.class) {
    				return parse_org_emftext_language_xpath3_AnyKindTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.DocumentTest.class) {
    				return parse_org_emftext_language_xpath3_DocumentTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.TextTest.class) {
    				return parse_org_emftext_language_xpath3_TextTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.CommentTest.class) {
    				return parse_org_emftext_language_xpath3_CommentTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.PITest.class) {
    				return parse_org_emftext_language_xpath3_PITest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.NCNamePITest.class) {
    				return parse_org_emftext_language_xpath3_NCNamePITest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.StringLiteralPITest.class) {
    				return parse_org_emftext_language_xpath3_StringLiteralPITest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.AttributeTest.class) {
    				return parse_org_emftext_language_xpath3_AttributeTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.WildcardAttributeTest.class) {
    				return parse_org_emftext_language_xpath3_WildcardAttributeTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.NameAttributeTest.class) {
    				return parse_org_emftext_language_xpath3_NameAttributeTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.SchemaAttributeTest.class) {
    				return parse_org_emftext_language_xpath3_SchemaAttributeTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.ElementTest.class) {
    				return parse_org_emftext_language_xpath3_ElementTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.WildcardElementTest.class) {
    				return parse_org_emftext_language_xpath3_WildcardElementTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.NameElementTest.class) {
    				return parse_org_emftext_language_xpath3_NameElementTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.SchemaElementTest.class) {
    				return parse_org_emftext_language_xpath3_SchemaElementTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.IntegerLiteral.class) {
    				return parse_org_emftext_language_xpath3_IntegerLiteral();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.DecimalLiteral.class) {
    				return parse_org_emftext_language_xpath3_DecimalLiteral();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.DoubleLiteral.class) {
    				return parse_org_emftext_language_xpath3_DoubleLiteral();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath3.StringLiteral.class) {
    				return parse_org_emftext_language_xpath3_StringLiteral();
    			}
    		}
    		throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3UnexpectedContentTypeException(typeObject);
    	}
    	
    	public int getMismatchedTokenRecoveryTries() {
    		return mismatchedTokenRecoveryTries;
    	}
    	
    	public Object getMissingSymbol(IntStream arg0, RecognitionException arg1, int arg2, BitSet arg3) {
    		mismatchedTokenRecoveryTries++;
    		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
    	}
    	
    	public Object getParseToIndexTypeObject() {
    		return parseToIndexTypeObject;
    	}
    	
    	protected Object getTypeObject() {
    		Object typeObject = getParseToIndexTypeObject();
    		if (typeObject != null) {
    			return typeObject;
    		}
    		Map<?,?> options = getOptions();
    		if (options != null) {
    			typeObject = options.get(org.emftext.language.xpath3.resource.xpath3.IXpath3Options.RESOURCE_CONTENT_TYPE);
    		}
    		return typeObject;
    	}
    	
    	/**
    	 * Implementation that calls {@link #doParse()} and handles the thrown
    	 * RecognitionExceptions.
    	 */
    	public org.emftext.language.xpath3.resource.xpath3.IXpath3ParseResult parse() {
    		// Reset parser state
    		terminateParsing = false;
    		postParseCommands = new ArrayList<org.emftext.language.xpath3.resource.xpath3.IXpath3Command<org.emftext.language.xpath3.resource.xpath3.IXpath3TextResource>>();
    		org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ParseResult parseResult = new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ParseResult();
    		if (disableLocationMap) {
    			locationMap = new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3DevNullLocationMap();
    		} else {
    			locationMap = new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3LocationMap();
    		}
    		// Run parser
    		try {
    			EObject result =  doParse();
    			if (lexerExceptions.isEmpty()) {
    				parseResult.setRoot(result);
    				parseResult.setLocationMap(locationMap);
    			}
    		} catch (RecognitionException re) {
    			addErrorToResource(syntaxErrorMessageConverter.translateParseError(re));
    		} catch (IllegalArgumentException iae) {
    			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
    				// can be caused if a null is set on EMF models where not allowed. this will just
    				// happen if other errors occurred before
    			} else {
    				iae.printStackTrace();
    			}
    		}
    		for (RecognitionException re : lexerExceptions) {
    			addErrorToResource(syntaxErrorMessageConverter.translateLexicalError(re, lexerExceptions, lexerExceptionPositions));
    		}
    		parseResult.getPostParseCommands().addAll(postParseCommands);
    		return parseResult;
    	}
    	
    	public List<org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectedTerminal> parseToExpectedElements(EClass type, org.emftext.language.xpath3.resource.xpath3.IXpath3TextResource dummyResource, int cursorOffset) {
    		this.rememberExpectedElements = true;
    		this.parseToIndexTypeObject = type;
    		this.cursorOffset = cursorOffset;
    		this.lastStartIncludingHidden = -1;
    		final CommonTokenStream tokenStream = (CommonTokenStream) getTokenStream();
    		org.emftext.language.xpath3.resource.xpath3.IXpath3ParseResult result = parse();
    		for (EObject incompleteObject : incompleteObjects) {
    			Lexer lexer = (Lexer) tokenStream.getTokenSource();
    			int endChar = lexer.getCharIndex();
    			int endLine = lexer.getLine();
    			setLocalizationEnd(result.getPostParseCommands(), incompleteObject, endChar, endLine);
    		}
    		if (result != null) {
    			EObject root = result.getRoot();
    			if (root != null) {
    				dummyResource.getContentsInternal().add(root);
    			}
    			for (org.emftext.language.xpath3.resource.xpath3.IXpath3Command<org.emftext.language.xpath3.resource.xpath3.IXpath3TextResource> command : result.getPostParseCommands()) {
    				command.execute(dummyResource);
    			}
    		}
    		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
    		Set<org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectedTerminal> currentFollowSet = new LinkedHashSet<org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectedTerminal>();
    		List<org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectedTerminal> newFollowSet = new ArrayList<org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectedTerminal>();
    		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
    			org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectedTerminal expectedElementI = expectedElements.get(i);
    			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
    				currentFollowSet.add(expectedElementI);
    			} else {
    				break;
    			}
    		}
    		int followSetID = 246;
    		int i;
    		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
    			CommonToken nextToken = (CommonToken) tokenStream.get(i);
    			if (nextToken.getType() < 0) {
    				break;
    			}
    			if (nextToken.getChannel() == 99) {
    				// hidden tokens do not reduce the follow set
    			} else {
    				// now that we have found the next visible token the position for that expected
    				// terminals can be set
    				for (org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectedTerminal nextFollow : newFollowSet) {
    					lastTokenIndex = 0;
    					setPosition(nextFollow, i);
    				}
    				newFollowSet.clear();
    				// normal tokens do reduce the follow set - only elements that match the token are
    				// kept
    				for (org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectedTerminal nextFollow : currentFollowSet) {
    					if (nextFollow.getTerminal().getTokenNames().contains(getTokenNames()[nextToken.getType()])) {
    						// keep this one - it matches
    						Collection<org.emftext.language.xpath3.resource.xpath3.util.Xpath3Pair<org.emftext.language.xpath3.resource.xpath3.IXpath3ExpectedElement, org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ContainedFeature[]>> newFollowers = nextFollow.getTerminal().getFollowers();
    						for (org.emftext.language.xpath3.resource.xpath3.util.Xpath3Pair<org.emftext.language.xpath3.resource.xpath3.IXpath3ExpectedElement, org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ContainedFeature[]> newFollowerPair : newFollowers) {
    							org.emftext.language.xpath3.resource.xpath3.IXpath3ExpectedElement newFollower = newFollowerPair.getLeft();
    							EObject container = getLastIncompleteElement();
    							org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3ContainmentTrace containmentTrace = new org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3ContainmentTrace(null, newFollowerPair.getRight());
    							org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectedTerminal newFollowTerminal = new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectedTerminal(container, newFollower, followSetID, containmentTrace);
    							newFollowSet.add(newFollowTerminal);
    							expectedElements.add(newFollowTerminal);
    						}
    					}
    				}
    				currentFollowSet.clear();
    				currentFollowSet.addAll(newFollowSet);
    			}
    			followSetID++;
    		}
    		// after the last token in the stream we must set the position for the elements
    		// that were added during the last iteration of the loop
    		for (org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectedTerminal nextFollow : newFollowSet) {
    			lastTokenIndex = 0;
    			setPosition(nextFollow, i);
    		}
    		return this.expectedElements;
    	}
    	
    	public void setPosition(org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ExpectedTerminal expectedElement, int tokenIndex) {
    		int currentIndex = Math.max(0, tokenIndex);
    		for (int index = lastTokenIndex; index < currentIndex; index++) {
    			if (index >= input.size()) {
    				break;
    			}
    			CommonToken tokenAtIndex = (CommonToken) input.get(index);
    			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			if (tokenAtIndex.getChannel() != 99 && !anonymousTokens.contains(tokenAtIndex)) {
    				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			}
    		}
    		lastTokenIndex = Math.max(0, currentIndex);
    		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
    	}
    	
    	public Object recoverFromMismatchedToken(IntStream input, int ttype, BitSet follow) throws RecognitionException {
    		if (!rememberExpectedElements) {
    			return super.recoverFromMismatchedToken(input, ttype, follow);
    		} else {
    			return null;
    		}
    	}
    	
    	private void startIncompleteElement(Object object) {
    		if (object instanceof EObject) {
    			this.incompleteObjects.add((EObject) object);
    		}
    	}
    	
    	private void completedElement(Object object, boolean isContainment) {
    		if (isContainment && !this.incompleteObjects.isEmpty()) {
    			this.incompleteObjects.remove(object);
    		}
    		if (object instanceof EObject) {
    			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
    			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
    		}
    	}
    	
    	private EObject getLastIncompleteElement() {
    		if (incompleteObjects.isEmpty()) {
    			return null;
    		}
    		return incompleteObjects.get(incompleteObjects.size() - 1);
    	}
    	



    // $ANTLR start "start"
    // Xpath3.g:683:1: start returns [ EObject element = null] : (c0= parse_org_emftext_language_xpath3_Expr ) EOF ;
    public final EObject start() throws RecognitionException {
        EObject element =  null;

        int start_StartIndex = input.index();

        org.emftext.language.xpath3.Expr c0 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return element; }

            // Xpath3.g:684:2: ( (c0= parse_org_emftext_language_xpath3_Expr ) EOF )
            // Xpath3.g:685:2: (c0= parse_org_emftext_language_xpath3_Expr ) EOF
            {
            if ( state.backtracking==0 ) {
            		// follow set for start rule(s)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getExpr(), 0, 90);
            		expectedElementsIndexOfLastCompleteElement = 90;
            	}

            // Xpath3.g:690:2: (c0= parse_org_emftext_language_xpath3_Expr )
            // Xpath3.g:691:3: c0= parse_org_emftext_language_xpath3_Expr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_Expr_in_start82);
            c0=parse_org_emftext_language_xpath3_Expr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) { element = c0; }

            }


            match(input,EOF,FOLLOW_EOF_in_start89); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		retrieveLayoutInformation(element, null, null, false);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 1, start_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "start"



    // $ANTLR start "parse_org_emftext_language_xpath3_Expr"
    // Xpath3.g:699:1: parse_org_emftext_language_xpath3_Expr returns [org.emftext.language.xpath3.Expr element = null] : (a0_0= parse_org_emftext_language_xpath3_IfExpr |a0_1= parse_org_emftext_language_xpath3_ForExpr |a0_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a0_3= parse_org_emftext_language_xpath3_OrExpr ) ( (a1= ',' (a2_0= parse_org_emftext_language_xpath3_IfExpr |a2_1= parse_org_emftext_language_xpath3_ForExpr |a2_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a2_3= parse_org_emftext_language_xpath3_OrExpr ) ) )* ;
    public final org.emftext.language.xpath3.Expr parse_org_emftext_language_xpath3_Expr() throws RecognitionException {
        org.emftext.language.xpath3.Expr element =  null;

        int parse_org_emftext_language_xpath3_Expr_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath3.IfExpr a0_0 =null;

        org.emftext.language.xpath3.ForExpr a0_1 =null;

        org.emftext.language.xpath3.QuantifiedExpr a0_2 =null;

        org.emftext.language.xpath3.OrExpr a0_3 =null;

        org.emftext.language.xpath3.IfExpr a2_0 =null;

        org.emftext.language.xpath3.ForExpr a2_1 =null;

        org.emftext.language.xpath3.QuantifiedExpr a2_2 =null;

        org.emftext.language.xpath3.OrExpr a2_3 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return element; }

            // Xpath3.g:702:2: ( (a0_0= parse_org_emftext_language_xpath3_IfExpr |a0_1= parse_org_emftext_language_xpath3_ForExpr |a0_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a0_3= parse_org_emftext_language_xpath3_OrExpr ) ( (a1= ',' (a2_0= parse_org_emftext_language_xpath3_IfExpr |a2_1= parse_org_emftext_language_xpath3_ForExpr |a2_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a2_3= parse_org_emftext_language_xpath3_OrExpr ) ) )* )
            // Xpath3.g:703:2: (a0_0= parse_org_emftext_language_xpath3_IfExpr |a0_1= parse_org_emftext_language_xpath3_ForExpr |a0_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a0_3= parse_org_emftext_language_xpath3_OrExpr ) ( (a1= ',' (a2_0= parse_org_emftext_language_xpath3_IfExpr |a2_1= parse_org_emftext_language_xpath3_ForExpr |a2_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a2_3= parse_org_emftext_language_xpath3_OrExpr ) ) )*
            {
            // Xpath3.g:703:2: (a0_0= parse_org_emftext_language_xpath3_IfExpr |a0_1= parse_org_emftext_language_xpath3_ForExpr |a0_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a0_3= parse_org_emftext_language_xpath3_OrExpr )
            int alt1=4;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt1=1;
                }
                break;
            case 57:
                {
                alt1=2;
                }
                break;
            case 53:
            case 84:
                {
                alt1=3;
                }
                break;
            case DECIMAL_LITERAL:
            case DOUBLE_LITERAL:
            case INTEGER_LITERAL:
            case NCNAME:
            case QNAME:
            case STRING_LITERAL:
            case 12:
            case 13:
            case 15:
            case 16:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 33:
            case 36:
            case 37:
            case 40:
            case 43:
            case 44:
            case 45:
            case 46:
            case 48:
            case 49:
            case 55:
            case 56:
            case 70:
            case 72:
            case 75:
            case 76:
            case 77:
            case 78:
            case 81:
            case 82:
            case 83:
            case 85:
                {
                alt1=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;

            }

            switch (alt1) {
                case 1 :
                    // Xpath3.g:704:3: a0_0= parse_org_emftext_language_xpath3_IfExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_Expr119);
                    a0_0=parse_org_emftext_language_xpath3_IfExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, org.emftext.language.xpath3.XPath3Package.EXPR__EXPR, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_0_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xpath3.g:723:6: a0_1= parse_org_emftext_language_xpath3_ForExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_Expr133);
                    a0_1=parse_org_emftext_language_xpath3_ForExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, org.emftext.language.xpath3.XPath3Package.EXPR__EXPR, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_0_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xpath3.g:742:6: a0_2= parse_org_emftext_language_xpath3_QuantifiedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_Expr147);
                    a0_2=parse_org_emftext_language_xpath3_QuantifiedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, org.emftext.language.xpath3.XPath3Package.EXPR__EXPR, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_0_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xpath3.g:761:6: a0_3= parse_org_emftext_language_xpath3_OrExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_Expr161);
                    a0_3=parse_org_emftext_language_xpath3_OrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					addObjectToList(element, org.emftext.language.xpath3.XPath3Package.EXPR__EXPR, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_0_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 91, 94);
            	}

            // Xpath3.g:786:2: ( (a1= ',' (a2_0= parse_org_emftext_language_xpath3_IfExpr |a2_1= parse_org_emftext_language_xpath3_ForExpr |a2_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a2_3= parse_org_emftext_language_xpath3_OrExpr ) ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==17) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // Xpath3.g:787:3: (a1= ',' (a2_0= parse_org_emftext_language_xpath3_IfExpr |a2_1= parse_org_emftext_language_xpath3_ForExpr |a2_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a2_3= parse_org_emftext_language_xpath3_OrExpr ) )
            	    {
            	    // Xpath3.g:787:3: (a1= ',' (a2_0= parse_org_emftext_language_xpath3_IfExpr |a2_1= parse_org_emftext_language_xpath3_ForExpr |a2_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a2_3= parse_org_emftext_language_xpath3_OrExpr ) )
            	    // Xpath3.g:788:4: a1= ',' (a2_0= parse_org_emftext_language_xpath3_IfExpr |a2_1= parse_org_emftext_language_xpath3_ForExpr |a2_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a2_3= parse_org_emftext_language_xpath3_OrExpr )
            	    {
            	    a1=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath3_Expr188); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_0_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getExpr(), 95, 185);
            	    			}

            	    // Xpath3.g:802:4: (a2_0= parse_org_emftext_language_xpath3_IfExpr |a2_1= parse_org_emftext_language_xpath3_ForExpr |a2_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a2_3= parse_org_emftext_language_xpath3_OrExpr )
            	    int alt2=4;
            	    switch ( input.LA(1) ) {
            	    case 61:
            	        {
            	        alt2=1;
            	        }
            	        break;
            	    case 57:
            	        {
            	        alt2=2;
            	        }
            	        break;
            	    case 53:
            	    case 84:
            	        {
            	        alt2=3;
            	        }
            	        break;
            	    case DECIMAL_LITERAL:
            	    case DOUBLE_LITERAL:
            	    case INTEGER_LITERAL:
            	    case NCNAME:
            	    case QNAME:
            	    case STRING_LITERAL:
            	    case 12:
            	    case 13:
            	    case 15:
            	    case 16:
            	    case 18:
            	    case 19:
            	    case 20:
            	    case 21:
            	    case 22:
            	    case 33:
            	    case 36:
            	    case 37:
            	    case 40:
            	    case 43:
            	    case 44:
            	    case 45:
            	    case 46:
            	    case 48:
            	    case 49:
            	    case 55:
            	    case 56:
            	    case 70:
            	    case 72:
            	    case 75:
            	    case 76:
            	    case 77:
            	    case 78:
            	    case 81:
            	    case 82:
            	    case 83:
            	    case 85:
            	        {
            	        alt2=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 2, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt2) {
            	        case 1 :
            	            // Xpath3.g:803:5: a2_0= parse_org_emftext_language_xpath3_IfExpr
            	            {
            	            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_Expr214);
            	            a2_0=parse_org_emftext_language_xpath3_IfExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_0 != null) {
            	            						if (a2_0 != null) {
            	            							Object value = a2_0;
            	            							addObjectToList(element, org.emftext.language.xpath3.XPath3Package.EXPR__EXPR, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_0_0_0_1_0_0_1, a2_0, true);
            	            						copyLocalizationInfos(a2_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath3.g:822:10: a2_1= parse_org_emftext_language_xpath3_ForExpr
            	            {
            	            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_Expr234);
            	            a2_1=parse_org_emftext_language_xpath3_ForExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_1 != null) {
            	            						if (a2_1 != null) {
            	            							Object value = a2_1;
            	            							addObjectToList(element, org.emftext.language.xpath3.XPath3Package.EXPR__EXPR, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_0_0_0_1_0_0_1, a2_1, true);
            	            						copyLocalizationInfos(a2_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xpath3.g:841:10: a2_2= parse_org_emftext_language_xpath3_QuantifiedExpr
            	            {
            	            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_Expr254);
            	            a2_2=parse_org_emftext_language_xpath3_QuantifiedExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_2 != null) {
            	            						if (a2_2 != null) {
            	            							Object value = a2_2;
            	            							addObjectToList(element, org.emftext.language.xpath3.XPath3Package.EXPR__EXPR, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_0_0_0_1_0_0_1, a2_2, true);
            	            						copyLocalizationInfos(a2_2, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 4 :
            	            // Xpath3.g:860:10: a2_3= parse_org_emftext_language_xpath3_OrExpr
            	            {
            	            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_Expr274);
            	            a2_3=parse_org_emftext_language_xpath3_OrExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_3 != null) {
            	            						if (a2_3 != null) {
            	            							Object value = a2_3;
            	            							addObjectToList(element, org.emftext.language.xpath3.XPath3Package.EXPR__EXPR, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_0_0_0_1_0_0_1, a2_3, true);
            	            						copyLocalizationInfos(a2_3, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				// We've found the last token for this rule. The constructed EObject is now
            	    				// complete.
            	    				completedElement(element, true);
            	    				addExpectedElement(null, 186, 189);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 190, 193);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 2, parse_org_emftext_language_xpath3_Expr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_Expr"



    // $ANTLR start "parse_org_emftext_language_xpath3_ForExpr"
    // Xpath3.g:900:1: parse_org_emftext_language_xpath3_ForExpr returns [org.emftext.language.xpath3.ForExpr element = null] : a0= 'for' (a1_0= parse_org_emftext_language_xpath3_Iterator ) ( (a2= ',' (a3_0= parse_org_emftext_language_xpath3_Iterator ) ) )* a4= 'return' (a5_0= parse_org_emftext_language_xpath3_ExprSingle ) ;
    public final org.emftext.language.xpath3.ForExpr parse_org_emftext_language_xpath3_ForExpr() throws RecognitionException {
        org.emftext.language.xpath3.ForExpr element =  null;

        int parse_org_emftext_language_xpath3_ForExpr_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a4=null;
        org.emftext.language.xpath3.Iterator a1_0 =null;

        org.emftext.language.xpath3.Iterator a3_0 =null;

        org.emftext.language.xpath3.ExprSingle a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return element; }

            // Xpath3.g:903:2: (a0= 'for' (a1_0= parse_org_emftext_language_xpath3_Iterator ) ( (a2= ',' (a3_0= parse_org_emftext_language_xpath3_Iterator ) ) )* a4= 'return' (a5_0= parse_org_emftext_language_xpath3_ExprSingle ) )
            // Xpath3.g:904:2: a0= 'for' (a1_0= parse_org_emftext_language_xpath3_Iterator ) ( (a2= ',' (a3_0= parse_org_emftext_language_xpath3_Iterator ) ) )* a4= 'return' (a5_0= parse_org_emftext_language_xpath3_ExprSingle )
            {
            a0=(Token)match(input,57,FOLLOW_57_in_parse_org_emftext_language_xpath3_ForExpr330); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createForExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_1_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getForExpr(), 194);
            	}

            // Xpath3.g:918:2: (a1_0= parse_org_emftext_language_xpath3_Iterator )
            // Xpath3.g:919:3: a1_0= parse_org_emftext_language_xpath3_Iterator
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_Iterator_in_parse_org_emftext_language_xpath3_ForExpr348);
            a1_0=parse_org_emftext_language_xpath3_Iterator();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createForExpr();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					addObjectToList(element, org.emftext.language.xpath3.XPath3Package.FOR_EXPR__ITERATOR, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_1_0_0_2, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 195, 196);
            	}

            // Xpath3.g:944:2: ( (a2= ',' (a3_0= parse_org_emftext_language_xpath3_Iterator ) ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==17) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // Xpath3.g:945:3: (a2= ',' (a3_0= parse_org_emftext_language_xpath3_Iterator ) )
            	    {
            	    // Xpath3.g:945:3: (a2= ',' (a3_0= parse_org_emftext_language_xpath3_Iterator ) )
            	    // Xpath3.g:946:4: a2= ',' (a3_0= parse_org_emftext_language_xpath3_Iterator )
            	    {
            	    a2=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath3_ForExpr375); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createForExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_1_0_0_3_0_0_0, null, true);
            	    				copyLocalizationInfos((CommonToken)a2, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getForExpr(), 197);
            	    			}

            	    // Xpath3.g:960:4: (a3_0= parse_org_emftext_language_xpath3_Iterator )
            	    // Xpath3.g:961:5: a3_0= parse_org_emftext_language_xpath3_Iterator
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_Iterator_in_parse_org_emftext_language_xpath3_ForExpr401);
            	    a3_0=parse_org_emftext_language_xpath3_Iterator();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createForExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a3_0 != null) {
            	    						if (a3_0 != null) {
            	    							Object value = a3_0;
            	    							addObjectToList(element, org.emftext.language.xpath3.XPath3Package.FOR_EXPR__ITERATOR, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_1_0_0_3_0_0_2, a3_0, true);
            	    						copyLocalizationInfos(a3_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, 198, 199);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 200, 201);
            	}

            a4=(Token)match(input,79,FOLLOW_79_in_parse_org_emftext_language_xpath3_ForExpr442); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createForExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_1_0_0_5, null, true);
            		copyLocalizationInfos((CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getForExpr(), 202, 1522);
            	}

            // Xpath3.g:1007:2: (a5_0= parse_org_emftext_language_xpath3_ExprSingle )
            // Xpath3.g:1008:3: a5_0= parse_org_emftext_language_xpath3_ExprSingle
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ExprSingle_in_parse_org_emftext_language_xpath3_ForExpr460);
            a5_0=parse_org_emftext_language_xpath3_ExprSingle();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createForExpr();
            				startIncompleteElement(element);
            			}
            			if (a5_0 != null) {
            				if (a5_0 != null) {
            					Object value = a5_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.FOR_EXPR__RETURN), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_1_0_0_7, a5_0, true);
            				copyLocalizationInfos(a5_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 1523, 1528);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 3, parse_org_emftext_language_xpath3_ForExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_ForExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_QuantifiedExpr"
    // Xpath3.g:1038:1: parse_org_emftext_language_xpath3_QuantifiedExpr returns [org.emftext.language.xpath3.QuantifiedExpr element = null] : ( (a0= 'some' |a1= 'every' ) ) (a4_0= parse_org_emftext_language_xpath3_Iterator ) ( (a5= ',' (a6_0= parse_org_emftext_language_xpath3_Iterator ) ) )* a7= 'satisfies' (a8_0= parse_org_emftext_language_xpath3_IfExpr |a8_1= parse_org_emftext_language_xpath3_ForExpr |a8_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a8_3= parse_org_emftext_language_xpath3_OrExpr ) ;
    public final org.emftext.language.xpath3.QuantifiedExpr parse_org_emftext_language_xpath3_QuantifiedExpr() throws RecognitionException {
        org.emftext.language.xpath3.QuantifiedExpr element =  null;

        int parse_org_emftext_language_xpath3_QuantifiedExpr_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a5=null;
        Token a7=null;
        org.emftext.language.xpath3.Iterator a4_0 =null;

        org.emftext.language.xpath3.Iterator a6_0 =null;

        org.emftext.language.xpath3.IfExpr a8_0 =null;

        org.emftext.language.xpath3.ForExpr a8_1 =null;

        org.emftext.language.xpath3.QuantifiedExpr a8_2 =null;

        org.emftext.language.xpath3.OrExpr a8_3 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return element; }

            // Xpath3.g:1041:2: ( ( (a0= 'some' |a1= 'every' ) ) (a4_0= parse_org_emftext_language_xpath3_Iterator ) ( (a5= ',' (a6_0= parse_org_emftext_language_xpath3_Iterator ) ) )* a7= 'satisfies' (a8_0= parse_org_emftext_language_xpath3_IfExpr |a8_1= parse_org_emftext_language_xpath3_ForExpr |a8_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a8_3= parse_org_emftext_language_xpath3_OrExpr ) )
            // Xpath3.g:1042:2: ( (a0= 'some' |a1= 'every' ) ) (a4_0= parse_org_emftext_language_xpath3_Iterator ) ( (a5= ',' (a6_0= parse_org_emftext_language_xpath3_Iterator ) ) )* a7= 'satisfies' (a8_0= parse_org_emftext_language_xpath3_IfExpr |a8_1= parse_org_emftext_language_xpath3_ForExpr |a8_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a8_3= parse_org_emftext_language_xpath3_OrExpr )
            {
            // Xpath3.g:1042:2: ( (a0= 'some' |a1= 'every' ) )
            // Xpath3.g:1043:3: (a0= 'some' |a1= 'every' )
            {
            // Xpath3.g:1043:3: (a0= 'some' |a1= 'every' )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==84) ) {
                alt5=1;
            }
            else if ( (LA5_0==53) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;

            }
            switch (alt5) {
                case 1 :
                    // Xpath3.g:1044:4: a0= 'some'
                    {
                    a0=(Token)match(input,84,FOLLOW_84_in_parse_org_emftext_language_xpath3_QuantifiedExpr502); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createQuantifiedExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_2_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getQuantifierKind().getEEnumLiteral(org.emftext.language.xpath3.QuantifierKind.SOME_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.QUANTIFIED_EXPR__QUANTIFIER), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath3.g:1057:8: a1= 'every'
                    {
                    a1=(Token)match(input,53,FOLLOW_53_in_parse_org_emftext_language_xpath3_QuantifiedExpr517); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createQuantifiedExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_2_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getQuantifierKind().getEEnumLiteral(org.emftext.language.xpath3.QuantifierKind.EVERY_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.QUANTIFIED_EXPR__QUANTIFIER), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getQuantifiedExpr(), 1529);
            	}

            // Xpath3.g:1077:2: (a4_0= parse_org_emftext_language_xpath3_Iterator )
            // Xpath3.g:1078:3: a4_0= parse_org_emftext_language_xpath3_Iterator
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_Iterator_in_parse_org_emftext_language_xpath3_QuantifiedExpr542);
            a4_0=parse_org_emftext_language_xpath3_Iterator();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createQuantifiedExpr();
            				startIncompleteElement(element);
            			}
            			if (a4_0 != null) {
            				if (a4_0 != null) {
            					Object value = a4_0;
            					addObjectToList(element, org.emftext.language.xpath3.XPath3Package.QUANTIFIED_EXPR__ITERATOR, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_2_0_0_2, a4_0, true);
            				copyLocalizationInfos(a4_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 1530, 1531);
            	}

            // Xpath3.g:1103:2: ( (a5= ',' (a6_0= parse_org_emftext_language_xpath3_Iterator ) ) )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==17) ) {
                    alt6=1;
                }


                switch (alt6) {
            	case 1 :
            	    // Xpath3.g:1104:3: (a5= ',' (a6_0= parse_org_emftext_language_xpath3_Iterator ) )
            	    {
            	    // Xpath3.g:1104:3: (a5= ',' (a6_0= parse_org_emftext_language_xpath3_Iterator ) )
            	    // Xpath3.g:1105:4: a5= ',' (a6_0= parse_org_emftext_language_xpath3_Iterator )
            	    {
            	    a5=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath3_QuantifiedExpr569); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createQuantifiedExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_2_0_0_3_0_0_0, null, true);
            	    				copyLocalizationInfos((CommonToken)a5, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getQuantifiedExpr(), 1532);
            	    			}

            	    // Xpath3.g:1119:4: (a6_0= parse_org_emftext_language_xpath3_Iterator )
            	    // Xpath3.g:1120:5: a6_0= parse_org_emftext_language_xpath3_Iterator
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_Iterator_in_parse_org_emftext_language_xpath3_QuantifiedExpr595);
            	    a6_0=parse_org_emftext_language_xpath3_Iterator();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createQuantifiedExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a6_0 != null) {
            	    						if (a6_0 != null) {
            	    							Object value = a6_0;
            	    							addObjectToList(element, org.emftext.language.xpath3.XPath3Package.QUANTIFIED_EXPR__ITERATOR, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_2_0_0_3_0_0_2, a6_0, true);
            	    						copyLocalizationInfos(a6_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, 1533, 1534);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 1535, 1536);
            	}

            a7=(Token)match(input,80,FOLLOW_80_in_parse_org_emftext_language_xpath3_QuantifiedExpr636); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createQuantifiedExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_2_0_0_4, null, true);
            		copyLocalizationInfos((CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getQuantifiedExpr(), 1537, 1627);
            	}

            // Xpath3.g:1166:2: (a8_0= parse_org_emftext_language_xpath3_IfExpr |a8_1= parse_org_emftext_language_xpath3_ForExpr |a8_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a8_3= parse_org_emftext_language_xpath3_OrExpr )
            int alt7=4;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt7=1;
                }
                break;
            case 57:
                {
                alt7=2;
                }
                break;
            case 53:
            case 84:
                {
                alt7=3;
                }
                break;
            case DECIMAL_LITERAL:
            case DOUBLE_LITERAL:
            case INTEGER_LITERAL:
            case NCNAME:
            case QNAME:
            case STRING_LITERAL:
            case 12:
            case 13:
            case 15:
            case 16:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 33:
            case 36:
            case 37:
            case 40:
            case 43:
            case 44:
            case 45:
            case 46:
            case 48:
            case 49:
            case 55:
            case 56:
            case 70:
            case 72:
            case 75:
            case 76:
            case 77:
            case 78:
            case 81:
            case 82:
            case 83:
            case 85:
                {
                alt7=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;

            }

            switch (alt7) {
                case 1 :
                    // Xpath3.g:1167:3: a8_0= parse_org_emftext_language_xpath3_IfExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_QuantifiedExpr654);
                    a8_0=parse_org_emftext_language_xpath3_IfExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createQuantifiedExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_0 != null) {
                    				if (a8_0 != null) {
                    					Object value = a8_0;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.QUANTIFIED_EXPR__SATISFIES), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_2_0_0_6, a8_0, true);
                    				copyLocalizationInfos(a8_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xpath3.g:1186:6: a8_1= parse_org_emftext_language_xpath3_ForExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_QuantifiedExpr668);
                    a8_1=parse_org_emftext_language_xpath3_ForExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createQuantifiedExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_1 != null) {
                    				if (a8_1 != null) {
                    					Object value = a8_1;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.QUANTIFIED_EXPR__SATISFIES), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_2_0_0_6, a8_1, true);
                    				copyLocalizationInfos(a8_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xpath3.g:1205:6: a8_2= parse_org_emftext_language_xpath3_QuantifiedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_QuantifiedExpr682);
                    a8_2=parse_org_emftext_language_xpath3_QuantifiedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createQuantifiedExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_2 != null) {
                    				if (a8_2 != null) {
                    					Object value = a8_2;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.QUANTIFIED_EXPR__SATISFIES), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_2_0_0_6, a8_2, true);
                    				copyLocalizationInfos(a8_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xpath3.g:1224:6: a8_3= parse_org_emftext_language_xpath3_OrExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_QuantifiedExpr696);
                    a8_3=parse_org_emftext_language_xpath3_OrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createQuantifiedExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_3 != null) {
                    				if (a8_3 != null) {
                    					Object value = a8_3;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.QUANTIFIED_EXPR__SATISFIES), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_2_0_0_6, a8_3, true);
                    				copyLocalizationInfos(a8_3, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 1628, 1633);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 4, parse_org_emftext_language_xpath3_QuantifiedExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_QuantifiedExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_Iterator"
    // Xpath3.g:1254:1: parse_org_emftext_language_xpath3_Iterator returns [org.emftext.language.xpath3.Iterator element = null] : a0= '$' ( (a1= QNAME ) | (a2= NCNAME ) ) a3= 'in' (a4_0= parse_org_emftext_language_xpath3_IfExpr |a4_1= parse_org_emftext_language_xpath3_ForExpr |a4_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a4_3= parse_org_emftext_language_xpath3_OrExpr ) ;
    public final org.emftext.language.xpath3.Iterator parse_org_emftext_language_xpath3_Iterator() throws RecognitionException {
        org.emftext.language.xpath3.Iterator element =  null;

        int parse_org_emftext_language_xpath3_Iterator_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        org.emftext.language.xpath3.IfExpr a4_0 =null;

        org.emftext.language.xpath3.ForExpr a4_1 =null;

        org.emftext.language.xpath3.QuantifiedExpr a4_2 =null;

        org.emftext.language.xpath3.OrExpr a4_3 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return element; }

            // Xpath3.g:1257:2: (a0= '$' ( (a1= QNAME ) | (a2= NCNAME ) ) a3= 'in' (a4_0= parse_org_emftext_language_xpath3_IfExpr |a4_1= parse_org_emftext_language_xpath3_ForExpr |a4_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a4_3= parse_org_emftext_language_xpath3_OrExpr ) )
            // Xpath3.g:1258:2: a0= '$' ( (a1= QNAME ) | (a2= NCNAME ) ) a3= 'in' (a4_0= parse_org_emftext_language_xpath3_IfExpr |a4_1= parse_org_emftext_language_xpath3_ForExpr |a4_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a4_3= parse_org_emftext_language_xpath3_OrExpr )
            {
            a0=(Token)match(input,12,FOLLOW_12_in_parse_org_emftext_language_xpath3_Iterator729); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIterator();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_3_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 1634, 1635);
            	}

            // Xpath3.g:1272:2: ( (a1= QNAME ) | (a2= NCNAME ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==QNAME) ) {
                alt8=1;
            }
            else if ( (LA8_0==NCNAME) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;

            }
            switch (alt8) {
                case 1 :
                    // Xpath3.g:1273:3: (a1= QNAME )
                    {
                    // Xpath3.g:1273:3: (a1= QNAME )
                    // Xpath3.g:1274:4: a1= QNAME
                    {
                    a1=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_Iterator752); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIterator();
                    					startIncompleteElement(element);
                    				}
                    				if (a1 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ITERATOR__VAR_NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a1).getLine(), ((CommonToken) a1).getCharPositionInLine(), ((CommonToken) a1).getStartIndex(), ((CommonToken) a1).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ITERATOR__VAR_NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_3_0_0_1_0_0_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a1, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, 1636);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath3.g:1310:6: (a2= NCNAME )
                    {
                    // Xpath3.g:1310:6: (a2= NCNAME )
                    // Xpath3.g:1311:4: a2= NCNAME
                    {
                    a2=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_Iterator790); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIterator();
                    					startIncompleteElement(element);
                    				}
                    				if (a2 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ITERATOR__VAR_NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a2).getLine(), ((CommonToken) a2).getCharPositionInLine(), ((CommonToken) a2).getStartIndex(), ((CommonToken) a2).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ITERATOR__VAR_NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_3_0_0_1_0_1_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a2, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, 1637);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 1638);
            	}

            a3=(Token)match(input,62,FOLLOW_62_in_parse_org_emftext_language_xpath3_Iterator824); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIterator();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_3_0_0_3, null, true);
            		copyLocalizationInfos((CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getIterator(), 1639, 1729);
            	}

            // Xpath3.g:1366:2: (a4_0= parse_org_emftext_language_xpath3_IfExpr |a4_1= parse_org_emftext_language_xpath3_ForExpr |a4_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a4_3= parse_org_emftext_language_xpath3_OrExpr )
            int alt9=4;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt9=1;
                }
                break;
            case 57:
                {
                alt9=2;
                }
                break;
            case 53:
            case 84:
                {
                alt9=3;
                }
                break;
            case DECIMAL_LITERAL:
            case DOUBLE_LITERAL:
            case INTEGER_LITERAL:
            case NCNAME:
            case QNAME:
            case STRING_LITERAL:
            case 12:
            case 13:
            case 15:
            case 16:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 33:
            case 36:
            case 37:
            case 40:
            case 43:
            case 44:
            case 45:
            case 46:
            case 48:
            case 49:
            case 55:
            case 56:
            case 70:
            case 72:
            case 75:
            case 76:
            case 77:
            case 78:
            case 81:
            case 82:
            case 83:
            case 85:
                {
                alt9=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;

            }

            switch (alt9) {
                case 1 :
                    // Xpath3.g:1367:3: a4_0= parse_org_emftext_language_xpath3_IfExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_Iterator842);
                    a4_0=parse_org_emftext_language_xpath3_IfExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIterator();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_0 != null) {
                    				if (a4_0 != null) {
                    					Object value = a4_0;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ITERATOR__LIST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_3_0_0_5, a4_0, true);
                    				copyLocalizationInfos(a4_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xpath3.g:1386:6: a4_1= parse_org_emftext_language_xpath3_ForExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_Iterator856);
                    a4_1=parse_org_emftext_language_xpath3_ForExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIterator();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_1 != null) {
                    				if (a4_1 != null) {
                    					Object value = a4_1;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ITERATOR__LIST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_3_0_0_5, a4_1, true);
                    				copyLocalizationInfos(a4_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xpath3.g:1405:6: a4_2= parse_org_emftext_language_xpath3_QuantifiedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_Iterator870);
                    a4_2=parse_org_emftext_language_xpath3_QuantifiedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIterator();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_2 != null) {
                    				if (a4_2 != null) {
                    					Object value = a4_2;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ITERATOR__LIST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_3_0_0_5, a4_2, true);
                    				copyLocalizationInfos(a4_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xpath3.g:1424:6: a4_3= parse_org_emftext_language_xpath3_OrExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_Iterator884);
                    a4_3=parse_org_emftext_language_xpath3_OrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIterator();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_3 != null) {
                    				if (a4_3 != null) {
                    					Object value = a4_3;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ITERATOR__LIST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_3_0_0_5, a4_3, true);
                    				copyLocalizationInfos(a4_3, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 1730, 1733);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 5, parse_org_emftext_language_xpath3_Iterator_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_Iterator"



    // $ANTLR start "parse_org_emftext_language_xpath3_IfExpr"
    // Xpath3.g:1454:1: parse_org_emftext_language_xpath3_IfExpr returns [org.emftext.language.xpath3.IfExpr element = null] : a0= 'if' a1= '(' (a2_0= parse_org_emftext_language_xpath3_Expr |a2_1= parse_org_emftext_language_xpath3_IfExpr |a2_2= parse_org_emftext_language_xpath3_ForExpr |a2_3= parse_org_emftext_language_xpath3_QuantifiedExpr |a2_4= parse_org_emftext_language_xpath3_OrExpr ) a3= ')' a4= 'then' (a5_0= parse_org_emftext_language_xpath3_IfExpr |a5_1= parse_org_emftext_language_xpath3_ForExpr |a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath3_OrExpr ) a6= 'else' (a7_0= parse_org_emftext_language_xpath3_IfExpr |a7_1= parse_org_emftext_language_xpath3_ForExpr |a7_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a7_3= parse_org_emftext_language_xpath3_OrExpr ) ;
    public final org.emftext.language.xpath3.IfExpr parse_org_emftext_language_xpath3_IfExpr() throws RecognitionException {
        org.emftext.language.xpath3.IfExpr element =  null;

        int parse_org_emftext_language_xpath3_IfExpr_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        org.emftext.language.xpath3.Expr a2_0 =null;

        org.emftext.language.xpath3.IfExpr a2_1 =null;

        org.emftext.language.xpath3.ForExpr a2_2 =null;

        org.emftext.language.xpath3.QuantifiedExpr a2_3 =null;

        org.emftext.language.xpath3.OrExpr a2_4 =null;

        org.emftext.language.xpath3.IfExpr a5_0 =null;

        org.emftext.language.xpath3.ForExpr a5_1 =null;

        org.emftext.language.xpath3.QuantifiedExpr a5_2 =null;

        org.emftext.language.xpath3.OrExpr a5_3 =null;

        org.emftext.language.xpath3.IfExpr a7_0 =null;

        org.emftext.language.xpath3.ForExpr a7_1 =null;

        org.emftext.language.xpath3.QuantifiedExpr a7_2 =null;

        org.emftext.language.xpath3.OrExpr a7_3 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return element; }

            // Xpath3.g:1457:2: (a0= 'if' a1= '(' (a2_0= parse_org_emftext_language_xpath3_Expr |a2_1= parse_org_emftext_language_xpath3_IfExpr |a2_2= parse_org_emftext_language_xpath3_ForExpr |a2_3= parse_org_emftext_language_xpath3_QuantifiedExpr |a2_4= parse_org_emftext_language_xpath3_OrExpr ) a3= ')' a4= 'then' (a5_0= parse_org_emftext_language_xpath3_IfExpr |a5_1= parse_org_emftext_language_xpath3_ForExpr |a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath3_OrExpr ) a6= 'else' (a7_0= parse_org_emftext_language_xpath3_IfExpr |a7_1= parse_org_emftext_language_xpath3_ForExpr |a7_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a7_3= parse_org_emftext_language_xpath3_OrExpr ) )
            // Xpath3.g:1458:2: a0= 'if' a1= '(' (a2_0= parse_org_emftext_language_xpath3_Expr |a2_1= parse_org_emftext_language_xpath3_IfExpr |a2_2= parse_org_emftext_language_xpath3_ForExpr |a2_3= parse_org_emftext_language_xpath3_QuantifiedExpr |a2_4= parse_org_emftext_language_xpath3_OrExpr ) a3= ')' a4= 'then' (a5_0= parse_org_emftext_language_xpath3_IfExpr |a5_1= parse_org_emftext_language_xpath3_ForExpr |a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath3_OrExpr ) a6= 'else' (a7_0= parse_org_emftext_language_xpath3_IfExpr |a7_1= parse_org_emftext_language_xpath3_ForExpr |a7_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a7_3= parse_org_emftext_language_xpath3_OrExpr )
            {
            a0=(Token)match(input,61,FOLLOW_61_in_parse_org_emftext_language_xpath3_IfExpr917); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 1734);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_IfExpr931); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_2, null, true);
            		copyLocalizationInfos((CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getIfExpr(), 1735, 1916);
            	}

            // Xpath3.g:1486:2: (a2_0= parse_org_emftext_language_xpath3_Expr |a2_1= parse_org_emftext_language_xpath3_IfExpr |a2_2= parse_org_emftext_language_xpath3_ForExpr |a2_3= parse_org_emftext_language_xpath3_QuantifiedExpr |a2_4= parse_org_emftext_language_xpath3_OrExpr )
            int alt10=5;
            switch ( input.LA(1) ) {
            case 61:
                {
                int LA10_1 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (synpred19_Xpath3()) ) {
                    alt10=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;

                }
                }
                break;
            case 57:
                {
                int LA10_2 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (synpred20_Xpath3()) ) {
                    alt10=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 2, input);

                    throw nvae;

                }
                }
                break;
            case 84:
                {
                int LA10_3 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (synpred21_Xpath3()) ) {
                    alt10=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 3, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA10_4 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (synpred21_Xpath3()) ) {
                    alt10=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 4, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA10_5 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 5, input);

                    throw nvae;

                }
                }
                break;
            case 18:
                {
                int LA10_6 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 6, input);

                    throw nvae;

                }
                }
                break;
            case QNAME:
                {
                int LA10_7 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 7, input);

                    throw nvae;

                }
                }
                break;
            case NCNAME:
                {
                int LA10_8 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 8, input);

                    throw nvae;

                }
                }
                break;
            case 12:
                {
                int LA10_9 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 9, input);

                    throw nvae;

                }
                }
                break;
            case 13:
                {
                int LA10_10 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 10, input);

                    throw nvae;

                }
                }
                break;
            case 19:
                {
                int LA10_11 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 11, input);

                    throw nvae;

                }
                }
                break;
            case INTEGER_LITERAL:
                {
                int LA10_12 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 12, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL_LITERAL:
                {
                int LA10_13 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 13, input);

                    throw nvae;

                }
                }
                break;
            case DOUBLE_LITERAL:
                {
                int LA10_14 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 14, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA10_15 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 15, input);

                    throw nvae;

                }
                }
                break;
            case 21:
                {
                int LA10_16 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 16, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA10_17 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 17, input);

                    throw nvae;

                }
                }
                break;
            case 43:
                {
                int LA10_18 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 18, input);

                    throw nvae;

                }
                }
                break;
            case 45:
                {
                int LA10_19 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 19, input);

                    throw nvae;

                }
                }
                break;
            case 40:
                {
                int LA10_20 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 20, input);

                    throw nvae;

                }
                }
                break;
            case 83:
                {
                int LA10_21 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 21, input);

                    throw nvae;

                }
                }
                break;
            case 46:
                {
                int LA10_22 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 22, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA10_23 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 23, input);

                    throw nvae;

                }
                }
                break;
            case 55:
                {
                int LA10_24 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 24, input);

                    throw nvae;

                }
                }
                break;
            case 70:
                {
                int LA10_25 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 25, input);

                    throw nvae;

                }
                }
                break;
            case 33:
                {
                int LA10_26 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 26, input);

                    throw nvae;

                }
                }
                break;
            case 72:
                {
                int LA10_27 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 27, input);

                    throw nvae;

                }
                }
                break;
            case 48:
                {
                int LA10_28 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 28, input);

                    throw nvae;

                }
                }
                break;
            case 85:
                {
                int LA10_29 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 29, input);

                    throw nvae;

                }
                }
                break;
            case 44:
                {
                int LA10_30 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 30, input);

                    throw nvae;

                }
                }
                break;
            case 78:
                {
                int LA10_31 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 31, input);

                    throw nvae;

                }
                }
                break;
            case 81:
                {
                int LA10_32 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 32, input);

                    throw nvae;

                }
                }
                break;
            case 49:
                {
                int LA10_33 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 33, input);

                    throw nvae;

                }
                }
                break;
            case 82:
                {
                int LA10_34 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 34, input);

                    throw nvae;

                }
                }
                break;
            case 15:
                {
                int LA10_35 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 35, input);

                    throw nvae;

                }
                }
                break;
            case 75:
                {
                int LA10_36 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 36, input);

                    throw nvae;

                }
                }
                break;
            case 36:
                {
                int LA10_37 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 37, input);

                    throw nvae;

                }
                }
                break;
            case 77:
                {
                int LA10_38 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 38, input);

                    throw nvae;

                }
                }
                break;
            case 76:
                {
                int LA10_39 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 39, input);

                    throw nvae;

                }
                }
                break;
            case 37:
                {
                int LA10_40 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 40, input);

                    throw nvae;

                }
                }
                break;
            case 20:
                {
                int LA10_41 = input.LA(2);

                if ( (synpred18_Xpath3()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 41, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;

            }

            switch (alt10) {
                case 1 :
                    // Xpath3.g:1487:3: a2_0= parse_org_emftext_language_xpath3_Expr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_Expr_in_parse_org_emftext_language_xpath3_IfExpr949);
                    a2_0=parse_org_emftext_language_xpath3_Expr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_0 != null) {
                    				if (a2_0 != null) {
                    					Object value = a2_0;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.IF_EXPR__TEST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_3, a2_0, true);
                    				copyLocalizationInfos(a2_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xpath3.g:1506:6: a2_1= parse_org_emftext_language_xpath3_IfExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_IfExpr963);
                    a2_1=parse_org_emftext_language_xpath3_IfExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_1 != null) {
                    				if (a2_1 != null) {
                    					Object value = a2_1;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.IF_EXPR__TEST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_3, a2_1, true);
                    				copyLocalizationInfos(a2_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xpath3.g:1525:6: a2_2= parse_org_emftext_language_xpath3_ForExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_IfExpr977);
                    a2_2=parse_org_emftext_language_xpath3_ForExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_2 != null) {
                    				if (a2_2 != null) {
                    					Object value = a2_2;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.IF_EXPR__TEST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_3, a2_2, true);
                    				copyLocalizationInfos(a2_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xpath3.g:1544:6: a2_3= parse_org_emftext_language_xpath3_QuantifiedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_IfExpr991);
                    a2_3=parse_org_emftext_language_xpath3_QuantifiedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_3 != null) {
                    				if (a2_3 != null) {
                    					Object value = a2_3;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.IF_EXPR__TEST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_3, a2_3, true);
                    				copyLocalizationInfos(a2_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xpath3.g:1563:6: a2_4= parse_org_emftext_language_xpath3_OrExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_IfExpr1005);
                    a2_4=parse_org_emftext_language_xpath3_OrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_4 != null) {
                    				if (a2_4 != null) {
                    					Object value = a2_4;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.IF_EXPR__TEST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_3, a2_4, true);
                    				copyLocalizationInfos(a2_4, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 1917);
            	}

            a3=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_IfExpr1023); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_4, null, true);
            		copyLocalizationInfos((CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 1918);
            	}

            a4=(Token)match(input,86,FOLLOW_86_in_parse_org_emftext_language_xpath3_IfExpr1037); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_6, null, true);
            		copyLocalizationInfos((CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getIfExpr(), 1919, 2009);
            	}

            // Xpath3.g:1616:2: (a5_0= parse_org_emftext_language_xpath3_IfExpr |a5_1= parse_org_emftext_language_xpath3_ForExpr |a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath3_OrExpr )
            int alt11=4;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt11=1;
                }
                break;
            case 57:
                {
                alt11=2;
                }
                break;
            case 53:
            case 84:
                {
                alt11=3;
                }
                break;
            case DECIMAL_LITERAL:
            case DOUBLE_LITERAL:
            case INTEGER_LITERAL:
            case NCNAME:
            case QNAME:
            case STRING_LITERAL:
            case 12:
            case 13:
            case 15:
            case 16:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 33:
            case 36:
            case 37:
            case 40:
            case 43:
            case 44:
            case 45:
            case 46:
            case 48:
            case 49:
            case 55:
            case 56:
            case 70:
            case 72:
            case 75:
            case 76:
            case 77:
            case 78:
            case 81:
            case 82:
            case 83:
            case 85:
                {
                alt11=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;

            }

            switch (alt11) {
                case 1 :
                    // Xpath3.g:1617:3: a5_0= parse_org_emftext_language_xpath3_IfExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_IfExpr1055);
                    a5_0=parse_org_emftext_language_xpath3_IfExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a5_0 != null) {
                    				if (a5_0 != null) {
                    					Object value = a5_0;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.IF_EXPR__THEN), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_8, a5_0, true);
                    				copyLocalizationInfos(a5_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xpath3.g:1636:6: a5_1= parse_org_emftext_language_xpath3_ForExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_IfExpr1069);
                    a5_1=parse_org_emftext_language_xpath3_ForExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a5_1 != null) {
                    				if (a5_1 != null) {
                    					Object value = a5_1;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.IF_EXPR__THEN), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_8, a5_1, true);
                    				copyLocalizationInfos(a5_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xpath3.g:1655:6: a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_IfExpr1083);
                    a5_2=parse_org_emftext_language_xpath3_QuantifiedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a5_2 != null) {
                    				if (a5_2 != null) {
                    					Object value = a5_2;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.IF_EXPR__THEN), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_8, a5_2, true);
                    				copyLocalizationInfos(a5_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xpath3.g:1674:6: a5_3= parse_org_emftext_language_xpath3_OrExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_IfExpr1097);
                    a5_3=parse_org_emftext_language_xpath3_OrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a5_3 != null) {
                    				if (a5_3 != null) {
                    					Object value = a5_3;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.IF_EXPR__THEN), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_8, a5_3, true);
                    				copyLocalizationInfos(a5_3, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 2010);
            	}

            a6=(Token)match(input,50,FOLLOW_50_in_parse_org_emftext_language_xpath3_IfExpr1115); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_10, null, true);
            		copyLocalizationInfos((CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getIfExpr(), 2011, 2101);
            	}

            // Xpath3.g:1713:2: (a7_0= parse_org_emftext_language_xpath3_IfExpr |a7_1= parse_org_emftext_language_xpath3_ForExpr |a7_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a7_3= parse_org_emftext_language_xpath3_OrExpr )
            int alt12=4;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt12=1;
                }
                break;
            case 57:
                {
                alt12=2;
                }
                break;
            case 53:
            case 84:
                {
                alt12=3;
                }
                break;
            case DECIMAL_LITERAL:
            case DOUBLE_LITERAL:
            case INTEGER_LITERAL:
            case NCNAME:
            case QNAME:
            case STRING_LITERAL:
            case 12:
            case 13:
            case 15:
            case 16:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 33:
            case 36:
            case 37:
            case 40:
            case 43:
            case 44:
            case 45:
            case 46:
            case 48:
            case 49:
            case 55:
            case 56:
            case 70:
            case 72:
            case 75:
            case 76:
            case 77:
            case 78:
            case 81:
            case 82:
            case 83:
            case 85:
                {
                alt12=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;

            }

            switch (alt12) {
                case 1 :
                    // Xpath3.g:1714:3: a7_0= parse_org_emftext_language_xpath3_IfExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_IfExpr1133);
                    a7_0=parse_org_emftext_language_xpath3_IfExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a7_0 != null) {
                    				if (a7_0 != null) {
                    					Object value = a7_0;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.IF_EXPR__ELSE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_12, a7_0, true);
                    				copyLocalizationInfos(a7_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xpath3.g:1733:6: a7_1= parse_org_emftext_language_xpath3_ForExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_IfExpr1147);
                    a7_1=parse_org_emftext_language_xpath3_ForExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a7_1 != null) {
                    				if (a7_1 != null) {
                    					Object value = a7_1;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.IF_EXPR__ELSE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_12, a7_1, true);
                    				copyLocalizationInfos(a7_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xpath3.g:1752:6: a7_2= parse_org_emftext_language_xpath3_QuantifiedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_IfExpr1161);
                    a7_2=parse_org_emftext_language_xpath3_QuantifiedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a7_2 != null) {
                    				if (a7_2 != null) {
                    					Object value = a7_2;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.IF_EXPR__ELSE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_12, a7_2, true);
                    				copyLocalizationInfos(a7_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xpath3.g:1771:6: a7_3= parse_org_emftext_language_xpath3_OrExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_IfExpr1175);
                    a7_3=parse_org_emftext_language_xpath3_OrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a7_3 != null) {
                    				if (a7_3 != null) {
                    					Object value = a7_3;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.IF_EXPR__ELSE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_4_0_0_12, a7_3, true);
                    				copyLocalizationInfos(a7_3, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 2102, 2107);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 6, parse_org_emftext_language_xpath3_IfExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_IfExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_OrExpr"
    // Xpath3.g:1801:1: parse_org_emftext_language_xpath3_OrExpr returns [org.emftext.language.xpath3.OrExpr element = null] : (a0_0= parse_org_emftext_language_xpath3_AndExpr ) ( (a1= 'or' (a2_0= parse_org_emftext_language_xpath3_AndExpr ) ) )* ;
    public final org.emftext.language.xpath3.OrExpr parse_org_emftext_language_xpath3_OrExpr() throws RecognitionException {
        org.emftext.language.xpath3.OrExpr element =  null;

        int parse_org_emftext_language_xpath3_OrExpr_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath3.AndExpr a0_0 =null;

        org.emftext.language.xpath3.AndExpr a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return element; }

            // Xpath3.g:1804:2: ( (a0_0= parse_org_emftext_language_xpath3_AndExpr ) ( (a1= 'or' (a2_0= parse_org_emftext_language_xpath3_AndExpr ) ) )* )
            // Xpath3.g:1805:2: (a0_0= parse_org_emftext_language_xpath3_AndExpr ) ( (a1= 'or' (a2_0= parse_org_emftext_language_xpath3_AndExpr ) ) )*
            {
            // Xpath3.g:1805:2: (a0_0= parse_org_emftext_language_xpath3_AndExpr )
            // Xpath3.g:1806:3: a0_0= parse_org_emftext_language_xpath3_AndExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AndExpr_in_parse_org_emftext_language_xpath3_OrExpr1212);
            a0_0=parse_org_emftext_language_xpath3_AndExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createOrExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath3.XPath3Package.OR_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_5_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 2108, 2114);
            	}

            // Xpath3.g:1831:2: ( (a1= 'or' (a2_0= parse_org_emftext_language_xpath3_AndExpr ) ) )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==74) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // Xpath3.g:1832:3: (a1= 'or' (a2_0= parse_org_emftext_language_xpath3_AndExpr ) )
            	    {
            	    // Xpath3.g:1832:3: (a1= 'or' (a2_0= parse_org_emftext_language_xpath3_AndExpr ) )
            	    // Xpath3.g:1833:4: a1= 'or' (a2_0= parse_org_emftext_language_xpath3_AndExpr )
            	    {
            	    a1=(Token)match(input,74,FOLLOW_74_in_parse_org_emftext_language_xpath3_OrExpr1239); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createOrExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_5_0_0_1_0_0_1, null, true);
            	    				copyLocalizationInfos((CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getOrExpr(), 2115, 2202);
            	    			}

            	    // Xpath3.g:1847:4: (a2_0= parse_org_emftext_language_xpath3_AndExpr )
            	    // Xpath3.g:1848:5: a2_0= parse_org_emftext_language_xpath3_AndExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AndExpr_in_parse_org_emftext_language_xpath3_OrExpr1265);
            	    a2_0=parse_org_emftext_language_xpath3_AndExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createOrExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a2_0 != null) {
            	    						if (a2_0 != null) {
            	    							Object value = a2_0;
            	    							addObjectToList(element, org.emftext.language.xpath3.XPath3Package.OR_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_5_0_0_1_0_0_3, a2_0, true);
            	    						copyLocalizationInfos(a2_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				// We've found the last token for this rule. The constructed EObject is now
            	    				// complete.
            	    				completedElement(element, true);
            	    				addExpectedElement(null, 2203, 2209);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 2210, 2216);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 7, parse_org_emftext_language_xpath3_OrExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_OrExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_AndExpr"
    // Xpath3.g:1888:1: parse_org_emftext_language_xpath3_AndExpr returns [org.emftext.language.xpath3.AndExpr element = null] : (a0_0= parse_org_emftext_language_xpath3_ComparisonExpr ) ( (a1= 'and' (a2_0= parse_org_emftext_language_xpath3_ComparisonExpr ) ) )* ;
    public final org.emftext.language.xpath3.AndExpr parse_org_emftext_language_xpath3_AndExpr() throws RecognitionException {
        org.emftext.language.xpath3.AndExpr element =  null;

        int parse_org_emftext_language_xpath3_AndExpr_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath3.ComparisonExpr a0_0 =null;

        org.emftext.language.xpath3.ComparisonExpr a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return element; }

            // Xpath3.g:1891:2: ( (a0_0= parse_org_emftext_language_xpath3_ComparisonExpr ) ( (a1= 'and' (a2_0= parse_org_emftext_language_xpath3_ComparisonExpr ) ) )* )
            // Xpath3.g:1892:2: (a0_0= parse_org_emftext_language_xpath3_ComparisonExpr ) ( (a1= 'and' (a2_0= parse_org_emftext_language_xpath3_ComparisonExpr ) ) )*
            {
            // Xpath3.g:1892:2: (a0_0= parse_org_emftext_language_xpath3_ComparisonExpr )
            // Xpath3.g:1893:3: a0_0= parse_org_emftext_language_xpath3_ComparisonExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ComparisonExpr_in_parse_org_emftext_language_xpath3_AndExpr1325);
            a0_0=parse_org_emftext_language_xpath3_ComparisonExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAndExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath3.XPath3Package.AND_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_6_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 2217, 2224);
            	}

            // Xpath3.g:1918:2: ( (a1= 'and' (a2_0= parse_org_emftext_language_xpath3_ComparisonExpr ) ) )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==38) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // Xpath3.g:1919:3: (a1= 'and' (a2_0= parse_org_emftext_language_xpath3_ComparisonExpr ) )
            	    {
            	    // Xpath3.g:1919:3: (a1= 'and' (a2_0= parse_org_emftext_language_xpath3_ComparisonExpr ) )
            	    // Xpath3.g:1920:4: a1= 'and' (a2_0= parse_org_emftext_language_xpath3_ComparisonExpr )
            	    {
            	    a1=(Token)match(input,38,FOLLOW_38_in_parse_org_emftext_language_xpath3_AndExpr1352); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAndExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_6_0_0_1_0_0_1, null, true);
            	    				copyLocalizationInfos((CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAndExpr(), 2225, 2312);
            	    			}

            	    // Xpath3.g:1934:4: (a2_0= parse_org_emftext_language_xpath3_ComparisonExpr )
            	    // Xpath3.g:1935:5: a2_0= parse_org_emftext_language_xpath3_ComparisonExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ComparisonExpr_in_parse_org_emftext_language_xpath3_AndExpr1378);
            	    a2_0=parse_org_emftext_language_xpath3_ComparisonExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAndExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a2_0 != null) {
            	    						if (a2_0 != null) {
            	    							Object value = a2_0;
            	    							addObjectToList(element, org.emftext.language.xpath3.XPath3Package.AND_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_6_0_0_1_0_0_3, a2_0, true);
            	    						copyLocalizationInfos(a2_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				// We've found the last token for this rule. The constructed EObject is now
            	    				// complete.
            	    				completedElement(element, true);
            	    				addExpectedElement(null, 2313, 2320);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 2321, 2328);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 8, parse_org_emftext_language_xpath3_AndExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_AndExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_ComparisonExpr"
    // Xpath3.g:1975:1: parse_org_emftext_language_xpath3_ComparisonExpr returns [org.emftext.language.xpath3.ComparisonExpr element = null] : (a0_0= parse_org_emftext_language_xpath3_RangeExpr ) ( ( (a1_0= parse_org_emftext_language_xpath3_Comp ) (a2_0= parse_org_emftext_language_xpath3_RangeExpr ) ) )? ;
    public final org.emftext.language.xpath3.ComparisonExpr parse_org_emftext_language_xpath3_ComparisonExpr() throws RecognitionException {
        org.emftext.language.xpath3.ComparisonExpr element =  null;

        int parse_org_emftext_language_xpath3_ComparisonExpr_StartIndex = input.index();

        org.emftext.language.xpath3.RangeExpr a0_0 =null;

        org.emftext.language.xpath3.Comp a1_0 =null;

        org.emftext.language.xpath3.RangeExpr a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return element; }

            // Xpath3.g:1978:2: ( (a0_0= parse_org_emftext_language_xpath3_RangeExpr ) ( ( (a1_0= parse_org_emftext_language_xpath3_Comp ) (a2_0= parse_org_emftext_language_xpath3_RangeExpr ) ) )? )
            // Xpath3.g:1979:2: (a0_0= parse_org_emftext_language_xpath3_RangeExpr ) ( ( (a1_0= parse_org_emftext_language_xpath3_Comp ) (a2_0= parse_org_emftext_language_xpath3_RangeExpr ) ) )?
            {
            // Xpath3.g:1979:2: (a0_0= parse_org_emftext_language_xpath3_RangeExpr )
            // Xpath3.g:1980:3: a0_0= parse_org_emftext_language_xpath3_RangeExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_RangeExpr_in_parse_org_emftext_language_xpath3_ComparisonExpr1438);
            a0_0=parse_org_emftext_language_xpath3_RangeExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createComparisonExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.COMPARISON_EXPR__LEFT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_7_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 2329, 2331);
            		addExpectedElement(null, 2332, 2339);
            	}

            // Xpath3.g:2006:2: ( ( (a1_0= parse_org_emftext_language_xpath3_Comp ) (a2_0= parse_org_emftext_language_xpath3_RangeExpr ) ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==11||(LA15_0 >= 25 && LA15_0 <= 31)||LA15_0==52||(LA15_0 >= 58 && LA15_0 <= 59)||LA15_0==65||(LA15_0 >= 67 && LA15_0 <= 68)||LA15_0==71) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // Xpath3.g:2007:3: ( (a1_0= parse_org_emftext_language_xpath3_Comp ) (a2_0= parse_org_emftext_language_xpath3_RangeExpr ) )
                    {
                    // Xpath3.g:2007:3: ( (a1_0= parse_org_emftext_language_xpath3_Comp ) (a2_0= parse_org_emftext_language_xpath3_RangeExpr ) )
                    // Xpath3.g:2008:4: (a1_0= parse_org_emftext_language_xpath3_Comp ) (a2_0= parse_org_emftext_language_xpath3_RangeExpr )
                    {
                    // Xpath3.g:2008:4: (a1_0= parse_org_emftext_language_xpath3_Comp )
                    // Xpath3.g:2009:5: a1_0= parse_org_emftext_language_xpath3_Comp
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_Comp_in_parse_org_emftext_language_xpath3_ComparisonExpr1471);
                    a1_0=parse_org_emftext_language_xpath3_Comp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createComparisonExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.COMPARISON_EXPR__OPERATOR), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_7_0_0_1_0_0_1, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 2340, 2427);
                    			}

                    // Xpath3.g:2034:4: (a2_0= parse_org_emftext_language_xpath3_RangeExpr )
                    // Xpath3.g:2035:5: a2_0= parse_org_emftext_language_xpath3_RangeExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_RangeExpr_in_parse_org_emftext_language_xpath3_ComparisonExpr1505);
                    a2_0=parse_org_emftext_language_xpath3_RangeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createComparisonExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.COMPARISON_EXPR__RIGHT), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_7_0_0_1_0_0_3, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				// We've found the last token for this rule. The constructed EObject is now
                    				// complete.
                    				completedElement(element, true);
                    				addExpectedElement(null, 2428, 2435);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 2436, 2443);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 9, parse_org_emftext_language_xpath3_ComparisonExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_ComparisonExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_RangeExpr"
    // Xpath3.g:2075:1: parse_org_emftext_language_xpath3_RangeExpr returns [org.emftext.language.xpath3.RangeExpr element = null] : (a0_0= parse_org_emftext_language_xpath3_AdditiveExpr ) ( (a1= 'to' (a2_0= parse_org_emftext_language_xpath3_AdditiveExpr ) ) )? ;
    public final org.emftext.language.xpath3.RangeExpr parse_org_emftext_language_xpath3_RangeExpr() throws RecognitionException {
        org.emftext.language.xpath3.RangeExpr element =  null;

        int parse_org_emftext_language_xpath3_RangeExpr_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath3.AdditiveExpr a0_0 =null;

        org.emftext.language.xpath3.AdditiveExpr a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return element; }

            // Xpath3.g:2078:2: ( (a0_0= parse_org_emftext_language_xpath3_AdditiveExpr ) ( (a1= 'to' (a2_0= parse_org_emftext_language_xpath3_AdditiveExpr ) ) )? )
            // Xpath3.g:2079:2: (a0_0= parse_org_emftext_language_xpath3_AdditiveExpr ) ( (a1= 'to' (a2_0= parse_org_emftext_language_xpath3_AdditiveExpr ) ) )?
            {
            // Xpath3.g:2079:2: (a0_0= parse_org_emftext_language_xpath3_AdditiveExpr )
            // Xpath3.g:2080:3: a0_0= parse_org_emftext_language_xpath3_AdditiveExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AdditiveExpr_in_parse_org_emftext_language_xpath3_RangeExpr1565);
            a0_0=parse_org_emftext_language_xpath3_AdditiveExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createRangeExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.RANGE_EXPR__FROM), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_8_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 2444, 2450);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 2451, 2453);
            		addExpectedElement(null, 2454, 2455);
            	}

            // Xpath3.g:2107:2: ( (a1= 'to' (a2_0= parse_org_emftext_language_xpath3_AdditiveExpr ) ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==87) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // Xpath3.g:2108:3: (a1= 'to' (a2_0= parse_org_emftext_language_xpath3_AdditiveExpr ) )
                    {
                    // Xpath3.g:2108:3: (a1= 'to' (a2_0= parse_org_emftext_language_xpath3_AdditiveExpr ) )
                    // Xpath3.g:2109:4: a1= 'to' (a2_0= parse_org_emftext_language_xpath3_AdditiveExpr )
                    {
                    a1=(Token)match(input,87,FOLLOW_87_in_parse_org_emftext_language_xpath3_RangeExpr1592); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createRangeExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_8_0_0_1_0_0_1, null, true);
                    				copyLocalizationInfos((CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getRangeExpr(), 2456, 2543);
                    			}

                    // Xpath3.g:2123:4: (a2_0= parse_org_emftext_language_xpath3_AdditiveExpr )
                    // Xpath3.g:2124:5: a2_0= parse_org_emftext_language_xpath3_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AdditiveExpr_in_parse_org_emftext_language_xpath3_RangeExpr1618);
                    a2_0=parse_org_emftext_language_xpath3_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createRangeExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.RANGE_EXPR__TO), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_8_0_0_1_0_0_3, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				// We've found the last token for this rule. The constructed EObject is now
                    				// complete.
                    				completedElement(element, true);
                    				addExpectedElement(null, 2544, 2549);
                    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 2550, 2552);
                    				addExpectedElement(null, 2553, 2554);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 2555, 2560);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 2561, 2563);
            		addExpectedElement(null, 2564, 2565);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 10, parse_org_emftext_language_xpath3_RangeExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_RangeExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_GeneralComp"
    // Xpath3.g:2168:1: parse_org_emftext_language_xpath3_GeneralComp returns [org.emftext.language.xpath3.GeneralComp element = null] : ( (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) ;
    public final org.emftext.language.xpath3.GeneralComp parse_org_emftext_language_xpath3_GeneralComp() throws RecognitionException {
        org.emftext.language.xpath3.GeneralComp element =  null;

        int parse_org_emftext_language_xpath3_GeneralComp_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return element; }

            // Xpath3.g:2171:2: ( ( (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) )
            // Xpath3.g:2172:2: ( (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) )
            {
            // Xpath3.g:2172:2: ( (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) )
            // Xpath3.g:2173:3: (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            {
            // Xpath3.g:2173:3: (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            int alt17=6;
            switch ( input.LA(1) ) {
            case 28:
                {
                alt17=1;
                }
                break;
            case 11:
                {
                alt17=2;
                }
                break;
            case 25:
                {
                alt17=3;
                }
                break;
            case 27:
                {
                alt17=4;
                }
                break;
            case 29:
                {
                alt17=5;
                }
                break;
            case 30:
                {
                alt17=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;

            }

            switch (alt17) {
                case 1 :
                    // Xpath3.g:2174:4: a0= '='
                    {
                    a0=(Token)match(input,28,FOLLOW_28_in_parse_org_emftext_language_xpath3_GeneralComp1683); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_9_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath3.GeneralCompKind.EQ_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath3.g:2187:8: a1= '!='
                    {
                    a1=(Token)match(input,11,FOLLOW_11_in_parse_org_emftext_language_xpath3_GeneralComp1698); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_9_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath3.GeneralCompKind.NE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath3.g:2200:8: a2= '<'
                    {
                    a2=(Token)match(input,25,FOLLOW_25_in_parse_org_emftext_language_xpath3_GeneralComp1713); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_9_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath3.GeneralCompKind.LT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xpath3.g:2213:8: a3= '<='
                    {
                    a3=(Token)match(input,27,FOLLOW_27_in_parse_org_emftext_language_xpath3_GeneralComp1728); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_9_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath3.GeneralCompKind.LE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xpath3.g:2226:8: a4= '>'
                    {
                    a4=(Token)match(input,29,FOLLOW_29_in_parse_org_emftext_language_xpath3_GeneralComp1743); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_9_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath3.GeneralCompKind.GT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 6 :
                    // Xpath3.g:2239:8: a5= '>='
                    {
                    a5=(Token)match(input,30,FOLLOW_30_in_parse_org_emftext_language_xpath3_GeneralComp1758); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_9_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a5, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath3.GeneralCompKind.GE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 2566, 2653);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 11, parse_org_emftext_language_xpath3_GeneralComp_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_GeneralComp"



    // $ANTLR start "parse_org_emftext_language_xpath3_ValueComp"
    // Xpath3.g:2264:1: parse_org_emftext_language_xpath3_ValueComp returns [org.emftext.language.xpath3.ValueComp element = null] : ( (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' ) ) ;
    public final org.emftext.language.xpath3.ValueComp parse_org_emftext_language_xpath3_ValueComp() throws RecognitionException {
        org.emftext.language.xpath3.ValueComp element =  null;

        int parse_org_emftext_language_xpath3_ValueComp_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return element; }

            // Xpath3.g:2267:2: ( ( (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' ) ) )
            // Xpath3.g:2268:2: ( (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' ) )
            {
            // Xpath3.g:2268:2: ( (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' ) )
            // Xpath3.g:2269:3: (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' )
            {
            // Xpath3.g:2269:3: (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' )
            int alt18=6;
            switch ( input.LA(1) ) {
            case 52:
                {
                alt18=1;
                }
                break;
            case 71:
                {
                alt18=2;
                }
                break;
            case 68:
                {
                alt18=3;
                }
                break;
            case 67:
                {
                alt18=4;
                }
                break;
            case 59:
                {
                alt18=5;
                }
                break;
            case 58:
                {
                alt18=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;

            }

            switch (alt18) {
                case 1 :
                    // Xpath3.g:2270:4: a0= 'eq'
                    {
                    a0=(Token)match(input,52,FOLLOW_52_in_parse_org_emftext_language_xpath3_ValueComp1803); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_10_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath3.GeneralCompKind.EQ_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath3.g:2283:8: a1= 'ne'
                    {
                    a1=(Token)match(input,71,FOLLOW_71_in_parse_org_emftext_language_xpath3_ValueComp1818); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_10_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath3.GeneralCompKind.NE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath3.g:2296:8: a2= 'lt'
                    {
                    a2=(Token)match(input,68,FOLLOW_68_in_parse_org_emftext_language_xpath3_ValueComp1833); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_10_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath3.GeneralCompKind.LT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xpath3.g:2309:8: a3= 'le'
                    {
                    a3=(Token)match(input,67,FOLLOW_67_in_parse_org_emftext_language_xpath3_ValueComp1848); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_10_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath3.GeneralCompKind.LE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xpath3.g:2322:8: a4= 'gt'
                    {
                    a4=(Token)match(input,59,FOLLOW_59_in_parse_org_emftext_language_xpath3_ValueComp1863); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_10_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath3.GeneralCompKind.GT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 6 :
                    // Xpath3.g:2335:8: a5= 'ge'
                    {
                    a5=(Token)match(input,58,FOLLOW_58_in_parse_org_emftext_language_xpath3_ValueComp1878); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_10_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a5, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath3.GeneralCompKind.GE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 2654, 2741);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 12, parse_org_emftext_language_xpath3_ValueComp_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_ValueComp"



    // $ANTLR start "parse_org_emftext_language_xpath3_NodeComp"
    // Xpath3.g:2360:1: parse_org_emftext_language_xpath3_NodeComp returns [org.emftext.language.xpath3.NodeComp element = null] : ( (a0= 'is' |a1= '<<' |a2= '>>' ) ) ;
    public final org.emftext.language.xpath3.NodeComp parse_org_emftext_language_xpath3_NodeComp() throws RecognitionException {
        org.emftext.language.xpath3.NodeComp element =  null;

        int parse_org_emftext_language_xpath3_NodeComp_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return element; }

            // Xpath3.g:2363:2: ( ( (a0= 'is' |a1= '<<' |a2= '>>' ) ) )
            // Xpath3.g:2364:2: ( (a0= 'is' |a1= '<<' |a2= '>>' ) )
            {
            // Xpath3.g:2364:2: ( (a0= 'is' |a1= '<<' |a2= '>>' ) )
            // Xpath3.g:2365:3: (a0= 'is' |a1= '<<' |a2= '>>' )
            {
            // Xpath3.g:2365:3: (a0= 'is' |a1= '<<' |a2= '>>' )
            int alt19=3;
            switch ( input.LA(1) ) {
            case 65:
                {
                alt19=1;
                }
                break;
            case 26:
                {
                alt19=2;
                }
                break;
            case 31:
                {
                alt19=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;

            }

            switch (alt19) {
                case 1 :
                    // Xpath3.g:2366:4: a0= 'is'
                    {
                    a0=(Token)match(input,65,FOLLOW_65_in_parse_org_emftext_language_xpath3_NodeComp1923); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNodeComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_11_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getNodeCompKind().getEEnumLiteral(org.emftext.language.xpath3.NodeCompKind.IS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NODE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath3.g:2379:8: a1= '<<'
                    {
                    a1=(Token)match(input,26,FOLLOW_26_in_parse_org_emftext_language_xpath3_NodeComp1938); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNodeComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_11_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getNodeCompKind().getEEnumLiteral(org.emftext.language.xpath3.NodeCompKind.PRECEDES_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NODE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath3.g:2392:8: a2= '>>'
                    {
                    a2=(Token)match(input,31,FOLLOW_31_in_parse_org_emftext_language_xpath3_NodeComp1953); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNodeComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_11_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getNodeCompKind().getEEnumLiteral(org.emftext.language.xpath3.NodeCompKind.FOLLOWS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NODE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 2742, 2829);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 13, parse_org_emftext_language_xpath3_NodeComp_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_NodeComp"



    // $ANTLR start "parse_org_emftext_language_xpath3_AdditiveExpr"
    // Xpath3.g:2417:1: parse_org_emftext_language_xpath3_AdditiveExpr returns [org.emftext.language.xpath3.AdditiveExpr element = null] : (a0_0= parse_org_emftext_language_xpath3_MultiplicativeExpr ) ( ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath3_MultiplicativeExpr ) ) )* ;
    public final org.emftext.language.xpath3.AdditiveExpr parse_org_emftext_language_xpath3_AdditiveExpr() throws RecognitionException {
        org.emftext.language.xpath3.AdditiveExpr element =  null;

        int parse_org_emftext_language_xpath3_AdditiveExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath3.MultiplicativeExpr a0_0 =null;

        org.emftext.language.xpath3.MultiplicativeExpr a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return element; }

            // Xpath3.g:2420:2: ( (a0_0= parse_org_emftext_language_xpath3_MultiplicativeExpr ) ( ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath3_MultiplicativeExpr ) ) )* )
            // Xpath3.g:2421:2: (a0_0= parse_org_emftext_language_xpath3_MultiplicativeExpr ) ( ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath3_MultiplicativeExpr ) ) )*
            {
            // Xpath3.g:2421:2: (a0_0= parse_org_emftext_language_xpath3_MultiplicativeExpr )
            // Xpath3.g:2422:3: a0_0= parse_org_emftext_language_xpath3_MultiplicativeExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_MultiplicativeExpr_in_parse_org_emftext_language_xpath3_AdditiveExpr1993);
            a0_0=parse_org_emftext_language_xpath3_MultiplicativeExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAdditiveExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath3.XPath3Package.ADDITIVE_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_12_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 2830, 2837);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 2838, 2840);
            		addExpectedElement(null, 2841, 2842);
            	}

            // Xpath3.g:2449:2: ( ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath3_MultiplicativeExpr ) ) )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==16||LA21_0==18) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // Xpath3.g:2450:3: ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath3_MultiplicativeExpr ) )
            	    {
            	    // Xpath3.g:2450:3: ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath3_MultiplicativeExpr ) )
            	    // Xpath3.g:2451:4: ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath3_MultiplicativeExpr )
            	    {
            	    // Xpath3.g:2451:4: ( (a1= '+' |a2= '-' ) )
            	    // Xpath3.g:2452:5: (a1= '+' |a2= '-' )
            	    {
            	    // Xpath3.g:2452:5: (a1= '+' |a2= '-' )
            	    int alt20=2;
            	    int LA20_0 = input.LA(1);

            	    if ( (LA20_0==16) ) {
            	        alt20=1;
            	    }
            	    else if ( (LA20_0==18) ) {
            	        alt20=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 20, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt20) {
            	        case 1 :
            	            // Xpath3.g:2453:6: a1= '+'
            	            {
            	            a1=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath3_AdditiveExpr2033); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAdditiveExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_12_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAdditiveOpKind().getEEnumLiteral(org.emftext.language.xpath3.AdditiveOpKind.ADDITION_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath3.XPath3Package.ADDITIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath3.g:2466:12: a2= '-'
            	            {
            	            a2=(Token)match(input,18,FOLLOW_18_in_parse_org_emftext_language_xpath3_AdditiveExpr2052); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAdditiveExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_12_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAdditiveOpKind().getEEnumLiteral(org.emftext.language.xpath3.AdditiveOpKind.SUBTRACTION_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath3.XPath3Package.ADDITIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAdditiveExpr(), 2843, 2930);
            	    			}

            	    // Xpath3.g:2486:4: (a5_0= parse_org_emftext_language_xpath3_MultiplicativeExpr )
            	    // Xpath3.g:2487:5: a5_0= parse_org_emftext_language_xpath3_MultiplicativeExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_MultiplicativeExpr_in_parse_org_emftext_language_xpath3_AdditiveExpr2089);
            	    a5_0=parse_org_emftext_language_xpath3_MultiplicativeExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAdditiveExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, org.emftext.language.xpath3.XPath3Package.ADDITIVE_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_12_0_0_1_0_0_3, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				// We've found the last token for this rule. The constructed EObject is now
            	    				// complete.
            	    				completedElement(element, true);
            	    				addExpectedElement(null, 2931, 2938);
            	    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 2939, 2941);
            	    				addExpectedElement(null, 2942, 2943);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 2944, 2951);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 2952, 2954);
            		addExpectedElement(null, 2955, 2956);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 14, parse_org_emftext_language_xpath3_AdditiveExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_AdditiveExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_MultiplicativeExpr"
    // Xpath3.g:2531:1: parse_org_emftext_language_xpath3_MultiplicativeExpr returns [org.emftext.language.xpath3.MultiplicativeExpr element = null] : (a0_0= parse_org_emftext_language_xpath3_UnionExpr ) ( ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath3_UnionExpr ) ) )* ;
    public final org.emftext.language.xpath3.MultiplicativeExpr parse_org_emftext_language_xpath3_MultiplicativeExpr() throws RecognitionException {
        org.emftext.language.xpath3.MultiplicativeExpr element =  null;

        int parse_org_emftext_language_xpath3_MultiplicativeExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        org.emftext.language.xpath3.UnionExpr a0_0 =null;

        org.emftext.language.xpath3.UnionExpr a7_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return element; }

            // Xpath3.g:2534:2: ( (a0_0= parse_org_emftext_language_xpath3_UnionExpr ) ( ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath3_UnionExpr ) ) )* )
            // Xpath3.g:2535:2: (a0_0= parse_org_emftext_language_xpath3_UnionExpr ) ( ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath3_UnionExpr ) ) )*
            {
            // Xpath3.g:2535:2: (a0_0= parse_org_emftext_language_xpath3_UnionExpr )
            // Xpath3.g:2536:3: a0_0= parse_org_emftext_language_xpath3_UnionExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_UnionExpr_in_parse_org_emftext_language_xpath3_MultiplicativeExpr2149);
            a0_0=parse_org_emftext_language_xpath3_UnionExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createMultiplicativeExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath3.XPath3Package.MULTIPLICATIVE_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_13_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 2957, 2965);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 2966, 2968);
            		addExpectedElement(null, 2969, 2970);
            	}

            // Xpath3.g:2563:2: ( ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath3_UnionExpr ) ) )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( (LA23_0==15||LA23_0==47||LA23_0==60||LA23_0==69) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // Xpath3.g:2564:3: ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath3_UnionExpr ) )
            	    {
            	    // Xpath3.g:2564:3: ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath3_UnionExpr ) )
            	    // Xpath3.g:2565:4: ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath3_UnionExpr )
            	    {
            	    // Xpath3.g:2565:4: ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) )
            	    // Xpath3.g:2566:5: (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' )
            	    {
            	    // Xpath3.g:2566:5: (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' )
            	    int alt22=4;
            	    switch ( input.LA(1) ) {
            	    case 15:
            	        {
            	        alt22=1;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt22=2;
            	        }
            	        break;
            	    case 60:
            	        {
            	        alt22=3;
            	        }
            	        break;
            	    case 69:
            	        {
            	        alt22=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 22, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt22) {
            	        case 1 :
            	            // Xpath3.g:2567:6: a1= '*'
            	            {
            	            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath3_MultiplicativeExpr2189); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createMultiplicativeExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_13_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getMultiplicativeOpKind().getEEnumLiteral(org.emftext.language.xpath3.MultiplicativeOpKind.MULTIPLICATION_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath3.XPath3Package.MULTIPLICATIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath3.g:2580:12: a2= 'div'
            	            {
            	            a2=(Token)match(input,47,FOLLOW_47_in_parse_org_emftext_language_xpath3_MultiplicativeExpr2208); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createMultiplicativeExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_13_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getMultiplicativeOpKind().getEEnumLiteral(org.emftext.language.xpath3.MultiplicativeOpKind.DIV_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath3.XPath3Package.MULTIPLICATIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 3 :
            	            // Xpath3.g:2593:12: a3= 'idiv'
            	            {
            	            a3=(Token)match(input,60,FOLLOW_60_in_parse_org_emftext_language_xpath3_MultiplicativeExpr2227); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createMultiplicativeExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_13_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((CommonToken)a3, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getMultiplicativeOpKind().getEEnumLiteral(org.emftext.language.xpath3.MultiplicativeOpKind.IDIV_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath3.XPath3Package.MULTIPLICATIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 4 :
            	            // Xpath3.g:2606:12: a4= 'mod'
            	            {
            	            a4=(Token)match(input,69,FOLLOW_69_in_parse_org_emftext_language_xpath3_MultiplicativeExpr2246); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createMultiplicativeExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_13_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((CommonToken)a4, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getMultiplicativeOpKind().getEEnumLiteral(org.emftext.language.xpath3.MultiplicativeOpKind.MOD_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath3.XPath3Package.MULTIPLICATIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getMultiplicativeExpr(), 2971, 3058);
            	    			}

            	    // Xpath3.g:2626:4: (a7_0= parse_org_emftext_language_xpath3_UnionExpr )
            	    // Xpath3.g:2627:5: a7_0= parse_org_emftext_language_xpath3_UnionExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_UnionExpr_in_parse_org_emftext_language_xpath3_MultiplicativeExpr2283);
            	    a7_0=parse_org_emftext_language_xpath3_UnionExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createMultiplicativeExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a7_0 != null) {
            	    						if (a7_0 != null) {
            	    							Object value = a7_0;
            	    							addObjectToList(element, org.emftext.language.xpath3.XPath3Package.MULTIPLICATIVE_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_13_0_0_1_0_0_3, a7_0, true);
            	    						copyLocalizationInfos(a7_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				// We've found the last token for this rule. The constructed EObject is now
            	    				// complete.
            	    				completedElement(element, true);
            	    				addExpectedElement(null, 3059, 3067);
            	    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3068, 3070);
            	    				addExpectedElement(null, 3071, 3072);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 3073, 3081);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3082, 3084);
            		addExpectedElement(null, 3085, 3086);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 15, parse_org_emftext_language_xpath3_MultiplicativeExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_MultiplicativeExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_UnionExpr"
    // Xpath3.g:2671:1: parse_org_emftext_language_xpath3_UnionExpr returns [org.emftext.language.xpath3.UnionExpr element = null] : (a0_0= parse_org_emftext_language_xpath3_IntersectExceptExpr ) ( ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath3_IntersectExceptExpr ) ) )* ;
    public final org.emftext.language.xpath3.UnionExpr parse_org_emftext_language_xpath3_UnionExpr() throws RecognitionException {
        org.emftext.language.xpath3.UnionExpr element =  null;

        int parse_org_emftext_language_xpath3_UnionExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath3.IntersectExceptExpr a0_0 =null;

        org.emftext.language.xpath3.IntersectExceptExpr a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return element; }

            // Xpath3.g:2674:2: ( (a0_0= parse_org_emftext_language_xpath3_IntersectExceptExpr ) ( ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath3_IntersectExceptExpr ) ) )* )
            // Xpath3.g:2675:2: (a0_0= parse_org_emftext_language_xpath3_IntersectExceptExpr ) ( ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath3_IntersectExceptExpr ) ) )*
            {
            // Xpath3.g:2675:2: (a0_0= parse_org_emftext_language_xpath3_IntersectExceptExpr )
            // Xpath3.g:2676:3: a0_0= parse_org_emftext_language_xpath3_IntersectExceptExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IntersectExceptExpr_in_parse_org_emftext_language_xpath3_UnionExpr2343);
            a0_0=parse_org_emftext_language_xpath3_IntersectExceptExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createUnionExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath3.XPath3Package.UNION_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_14_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 3087, 3096);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3097, 3099);
            		addExpectedElement(null, 3100, 3101);
            	}

            // Xpath3.g:2703:2: ( ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath3_IntersectExceptExpr ) ) )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( ((LA25_0 >= 89 && LA25_0 <= 90)) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // Xpath3.g:2704:3: ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath3_IntersectExceptExpr ) )
            	    {
            	    // Xpath3.g:2704:3: ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath3_IntersectExceptExpr ) )
            	    // Xpath3.g:2705:4: ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath3_IntersectExceptExpr )
            	    {
            	    // Xpath3.g:2705:4: ( (a1= 'union' |a2= '|' ) )
            	    // Xpath3.g:2706:5: (a1= 'union' |a2= '|' )
            	    {
            	    // Xpath3.g:2706:5: (a1= 'union' |a2= '|' )
            	    int alt24=2;
            	    int LA24_0 = input.LA(1);

            	    if ( (LA24_0==89) ) {
            	        alt24=1;
            	    }
            	    else if ( (LA24_0==90) ) {
            	        alt24=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 24, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt24) {
            	        case 1 :
            	            // Xpath3.g:2707:6: a1= 'union'
            	            {
            	            a1=(Token)match(input,89,FOLLOW_89_in_parse_org_emftext_language_xpath3_UnionExpr2383); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createUnionExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_14_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getUnionOp().getEEnumLiteral(org.emftext.language.xpath3.UnionOp.UNION_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath3.XPath3Package.UNION_EXPR__OPERATION, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath3.g:2720:12: a2= '|'
            	            {
            	            a2=(Token)match(input,90,FOLLOW_90_in_parse_org_emftext_language_xpath3_UnionExpr2402); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createUnionExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_14_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getUnionOp().getEEnumLiteral(org.emftext.language.xpath3.UnionOp.VERTICAL_BAR_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath3.XPath3Package.UNION_EXPR__OPERATION, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getUnionExpr(), 3102, 3189);
            	    			}

            	    // Xpath3.g:2740:4: (a5_0= parse_org_emftext_language_xpath3_IntersectExceptExpr )
            	    // Xpath3.g:2741:5: a5_0= parse_org_emftext_language_xpath3_IntersectExceptExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IntersectExceptExpr_in_parse_org_emftext_language_xpath3_UnionExpr2439);
            	    a5_0=parse_org_emftext_language_xpath3_IntersectExceptExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createUnionExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, org.emftext.language.xpath3.XPath3Package.UNION_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_14_0_0_1_0_0_3, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				// We've found the last token for this rule. The constructed EObject is now
            	    				// complete.
            	    				completedElement(element, true);
            	    				addExpectedElement(null, 3190, 3199);
            	    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3200, 3202);
            	    				addExpectedElement(null, 3203, 3204);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 3205, 3214);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3215, 3217);
            		addExpectedElement(null, 3218, 3219);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 16, parse_org_emftext_language_xpath3_UnionExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_UnionExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_IntersectExceptExpr"
    // Xpath3.g:2785:1: parse_org_emftext_language_xpath3_IntersectExceptExpr returns [org.emftext.language.xpath3.IntersectExceptExpr element = null] : (a0_0= parse_org_emftext_language_xpath3_InstanceofExpr ) ( ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath3_InstanceofExpr ) ) )* ;
    public final org.emftext.language.xpath3.IntersectExceptExpr parse_org_emftext_language_xpath3_IntersectExceptExpr() throws RecognitionException {
        org.emftext.language.xpath3.IntersectExceptExpr element =  null;

        int parse_org_emftext_language_xpath3_IntersectExceptExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath3.InstanceofExpr a0_0 =null;

        org.emftext.language.xpath3.InstanceofExpr a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return element; }

            // Xpath3.g:2788:2: ( (a0_0= parse_org_emftext_language_xpath3_InstanceofExpr ) ( ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath3_InstanceofExpr ) ) )* )
            // Xpath3.g:2789:2: (a0_0= parse_org_emftext_language_xpath3_InstanceofExpr ) ( ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath3_InstanceofExpr ) ) )*
            {
            // Xpath3.g:2789:2: (a0_0= parse_org_emftext_language_xpath3_InstanceofExpr )
            // Xpath3.g:2790:3: a0_0= parse_org_emftext_language_xpath3_InstanceofExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_InstanceofExpr_in_parse_org_emftext_language_xpath3_IntersectExceptExpr2499);
            a0_0=parse_org_emftext_language_xpath3_InstanceofExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIntersectExceptExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath3.XPath3Package.INTERSECT_EXCEPT_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_15_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 3220, 3230);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3231, 3233);
            		addExpectedElement(null, 3234, 3235);
            	}

            // Xpath3.g:2817:2: ( ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath3_InstanceofExpr ) ) )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==54||LA27_0==64) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // Xpath3.g:2818:3: ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath3_InstanceofExpr ) )
            	    {
            	    // Xpath3.g:2818:3: ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath3_InstanceofExpr ) )
            	    // Xpath3.g:2819:4: ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath3_InstanceofExpr )
            	    {
            	    // Xpath3.g:2819:4: ( (a1= 'intersect' |a2= 'except' ) )
            	    // Xpath3.g:2820:5: (a1= 'intersect' |a2= 'except' )
            	    {
            	    // Xpath3.g:2820:5: (a1= 'intersect' |a2= 'except' )
            	    int alt26=2;
            	    int LA26_0 = input.LA(1);

            	    if ( (LA26_0==64) ) {
            	        alt26=1;
            	    }
            	    else if ( (LA26_0==54) ) {
            	        alt26=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 26, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt26) {
            	        case 1 :
            	            // Xpath3.g:2821:6: a1= 'intersect'
            	            {
            	            a1=(Token)match(input,64,FOLLOW_64_in_parse_org_emftext_language_xpath3_IntersectExceptExpr2539); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIntersectExceptExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_15_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getIntersectExceptOpKind().getEEnumLiteral(org.emftext.language.xpath3.IntersectExceptOpKind.INTERSECT_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath3.XPath3Package.INTERSECT_EXCEPT_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath3.g:2834:12: a2= 'except'
            	            {
            	            a2=(Token)match(input,54,FOLLOW_54_in_parse_org_emftext_language_xpath3_IntersectExceptExpr2558); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIntersectExceptExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_15_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getIntersectExceptOpKind().getEEnumLiteral(org.emftext.language.xpath3.IntersectExceptOpKind.EXCEPT_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath3.XPath3Package.INTERSECT_EXCEPT_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getIntersectExceptExpr(), 3236, 3323);
            	    			}

            	    // Xpath3.g:2854:4: (a5_0= parse_org_emftext_language_xpath3_InstanceofExpr )
            	    // Xpath3.g:2855:5: a5_0= parse_org_emftext_language_xpath3_InstanceofExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_InstanceofExpr_in_parse_org_emftext_language_xpath3_IntersectExceptExpr2595);
            	    a5_0=parse_org_emftext_language_xpath3_InstanceofExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIntersectExceptExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, org.emftext.language.xpath3.XPath3Package.INTERSECT_EXCEPT_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_15_0_0_1_0_0_3, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				// We've found the last token for this rule. The constructed EObject is now
            	    				// complete.
            	    				completedElement(element, true);
            	    				addExpectedElement(null, 3324, 3334);
            	    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3335, 3337);
            	    				addExpectedElement(null, 3338, 3339);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 3340, 3350);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3351, 3353);
            		addExpectedElement(null, 3354, 3355);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 17, parse_org_emftext_language_xpath3_IntersectExceptExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_IntersectExceptExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_InstanceofExpr"
    // Xpath3.g:2899:1: parse_org_emftext_language_xpath3_InstanceofExpr returns [org.emftext.language.xpath3.InstanceofExpr element = null] : (a0_0= parse_org_emftext_language_xpath3_TreatExpr ) ( (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath3_SequenceType ) ) )? ;
    public final org.emftext.language.xpath3.InstanceofExpr parse_org_emftext_language_xpath3_InstanceofExpr() throws RecognitionException {
        org.emftext.language.xpath3.InstanceofExpr element =  null;

        int parse_org_emftext_language_xpath3_InstanceofExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath3.TreatExpr a0_0 =null;

        org.emftext.language.xpath3.SequenceType a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return element; }

            // Xpath3.g:2902:2: ( (a0_0= parse_org_emftext_language_xpath3_TreatExpr ) ( (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath3_SequenceType ) ) )? )
            // Xpath3.g:2903:2: (a0_0= parse_org_emftext_language_xpath3_TreatExpr ) ( (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath3_SequenceType ) ) )?
            {
            // Xpath3.g:2903:2: (a0_0= parse_org_emftext_language_xpath3_TreatExpr )
            // Xpath3.g:2904:3: a0_0= parse_org_emftext_language_xpath3_TreatExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_TreatExpr_in_parse_org_emftext_language_xpath3_InstanceofExpr2655);
            a0_0=parse_org_emftext_language_xpath3_TreatExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createInstanceofExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.INSTANCEOF_EXPR__OPERAND), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_16_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 3356, 3367);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3368, 3370);
            		addExpectedElement(null, 3371, 3372);
            	}

            // Xpath3.g:2931:2: ( (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath3_SequenceType ) ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==63) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // Xpath3.g:2932:3: (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath3_SequenceType ) )
                    {
                    // Xpath3.g:2932:3: (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath3_SequenceType ) )
                    // Xpath3.g:2933:4: a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath3_SequenceType )
                    {
                    a1=(Token)match(input,63,FOLLOW_63_in_parse_org_emftext_language_xpath3_InstanceofExpr2682); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createInstanceofExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_16_0_0_1_0_0_1, null, true);
                    				copyLocalizationInfos((CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, 3373);
                    			}

                    a2=(Token)match(input,73,FOLLOW_73_in_parse_org_emftext_language_xpath3_InstanceofExpr2702); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createInstanceofExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_16_0_0_1_0_0_2, null, true);
                    				copyLocalizationInfos((CommonToken)a2, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getInstanceofExpr(), 3374, 3392);
                    			}

                    // Xpath3.g:2961:4: (a3_0= parse_org_emftext_language_xpath3_SequenceType )
                    // Xpath3.g:2962:5: a3_0= parse_org_emftext_language_xpath3_SequenceType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_SequenceType_in_parse_org_emftext_language_xpath3_InstanceofExpr2728);
                    a3_0=parse_org_emftext_language_xpath3_SequenceType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createInstanceofExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.INSTANCEOF_EXPR__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_16_0_0_1_0_0_3, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				// We've found the last token for this rule. The constructed EObject is now
                    				// complete.
                    				completedElement(element, true);
                    				addExpectedElement(null, 3393, 3403);
                    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3404, 3406);
                    				addExpectedElement(null, 3407, 3408);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 3409, 3419);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3420, 3422);
            		addExpectedElement(null, 3423, 3424);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 18, parse_org_emftext_language_xpath3_InstanceofExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_InstanceofExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_TreatExpr"
    // Xpath3.g:3006:1: parse_org_emftext_language_xpath3_TreatExpr returns [org.emftext.language.xpath3.TreatExpr element = null] : (a0_0= parse_org_emftext_language_xpath3_CastableExpr ) ( (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SequenceType ) ) )? ;
    public final org.emftext.language.xpath3.TreatExpr parse_org_emftext_language_xpath3_TreatExpr() throws RecognitionException {
        org.emftext.language.xpath3.TreatExpr element =  null;

        int parse_org_emftext_language_xpath3_TreatExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath3.CastableExpr a0_0 =null;

        org.emftext.language.xpath3.SequenceType a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return element; }

            // Xpath3.g:3009:2: ( (a0_0= parse_org_emftext_language_xpath3_CastableExpr ) ( (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SequenceType ) ) )? )
            // Xpath3.g:3010:2: (a0_0= parse_org_emftext_language_xpath3_CastableExpr ) ( (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SequenceType ) ) )?
            {
            // Xpath3.g:3010:2: (a0_0= parse_org_emftext_language_xpath3_CastableExpr )
            // Xpath3.g:3011:3: a0_0= parse_org_emftext_language_xpath3_CastableExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_CastableExpr_in_parse_org_emftext_language_xpath3_TreatExpr2788);
            a0_0=parse_org_emftext_language_xpath3_CastableExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createTreatExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.TREAT_EXPR__OPERAND), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_17_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 3425, 3437);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3438, 3440);
            		addExpectedElement(null, 3441, 3442);
            	}

            // Xpath3.g:3038:2: ( (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SequenceType ) ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==88) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // Xpath3.g:3039:3: (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SequenceType ) )
                    {
                    // Xpath3.g:3039:3: (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SequenceType ) )
                    // Xpath3.g:3040:4: a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SequenceType )
                    {
                    a1=(Token)match(input,88,FOLLOW_88_in_parse_org_emftext_language_xpath3_TreatExpr2815); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createTreatExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_17_0_0_1_0_0_1, null, true);
                    				copyLocalizationInfos((CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, 3443);
                    			}

                    a2=(Token)match(input,39,FOLLOW_39_in_parse_org_emftext_language_xpath3_TreatExpr2835); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createTreatExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_17_0_0_1_0_0_2, null, true);
                    				copyLocalizationInfos((CommonToken)a2, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getTreatExpr(), 3444, 3462);
                    			}

                    // Xpath3.g:3068:4: (a3_0= parse_org_emftext_language_xpath3_SequenceType )
                    // Xpath3.g:3069:5: a3_0= parse_org_emftext_language_xpath3_SequenceType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_SequenceType_in_parse_org_emftext_language_xpath3_TreatExpr2861);
                    a3_0=parse_org_emftext_language_xpath3_SequenceType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createTreatExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.TREAT_EXPR__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_17_0_0_1_0_0_3, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				// We've found the last token for this rule. The constructed EObject is now
                    				// complete.
                    				completedElement(element, true);
                    				addExpectedElement(null, 3463, 3474);
                    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3475, 3477);
                    				addExpectedElement(null, 3478, 3479);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 3480, 3491);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3492, 3494);
            		addExpectedElement(null, 3495, 3496);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 19, parse_org_emftext_language_xpath3_TreatExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_TreatExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_CastableExpr"
    // Xpath3.g:3113:1: parse_org_emftext_language_xpath3_CastableExpr returns [org.emftext.language.xpath3.CastableExpr element = null] : (a0_0= parse_org_emftext_language_xpath3_CastExpr ) ( (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SingleType ) ) )? ;
    public final org.emftext.language.xpath3.CastableExpr parse_org_emftext_language_xpath3_CastableExpr() throws RecognitionException {
        org.emftext.language.xpath3.CastableExpr element =  null;

        int parse_org_emftext_language_xpath3_CastableExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath3.CastExpr a0_0 =null;

        org.emftext.language.xpath3.SingleType a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return element; }

            // Xpath3.g:3116:2: ( (a0_0= parse_org_emftext_language_xpath3_CastExpr ) ( (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SingleType ) ) )? )
            // Xpath3.g:3117:2: (a0_0= parse_org_emftext_language_xpath3_CastExpr ) ( (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SingleType ) ) )?
            {
            // Xpath3.g:3117:2: (a0_0= parse_org_emftext_language_xpath3_CastExpr )
            // Xpath3.g:3118:3: a0_0= parse_org_emftext_language_xpath3_CastExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_CastExpr_in_parse_org_emftext_language_xpath3_CastableExpr2921);
            a0_0=parse_org_emftext_language_xpath3_CastExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createCastableExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.CASTABLE_EXPR__OPERAND), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_18_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 3497, 3510);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3511, 3513);
            		addExpectedElement(null, 3514, 3515);
            	}

            // Xpath3.g:3145:2: ( (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SingleType ) ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==42) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // Xpath3.g:3146:3: (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SingleType ) )
                    {
                    // Xpath3.g:3146:3: (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SingleType ) )
                    // Xpath3.g:3147:4: a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SingleType )
                    {
                    a1=(Token)match(input,42,FOLLOW_42_in_parse_org_emftext_language_xpath3_CastableExpr2948); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createCastableExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_18_0_0_1_0_0_1, null, true);
                    				copyLocalizationInfos((CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, 3516);
                    			}

                    a2=(Token)match(input,39,FOLLOW_39_in_parse_org_emftext_language_xpath3_CastableExpr2968); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createCastableExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_18_0_0_1_0_0_2, null, true);
                    				copyLocalizationInfos((CommonToken)a2, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getCastableExpr(), 3517, 3518);
                    			}

                    // Xpath3.g:3175:4: (a3_0= parse_org_emftext_language_xpath3_SingleType )
                    // Xpath3.g:3176:5: a3_0= parse_org_emftext_language_xpath3_SingleType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_SingleType_in_parse_org_emftext_language_xpath3_CastableExpr2994);
                    a3_0=parse_org_emftext_language_xpath3_SingleType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createCastableExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.CASTABLE_EXPR__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_18_0_0_1_0_0_3, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				// We've found the last token for this rule. The constructed EObject is now
                    				// complete.
                    				completedElement(element, true);
                    				addExpectedElement(null, 3519, 3531);
                    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3532, 3534);
                    				addExpectedElement(null, 3535, 3536);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 3537, 3549);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3550, 3552);
            		addExpectedElement(null, 3553, 3554);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 20, parse_org_emftext_language_xpath3_CastableExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_CastableExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_CastExpr"
    // Xpath3.g:3220:1: parse_org_emftext_language_xpath3_CastExpr returns [org.emftext.language.xpath3.CastExpr element = null] : (a0_0= parse_org_emftext_language_xpath3_UnaryExpr ) ( (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SingleType ) ) )? ;
    public final org.emftext.language.xpath3.CastExpr parse_org_emftext_language_xpath3_CastExpr() throws RecognitionException {
        org.emftext.language.xpath3.CastExpr element =  null;

        int parse_org_emftext_language_xpath3_CastExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath3.UnaryExpr a0_0 =null;

        org.emftext.language.xpath3.SingleType a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return element; }

            // Xpath3.g:3223:2: ( (a0_0= parse_org_emftext_language_xpath3_UnaryExpr ) ( (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SingleType ) ) )? )
            // Xpath3.g:3224:2: (a0_0= parse_org_emftext_language_xpath3_UnaryExpr ) ( (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SingleType ) ) )?
            {
            // Xpath3.g:3224:2: (a0_0= parse_org_emftext_language_xpath3_UnaryExpr )
            // Xpath3.g:3225:3: a0_0= parse_org_emftext_language_xpath3_UnaryExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_UnaryExpr_in_parse_org_emftext_language_xpath3_CastExpr3054);
            a0_0=parse_org_emftext_language_xpath3_UnaryExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createCastExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.CAST_EXPR__OPERAND), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_19_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 3555, 3569);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3570, 3572);
            		addExpectedElement(null, 3573, 3574);
            	}

            // Xpath3.g:3252:2: ( (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SingleType ) ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==41) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // Xpath3.g:3253:3: (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SingleType ) )
                    {
                    // Xpath3.g:3253:3: (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SingleType ) )
                    // Xpath3.g:3254:4: a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath3_SingleType )
                    {
                    a1=(Token)match(input,41,FOLLOW_41_in_parse_org_emftext_language_xpath3_CastExpr3081); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createCastExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_19_0_0_1_0_0_1, null, true);
                    				copyLocalizationInfos((CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, 3575);
                    			}

                    a2=(Token)match(input,39,FOLLOW_39_in_parse_org_emftext_language_xpath3_CastExpr3101); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createCastExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_19_0_0_1_0_0_2, null, true);
                    				copyLocalizationInfos((CommonToken)a2, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getCastExpr(), 3576, 3577);
                    			}

                    // Xpath3.g:3282:4: (a3_0= parse_org_emftext_language_xpath3_SingleType )
                    // Xpath3.g:3283:5: a3_0= parse_org_emftext_language_xpath3_SingleType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_SingleType_in_parse_org_emftext_language_xpath3_CastExpr3127);
                    a3_0=parse_org_emftext_language_xpath3_SingleType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createCastExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.CAST_EXPR__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_19_0_0_1_0_0_3, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				// We've found the last token for this rule. The constructed EObject is now
                    				// complete.
                    				completedElement(element, true);
                    				addExpectedElement(null, 3578, 3591);
                    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3592, 3594);
                    				addExpectedElement(null, 3595, 3596);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 3597, 3610);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3611, 3613);
            		addExpectedElement(null, 3614, 3615);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 21, parse_org_emftext_language_xpath3_CastExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_CastExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_UnaryExpr"
    // Xpath3.g:3327:1: parse_org_emftext_language_xpath3_UnaryExpr returns [org.emftext.language.xpath3.UnaryExpr element = null] : ( ( (a0= '+' |a1= '-' ) ) )* (a4_0= parse_org_emftext_language_xpath3_ValueExpr ) ;
    public final org.emftext.language.xpath3.UnaryExpr parse_org_emftext_language_xpath3_UnaryExpr() throws RecognitionException {
        org.emftext.language.xpath3.UnaryExpr element =  null;

        int parse_org_emftext_language_xpath3_UnaryExpr_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        org.emftext.language.xpath3.ValueExpr a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return element; }

            // Xpath3.g:3330:2: ( ( ( (a0= '+' |a1= '-' ) ) )* (a4_0= parse_org_emftext_language_xpath3_ValueExpr ) )
            // Xpath3.g:3331:2: ( ( (a0= '+' |a1= '-' ) ) )* (a4_0= parse_org_emftext_language_xpath3_ValueExpr )
            {
            // Xpath3.g:3331:2: ( ( (a0= '+' |a1= '-' ) ) )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==16||LA33_0==18) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // Xpath3.g:3332:3: ( (a0= '+' |a1= '-' ) )
            	    {
            	    // Xpath3.g:3332:3: ( (a0= '+' |a1= '-' ) )
            	    // Xpath3.g:3333:4: (a0= '+' |a1= '-' )
            	    {
            	    // Xpath3.g:3333:4: (a0= '+' |a1= '-' )
            	    int alt32=2;
            	    int LA32_0 = input.LA(1);

            	    if ( (LA32_0==16) ) {
            	        alt32=1;
            	    }
            	    else if ( (LA32_0==18) ) {
            	        alt32=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 32, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt32) {
            	        case 1 :
            	            // Xpath3.g:3334:5: a0= '+'
            	            {
            	            a0=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath3_UnaryExpr3198); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (element == null) {
            	            						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createUnaryExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					collectHiddenTokens(element);
            	            					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_20_0_0_0, null, true);
            	            					copyLocalizationInfos((CommonToken)a0, element);
            	            					// set value of enumeration attribute
            	            					Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getUnaryOp().getEEnumLiteral(org.emftext.language.xpath3.UnaryOp.PLUS_VALUE).getInstance();
            	            					addObjectToList(element, org.emftext.language.xpath3.XPath3Package.UNARY_EXPR__OPERATOR, value);
            	            					completedElement(value, false);
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath3.g:3347:10: a1= '-'
            	            {
            	            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_emftext_language_xpath3_UnaryExpr3215); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (element == null) {
            	            						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createUnaryExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					collectHiddenTokens(element);
            	            					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_20_0_0_0, null, true);
            	            					copyLocalizationInfos((CommonToken)a1, element);
            	            					// set value of enumeration attribute
            	            					Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getUnaryOp().getEEnumLiteral(org.emftext.language.xpath3.UnaryOp.MINUS_VALUE).getInstance();
            	            					addObjectToList(element, org.emftext.language.xpath3.XPath3Package.UNARY_EXPR__OPERATOR, value);
            	            					completedElement(value, false);
            	            				}

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 3616);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getUnaryExpr(), 3617, 3703);
            	}

            // Xpath3.g:3369:2: (a4_0= parse_org_emftext_language_xpath3_ValueExpr )
            // Xpath3.g:3370:3: a4_0= parse_org_emftext_language_xpath3_ValueExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ValueExpr_in_parse_org_emftext_language_xpath3_UnaryExpr3248);
            a4_0=parse_org_emftext_language_xpath3_ValueExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createUnaryExpr();
            				startIncompleteElement(element);
            			}
            			if (a4_0 != null) {
            				if (a4_0 != null) {
            					Object value = a4_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.UNARY_EXPR__OPERAND), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_20_0_0_1, a4_0, true);
            				copyLocalizationInfos(a4_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 3704, 3718);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3719, 3721);
            		addExpectedElement(null, 3722, 3723);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 22, parse_org_emftext_language_xpath3_UnaryExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_UnaryExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_FilterExpr"
    // Xpath3.g:3402:1: parse_org_emftext_language_xpath3_FilterExpr returns [org.emftext.language.xpath3.FilterExpr element = null] : (a0_0= parse_org_emftext_language_xpath3_PrimaryExpr ) ( (a1_0= parse_org_emftext_language_xpath3_Predicate ) )* ;
    public final org.emftext.language.xpath3.FilterExpr parse_org_emftext_language_xpath3_FilterExpr() throws RecognitionException {
        org.emftext.language.xpath3.FilterExpr element =  null;

        int parse_org_emftext_language_xpath3_FilterExpr_StartIndex = input.index();

        org.emftext.language.xpath3.PrimaryExpr a0_0 =null;

        org.emftext.language.xpath3.Predicate a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return element; }

            // Xpath3.g:3405:2: ( (a0_0= parse_org_emftext_language_xpath3_PrimaryExpr ) ( (a1_0= parse_org_emftext_language_xpath3_Predicate ) )* )
            // Xpath3.g:3406:2: (a0_0= parse_org_emftext_language_xpath3_PrimaryExpr ) ( (a1_0= parse_org_emftext_language_xpath3_Predicate ) )*
            {
            // Xpath3.g:3406:2: (a0_0= parse_org_emftext_language_xpath3_PrimaryExpr )
            // Xpath3.g:3407:3: a0_0= parse_org_emftext_language_xpath3_PrimaryExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_PrimaryExpr_in_parse_org_emftext_language_xpath3_FilterExpr3285);
            a0_0=parse_org_emftext_language_xpath3_PrimaryExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createFilterExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.FILTER_EXPR__PRIMARY_EXPR), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_21_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getFilterExpr(), 3724);
            		addExpectedElement(null, 3725, 3730);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 3731, 3732);
            		addExpectedElement(null, 3733, 3741);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3742, 3744);
            		addExpectedElement(null, 3745, 3746);
            	}

            // Xpath3.g:3437:2: ( (a1_0= parse_org_emftext_language_xpath3_Predicate ) )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==34) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // Xpath3.g:3438:3: (a1_0= parse_org_emftext_language_xpath3_Predicate )
            	    {
            	    // Xpath3.g:3438:3: (a1_0= parse_org_emftext_language_xpath3_Predicate )
            	    // Xpath3.g:3439:4: a1_0= parse_org_emftext_language_xpath3_Predicate
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_Predicate_in_parse_org_emftext_language_xpath3_FilterExpr3312);
            	    a1_0=parse_org_emftext_language_xpath3_Predicate();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createFilterExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a1_0 != null) {
            	    					if (a1_0 != null) {
            	    						Object value = a1_0;
            	    						addObjectToList(element, org.emftext.language.xpath3.XPath3Package.FILTER_EXPR__PREDICATE, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_21_0_0_1, a1_0, true);
            	    					copyLocalizationInfos(a1_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getFilterExpr(), 3747);
            		addExpectedElement(null, 3748, 3753);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 3754, 3755);
            		addExpectedElement(null, 3756, 3764);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3765, 3767);
            		addExpectedElement(null, 3768, 3769);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 23, parse_org_emftext_language_xpath3_FilterExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_FilterExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_FunctionCall"
    // Xpath3.g:3475:1: parse_org_emftext_language_xpath3_FunctionCall returns [org.emftext.language.xpath3.FunctionCall element = null] : ( (a0= QNAME ) | (a1= NCNAME ) ) a2= '(' ( ( (a3_0= parse_org_emftext_language_xpath3_IfExpr |a3_1= parse_org_emftext_language_xpath3_ForExpr |a3_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a3_3= parse_org_emftext_language_xpath3_OrExpr ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath3_IfExpr |a5_1= parse_org_emftext_language_xpath3_ForExpr |a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath3_OrExpr ) ) )* ) )? a6= ')' ;
    public final org.emftext.language.xpath3.FunctionCall parse_org_emftext_language_xpath3_FunctionCall() throws RecognitionException {
        org.emftext.language.xpath3.FunctionCall element =  null;

        int parse_org_emftext_language_xpath3_FunctionCall_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        org.emftext.language.xpath3.IfExpr a3_0 =null;

        org.emftext.language.xpath3.ForExpr a3_1 =null;

        org.emftext.language.xpath3.QuantifiedExpr a3_2 =null;

        org.emftext.language.xpath3.OrExpr a3_3 =null;

        org.emftext.language.xpath3.IfExpr a5_0 =null;

        org.emftext.language.xpath3.ForExpr a5_1 =null;

        org.emftext.language.xpath3.QuantifiedExpr a5_2 =null;

        org.emftext.language.xpath3.OrExpr a5_3 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return element; }

            // Xpath3.g:3478:2: ( ( (a0= QNAME ) | (a1= NCNAME ) ) a2= '(' ( ( (a3_0= parse_org_emftext_language_xpath3_IfExpr |a3_1= parse_org_emftext_language_xpath3_ForExpr |a3_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a3_3= parse_org_emftext_language_xpath3_OrExpr ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath3_IfExpr |a5_1= parse_org_emftext_language_xpath3_ForExpr |a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath3_OrExpr ) ) )* ) )? a6= ')' )
            // Xpath3.g:3479:2: ( (a0= QNAME ) | (a1= NCNAME ) ) a2= '(' ( ( (a3_0= parse_org_emftext_language_xpath3_IfExpr |a3_1= parse_org_emftext_language_xpath3_ForExpr |a3_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a3_3= parse_org_emftext_language_xpath3_OrExpr ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath3_IfExpr |a5_1= parse_org_emftext_language_xpath3_ForExpr |a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath3_OrExpr ) ) )* ) )? a6= ')'
            {
            // Xpath3.g:3479:2: ( (a0= QNAME ) | (a1= NCNAME ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==QNAME) ) {
                alt35=1;
            }
            else if ( (LA35_0==NCNAME) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;

            }
            switch (alt35) {
                case 1 :
                    // Xpath3.g:3480:3: (a0= QNAME )
                    {
                    // Xpath3.g:3480:3: (a0= QNAME )
                    // Xpath3.g:3481:4: a0= QNAME
                    {
                    a0=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_FunctionCall3362); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createFunctionCall();
                    					startIncompleteElement(element);
                    				}
                    				if (a0 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.FUNCTION_CALL__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a0).getLine(), ((CommonToken) a0).getCharPositionInLine(), ((CommonToken) a0).getStartIndex(), ((CommonToken) a0).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.FUNCTION_CALL__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_22_0_0_0_0_0_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a0, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, 3770);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath3.g:3517:6: (a1= NCNAME )
                    {
                    // Xpath3.g:3517:6: (a1= NCNAME )
                    // Xpath3.g:3518:4: a1= NCNAME
                    {
                    a1=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_FunctionCall3400); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createFunctionCall();
                    					startIncompleteElement(element);
                    				}
                    				if (a1 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.FUNCTION_CALL__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a1).getLine(), ((CommonToken) a1).getCharPositionInLine(), ((CommonToken) a1).getStartIndex(), ((CommonToken) a1).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.FUNCTION_CALL__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_22_0_0_0_0_1_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a1, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, 3771);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 3772);
            	}

            a2=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_FunctionCall3434); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createFunctionCall();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_22_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getFunctionCall(), 3773, 3863);
            		addExpectedElement(null, 3864);
            	}

            // Xpath3.g:3574:2: ( ( (a3_0= parse_org_emftext_language_xpath3_IfExpr |a3_1= parse_org_emftext_language_xpath3_ForExpr |a3_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a3_3= parse_org_emftext_language_xpath3_OrExpr ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath3_IfExpr |a5_1= parse_org_emftext_language_xpath3_ForExpr |a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath3_OrExpr ) ) )* ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( ((LA39_0 >= DECIMAL_LITERAL && LA39_0 <= STRING_LITERAL)||(LA39_0 >= 12 && LA39_0 <= 13)||(LA39_0 >= 15 && LA39_0 <= 16)||(LA39_0 >= 18 && LA39_0 <= 22)||LA39_0==33||(LA39_0 >= 36 && LA39_0 <= 37)||LA39_0==40||(LA39_0 >= 43 && LA39_0 <= 46)||(LA39_0 >= 48 && LA39_0 <= 49)||LA39_0==53||(LA39_0 >= 55 && LA39_0 <= 57)||LA39_0==61||LA39_0==70||LA39_0==72||(LA39_0 >= 75 && LA39_0 <= 78)||(LA39_0 >= 81 && LA39_0 <= 85)) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // Xpath3.g:3575:3: ( (a3_0= parse_org_emftext_language_xpath3_IfExpr |a3_1= parse_org_emftext_language_xpath3_ForExpr |a3_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a3_3= parse_org_emftext_language_xpath3_OrExpr ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath3_IfExpr |a5_1= parse_org_emftext_language_xpath3_ForExpr |a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath3_OrExpr ) ) )* )
                    {
                    // Xpath3.g:3575:3: ( (a3_0= parse_org_emftext_language_xpath3_IfExpr |a3_1= parse_org_emftext_language_xpath3_ForExpr |a3_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a3_3= parse_org_emftext_language_xpath3_OrExpr ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath3_IfExpr |a5_1= parse_org_emftext_language_xpath3_ForExpr |a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath3_OrExpr ) ) )* )
                    // Xpath3.g:3576:4: (a3_0= parse_org_emftext_language_xpath3_IfExpr |a3_1= parse_org_emftext_language_xpath3_ForExpr |a3_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a3_3= parse_org_emftext_language_xpath3_OrExpr ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath3_IfExpr |a5_1= parse_org_emftext_language_xpath3_ForExpr |a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath3_OrExpr ) ) )*
                    {
                    // Xpath3.g:3576:4: (a3_0= parse_org_emftext_language_xpath3_IfExpr |a3_1= parse_org_emftext_language_xpath3_ForExpr |a3_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a3_3= parse_org_emftext_language_xpath3_OrExpr )
                    int alt36=4;
                    switch ( input.LA(1) ) {
                    case 61:
                        {
                        alt36=1;
                        }
                        break;
                    case 57:
                        {
                        alt36=2;
                        }
                        break;
                    case 53:
                    case 84:
                        {
                        alt36=3;
                        }
                        break;
                    case DECIMAL_LITERAL:
                    case DOUBLE_LITERAL:
                    case INTEGER_LITERAL:
                    case NCNAME:
                    case QNAME:
                    case STRING_LITERAL:
                    case 12:
                    case 13:
                    case 15:
                    case 16:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 33:
                    case 36:
                    case 37:
                    case 40:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 48:
                    case 49:
                    case 55:
                    case 56:
                    case 70:
                    case 72:
                    case 75:
                    case 76:
                    case 77:
                    case 78:
                    case 81:
                    case 82:
                    case 83:
                    case 85:
                        {
                        alt36=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 36, 0, input);

                        throw nvae;

                    }

                    switch (alt36) {
                        case 1 :
                            // Xpath3.g:3577:5: a3_0= parse_org_emftext_language_xpath3_IfExpr
                            {
                            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_FunctionCall3463);
                            a3_0=parse_org_emftext_language_xpath3_IfExpr();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createFunctionCall();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_0 != null) {
                            						if (a3_0 != null) {
                            							Object value = a3_0;
                            							addObjectToList(element, org.emftext.language.xpath3.XPath3Package.FUNCTION_CALL__ARG, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_22_0_0_2_0_0_0, a3_0, true);
                            						copyLocalizationInfos(a3_0, element);
                            					}
                            				}

                            }
                            break;
                        case 2 :
                            // Xpath3.g:3596:10: a3_1= parse_org_emftext_language_xpath3_ForExpr
                            {
                            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_FunctionCall3483);
                            a3_1=parse_org_emftext_language_xpath3_ForExpr();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createFunctionCall();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_1 != null) {
                            						if (a3_1 != null) {
                            							Object value = a3_1;
                            							addObjectToList(element, org.emftext.language.xpath3.XPath3Package.FUNCTION_CALL__ARG, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_22_0_0_2_0_0_0, a3_1, true);
                            						copyLocalizationInfos(a3_1, element);
                            					}
                            				}

                            }
                            break;
                        case 3 :
                            // Xpath3.g:3615:10: a3_2= parse_org_emftext_language_xpath3_QuantifiedExpr
                            {
                            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_FunctionCall3503);
                            a3_2=parse_org_emftext_language_xpath3_QuantifiedExpr();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createFunctionCall();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_2 != null) {
                            						if (a3_2 != null) {
                            							Object value = a3_2;
                            							addObjectToList(element, org.emftext.language.xpath3.XPath3Package.FUNCTION_CALL__ARG, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_22_0_0_2_0_0_0, a3_2, true);
                            						copyLocalizationInfos(a3_2, element);
                            					}
                            				}

                            }
                            break;
                        case 4 :
                            // Xpath3.g:3634:10: a3_3= parse_org_emftext_language_xpath3_OrExpr
                            {
                            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_FunctionCall3523);
                            a3_3=parse_org_emftext_language_xpath3_OrExpr();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createFunctionCall();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_3 != null) {
                            						if (a3_3 != null) {
                            							Object value = a3_3;
                            							addObjectToList(element, org.emftext.language.xpath3.XPath3Package.FUNCTION_CALL__ARG, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_22_0_0_2_0_0_0, a3_3, true);
                            						copyLocalizationInfos(a3_3, element);
                            					}
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, 3865, 3866);
                    			}

                    // Xpath3.g:3659:4: ( (a4= ',' (a5_0= parse_org_emftext_language_xpath3_IfExpr |a5_1= parse_org_emftext_language_xpath3_ForExpr |a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath3_OrExpr ) ) )*
                    loop38:
                    do {
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( (LA38_0==17) ) {
                            alt38=1;
                        }


                        switch (alt38) {
                    	case 1 :
                    	    // Xpath3.g:3660:5: (a4= ',' (a5_0= parse_org_emftext_language_xpath3_IfExpr |a5_1= parse_org_emftext_language_xpath3_ForExpr |a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath3_OrExpr ) )
                    	    {
                    	    // Xpath3.g:3660:5: (a4= ',' (a5_0= parse_org_emftext_language_xpath3_IfExpr |a5_1= parse_org_emftext_language_xpath3_ForExpr |a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath3_OrExpr ) )
                    	    // Xpath3.g:3661:6: a4= ',' (a5_0= parse_org_emftext_language_xpath3_IfExpr |a5_1= parse_org_emftext_language_xpath3_ForExpr |a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath3_OrExpr )
                    	    {
                    	    a4=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath3_FunctionCall3564); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createFunctionCall();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_22_0_0_2_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((CommonToken)a4, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getFunctionCall(), 3867, 3957);
                    	    					}

                    	    // Xpath3.g:3675:6: (a5_0= parse_org_emftext_language_xpath3_IfExpr |a5_1= parse_org_emftext_language_xpath3_ForExpr |a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath3_OrExpr )
                    	    int alt37=4;
                    	    switch ( input.LA(1) ) {
                    	    case 61:
                    	        {
                    	        alt37=1;
                    	        }
                    	        break;
                    	    case 57:
                    	        {
                    	        alt37=2;
                    	        }
                    	        break;
                    	    case 53:
                    	    case 84:
                    	        {
                    	        alt37=3;
                    	        }
                    	        break;
                    	    case DECIMAL_LITERAL:
                    	    case DOUBLE_LITERAL:
                    	    case INTEGER_LITERAL:
                    	    case NCNAME:
                    	    case QNAME:
                    	    case STRING_LITERAL:
                    	    case 12:
                    	    case 13:
                    	    case 15:
                    	    case 16:
                    	    case 18:
                    	    case 19:
                    	    case 20:
                    	    case 21:
                    	    case 22:
                    	    case 33:
                    	    case 36:
                    	    case 37:
                    	    case 40:
                    	    case 43:
                    	    case 44:
                    	    case 45:
                    	    case 46:
                    	    case 48:
                    	    case 49:
                    	    case 55:
                    	    case 56:
                    	    case 70:
                    	    case 72:
                    	    case 75:
                    	    case 76:
                    	    case 77:
                    	    case 78:
                    	    case 81:
                    	    case 82:
                    	    case 83:
                    	    case 85:
                    	        {
                    	        alt37=4;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 37, 0, input);

                    	        throw nvae;

                    	    }

                    	    switch (alt37) {
                    	        case 1 :
                    	            // Xpath3.g:3676:7: a5_0= parse_org_emftext_language_xpath3_IfExpr
                    	            {
                    	            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_FunctionCall3598);
                    	            a5_0=parse_org_emftext_language_xpath3_IfExpr();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createFunctionCall();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_0 != null) {
                    	            								if (a5_0 != null) {
                    	            									Object value = a5_0;
                    	            									addObjectToList(element, org.emftext.language.xpath3.XPath3Package.FUNCTION_CALL__ARG, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_22_0_0_2_0_0_1_0_0_2, a5_0, true);
                    	            								copyLocalizationInfos(a5_0, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 2 :
                    	            // Xpath3.g:3695:14: a5_1= parse_org_emftext_language_xpath3_ForExpr
                    	            {
                    	            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_FunctionCall3624);
                    	            a5_1=parse_org_emftext_language_xpath3_ForExpr();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createFunctionCall();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_1 != null) {
                    	            								if (a5_1 != null) {
                    	            									Object value = a5_1;
                    	            									addObjectToList(element, org.emftext.language.xpath3.XPath3Package.FUNCTION_CALL__ARG, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_22_0_0_2_0_0_1_0_0_2, a5_1, true);
                    	            								copyLocalizationInfos(a5_1, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 3 :
                    	            // Xpath3.g:3714:14: a5_2= parse_org_emftext_language_xpath3_QuantifiedExpr
                    	            {
                    	            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_FunctionCall3650);
                    	            a5_2=parse_org_emftext_language_xpath3_QuantifiedExpr();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createFunctionCall();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_2 != null) {
                    	            								if (a5_2 != null) {
                    	            									Object value = a5_2;
                    	            									addObjectToList(element, org.emftext.language.xpath3.XPath3Package.FUNCTION_CALL__ARG, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_22_0_0_2_0_0_1_0_0_2, a5_2, true);
                    	            								copyLocalizationInfos(a5_2, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 4 :
                    	            // Xpath3.g:3733:14: a5_3= parse_org_emftext_language_xpath3_OrExpr
                    	            {
                    	            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_FunctionCall3676);
                    	            a5_3=parse_org_emftext_language_xpath3_OrExpr();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createFunctionCall();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_3 != null) {
                    	            								if (a5_3 != null) {
                    	            									Object value = a5_3;
                    	            									addObjectToList(element, org.emftext.language.xpath3.XPath3Package.FUNCTION_CALL__ARG, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_22_0_0_2_0_0_1_0_0_2, a5_3, true);
                    	            								copyLocalizationInfos(a5_3, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, 3958, 3959);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop38;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, 3960, 3961);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 3962);
            	}

            a6=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_FunctionCall3750); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createFunctionCall();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_22_0_0_3, null, true);
            		copyLocalizationInfos((CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 3963, 3968);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getFilterExpr(), 3969);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 3970, 3971);
            		addExpectedElement(null, 3972, 3980);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 3981, 3983);
            		addExpectedElement(null, 3984, 3985);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 24, parse_org_emftext_language_xpath3_FunctionCall_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_FunctionCall"



    // $ANTLR start "parse_org_emftext_language_xpath3_PathExpr"
    // Xpath3.g:3796:1: parse_org_emftext_language_xpath3_PathExpr returns [org.emftext.language.xpath3.PathExpr element = null] : (a0_0= parse_org_emftext_language_xpath3_PathExprChild ) ( (a1_0= parse_org_emftext_language_xpath3_ChildStepExpr |a1_1= parse_org_emftext_language_xpath3_DescOrSelfStepExpr ) )* ;
    public final org.emftext.language.xpath3.PathExpr parse_org_emftext_language_xpath3_PathExpr() throws RecognitionException {
        org.emftext.language.xpath3.PathExpr element =  null;

        int parse_org_emftext_language_xpath3_PathExpr_StartIndex = input.index();

        org.emftext.language.xpath3.PathExprChild a0_0 =null;

        org.emftext.language.xpath3.ChildStepExpr a1_0 =null;

        org.emftext.language.xpath3.DescOrSelfStepExpr a1_1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return element; }

            // Xpath3.g:3799:2: ( (a0_0= parse_org_emftext_language_xpath3_PathExprChild ) ( (a1_0= parse_org_emftext_language_xpath3_ChildStepExpr |a1_1= parse_org_emftext_language_xpath3_DescOrSelfStepExpr ) )* )
            // Xpath3.g:3800:2: (a0_0= parse_org_emftext_language_xpath3_PathExprChild ) ( (a1_0= parse_org_emftext_language_xpath3_ChildStepExpr |a1_1= parse_org_emftext_language_xpath3_DescOrSelfStepExpr ) )*
            {
            // Xpath3.g:3800:2: (a0_0= parse_org_emftext_language_xpath3_PathExprChild )
            // Xpath3.g:3801:3: a0_0= parse_org_emftext_language_xpath3_PathExprChild
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_PathExprChild_in_parse_org_emftext_language_xpath3_PathExpr3783);
            a0_0=parse_org_emftext_language_xpath3_PathExprChild();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createPathExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath3.XPath3Package.PATH_EXPR__STEP, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_23_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 3986, 3987);
            		addExpectedElement(null, 3988, 4002);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4003, 4005);
            		addExpectedElement(null, 4006, 4007);
            	}

            // Xpath3.g:3829:2: ( (a1_0= parse_org_emftext_language_xpath3_ChildStepExpr |a1_1= parse_org_emftext_language_xpath3_DescOrSelfStepExpr ) )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( ((LA41_0 >= 21 && LA41_0 <= 22)) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // Xpath3.g:3830:3: (a1_0= parse_org_emftext_language_xpath3_ChildStepExpr |a1_1= parse_org_emftext_language_xpath3_DescOrSelfStepExpr )
            	    {
            	    // Xpath3.g:3830:3: (a1_0= parse_org_emftext_language_xpath3_ChildStepExpr |a1_1= parse_org_emftext_language_xpath3_DescOrSelfStepExpr )
            	    int alt40=2;
            	    int LA40_0 = input.LA(1);

            	    if ( (LA40_0==21) ) {
            	        alt40=1;
            	    }
            	    else if ( (LA40_0==22) ) {
            	        alt40=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 40, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt40) {
            	        case 1 :
            	            // Xpath3.g:3831:4: a1_0= parse_org_emftext_language_xpath3_ChildStepExpr
            	            {
            	            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ChildStepExpr_in_parse_org_emftext_language_xpath3_PathExpr3810);
            	            a1_0=parse_org_emftext_language_xpath3_ChildStepExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            				if (terminateParsing) {
            	            					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	            				}
            	            				if (element == null) {
            	            					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createPathExpr();
            	            					startIncompleteElement(element);
            	            				}
            	            				if (a1_0 != null) {
            	            					if (a1_0 != null) {
            	            						Object value = a1_0;
            	            						addObjectToList(element, org.emftext.language.xpath3.XPath3Package.PATH_EXPR__STEP, value);
            	            						completedElement(value, true);
            	            					}
            	            					collectHiddenTokens(element);
            	            					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_23_0_0_1, a1_0, true);
            	            					copyLocalizationInfos(a1_0, element);
            	            				}
            	            			}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath3.g:3850:8: a1_1= parse_org_emftext_language_xpath3_DescOrSelfStepExpr
            	            {
            	            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DescOrSelfStepExpr_in_parse_org_emftext_language_xpath3_PathExpr3827);
            	            a1_1=parse_org_emftext_language_xpath3_DescOrSelfStepExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            				if (terminateParsing) {
            	            					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	            				}
            	            				if (element == null) {
            	            					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createPathExpr();
            	            					startIncompleteElement(element);
            	            				}
            	            				if (a1_1 != null) {
            	            					if (a1_1 != null) {
            	            						Object value = a1_1;
            	            						addObjectToList(element, org.emftext.language.xpath3.XPath3Package.PATH_EXPR__STEP, value);
            	            						completedElement(value, true);
            	            					}
            	            					collectHiddenTokens(element);
            	            					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_23_0_0_1, a1_1, true);
            	            					copyLocalizationInfos(a1_1, element);
            	            				}
            	            			}

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4008, 4009);
            		addExpectedElement(null, 4010, 4024);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4025, 4027);
            		addExpectedElement(null, 4028, 4029);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 25, parse_org_emftext_language_xpath3_PathExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_PathExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_ChildStepExpr"
    // Xpath3.g:3884:1: parse_org_emftext_language_xpath3_ChildStepExpr returns [org.emftext.language.xpath3.ChildStepExpr element = null] : a0= '/' (a1_0= parse_org_emftext_language_xpath3_StepExpr ) ;
    public final org.emftext.language.xpath3.ChildStepExpr parse_org_emftext_language_xpath3_ChildStepExpr() throws RecognitionException {
        org.emftext.language.xpath3.ChildStepExpr element =  null;

        int parse_org_emftext_language_xpath3_ChildStepExpr_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath3.StepExpr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return element; }

            // Xpath3.g:3887:2: (a0= '/' (a1_0= parse_org_emftext_language_xpath3_StepExpr ) )
            // Xpath3.g:3888:2: a0= '/' (a1_0= parse_org_emftext_language_xpath3_StepExpr )
            {
            a0=(Token)match(input,21,FOLLOW_21_in_parse_org_emftext_language_xpath3_ChildStepExpr3868); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createChildStepExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_24_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getChildStepExpr(), 4030, 4062);
            	}

            // Xpath3.g:3902:2: (a1_0= parse_org_emftext_language_xpath3_StepExpr )
            // Xpath3.g:3903:3: a1_0= parse_org_emftext_language_xpath3_StepExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_StepExpr_in_parse_org_emftext_language_xpath3_ChildStepExpr3886);
            a1_0=parse_org_emftext_language_xpath3_StepExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createChildStepExpr();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.CHILD_STEP_EXPR__STEP), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_24_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 4063, 4068);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4069, 4070);
            		addExpectedElement(null, 4071, 4079);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4080, 4082);
            		addExpectedElement(null, 4083, 4084);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 26, parse_org_emftext_language_xpath3_ChildStepExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_ChildStepExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_DescOrSelfStepExpr"
    // Xpath3.g:3937:1: parse_org_emftext_language_xpath3_DescOrSelfStepExpr returns [org.emftext.language.xpath3.DescOrSelfStepExpr element = null] : a0= '//' (a1_0= parse_org_emftext_language_xpath3_StepExpr ) ;
    public final org.emftext.language.xpath3.DescOrSelfStepExpr parse_org_emftext_language_xpath3_DescOrSelfStepExpr() throws RecognitionException {
        org.emftext.language.xpath3.DescOrSelfStepExpr element =  null;

        int parse_org_emftext_language_xpath3_DescOrSelfStepExpr_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath3.StepExpr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return element; }

            // Xpath3.g:3940:2: (a0= '//' (a1_0= parse_org_emftext_language_xpath3_StepExpr ) )
            // Xpath3.g:3941:2: a0= '//' (a1_0= parse_org_emftext_language_xpath3_StepExpr )
            {
            a0=(Token)match(input,22,FOLLOW_22_in_parse_org_emftext_language_xpath3_DescOrSelfStepExpr3919); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createDescOrSelfStepExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_25_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getDescOrSelfStepExpr(), 4085, 4117);
            	}

            // Xpath3.g:3955:2: (a1_0= parse_org_emftext_language_xpath3_StepExpr )
            // Xpath3.g:3956:3: a1_0= parse_org_emftext_language_xpath3_StepExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_StepExpr_in_parse_org_emftext_language_xpath3_DescOrSelfStepExpr3937);
            a1_0=parse_org_emftext_language_xpath3_StepExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createDescOrSelfStepExpr();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.DESC_OR_SELF_STEP_EXPR__STEP), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_25_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 4118, 4123);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4124, 4125);
            		addExpectedElement(null, 4126, 4134);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4135, 4137);
            		addExpectedElement(null, 4138, 4139);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 27, parse_org_emftext_language_xpath3_DescOrSelfStepExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_DescOrSelfStepExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_RootStepExpr"
    // Xpath3.g:3990:1: parse_org_emftext_language_xpath3_RootStepExpr returns [org.emftext.language.xpath3.RootStepExpr element = null] : a0= '/' ;
    public final org.emftext.language.xpath3.RootStepExpr parse_org_emftext_language_xpath3_RootStepExpr() throws RecognitionException {
        org.emftext.language.xpath3.RootStepExpr element =  null;

        int parse_org_emftext_language_xpath3_RootStepExpr_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return element; }

            // Xpath3.g:3993:2: (a0= '/' )
            // Xpath3.g:3994:2: a0= '/'
            {
            a0=(Token)match(input,21,FOLLOW_21_in_parse_org_emftext_language_xpath3_RootStepExpr3970); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createRootStepExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_26_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 4140, 4145);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4146, 4147);
            		addExpectedElement(null, 4148, 4156);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4157, 4159);
            		addExpectedElement(null, 4160, 4161);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 28, parse_org_emftext_language_xpath3_RootStepExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_RootStepExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_SelfStepExpr"
    // Xpath3.g:4017:1: parse_org_emftext_language_xpath3_SelfStepExpr returns [org.emftext.language.xpath3.SelfStepExpr element = null] : (a0_0= parse_org_emftext_language_xpath3_SelfStepExprChild ) ;
    public final org.emftext.language.xpath3.SelfStepExpr parse_org_emftext_language_xpath3_SelfStepExpr() throws RecognitionException {
        org.emftext.language.xpath3.SelfStepExpr element =  null;

        int parse_org_emftext_language_xpath3_SelfStepExpr_StartIndex = input.index();

        org.emftext.language.xpath3.SelfStepExprChild a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return element; }

            // Xpath3.g:4020:2: ( (a0_0= parse_org_emftext_language_xpath3_SelfStepExprChild ) )
            // Xpath3.g:4021:2: (a0_0= parse_org_emftext_language_xpath3_SelfStepExprChild )
            {
            // Xpath3.g:4021:2: (a0_0= parse_org_emftext_language_xpath3_SelfStepExprChild )
            // Xpath3.g:4022:3: a0_0= parse_org_emftext_language_xpath3_SelfStepExprChild
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_SelfStepExprChild_in_parse_org_emftext_language_xpath3_SelfStepExpr4003);
            a0_0=parse_org_emftext_language_xpath3_SelfStepExprChild();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createSelfStepExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.SELF_STEP_EXPR__STEP), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_27_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 4162, 4167);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4168, 4169);
            		addExpectedElement(null, 4170, 4178);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4179, 4181);
            		addExpectedElement(null, 4182, 4183);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 29, parse_org_emftext_language_xpath3_SelfStepExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_SelfStepExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_GeneralForwardStep"
    // Xpath3.g:4056:1: parse_org_emftext_language_xpath3_GeneralForwardStep returns [org.emftext.language.xpath3.GeneralForwardStep element = null] : ( (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' ) ) a10= '::' (a11_0= parse_org_emftext_language_xpath3_NodeTest ) ( (a12_0= parse_org_emftext_language_xpath3_Predicate ) )* ;
    public final org.emftext.language.xpath3.GeneralForwardStep parse_org_emftext_language_xpath3_GeneralForwardStep() throws RecognitionException {
        org.emftext.language.xpath3.GeneralForwardStep element =  null;

        int parse_org_emftext_language_xpath3_GeneralForwardStep_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a10=null;
        org.emftext.language.xpath3.NodeTest a11_0 =null;

        org.emftext.language.xpath3.Predicate a12_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return element; }

            // Xpath3.g:4059:2: ( ( (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' ) ) a10= '::' (a11_0= parse_org_emftext_language_xpath3_NodeTest ) ( (a12_0= parse_org_emftext_language_xpath3_Predicate ) )* )
            // Xpath3.g:4060:2: ( (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' ) ) a10= '::' (a11_0= parse_org_emftext_language_xpath3_NodeTest ) ( (a12_0= parse_org_emftext_language_xpath3_Predicate ) )*
            {
            // Xpath3.g:4060:2: ( (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' ) )
            // Xpath3.g:4061:3: (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' )
            {
            // Xpath3.g:4061:3: (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' )
            int alt42=8;
            switch ( input.LA(1) ) {
            case 43:
                {
                alt42=1;
                }
                break;
            case 45:
                {
                alt42=2;
                }
                break;
            case 40:
                {
                alt42=3;
                }
                break;
            case 83:
                {
                alt42=4;
                }
                break;
            case 46:
                {
                alt42=5;
                }
                break;
            case 56:
                {
                alt42=6;
                }
                break;
            case 55:
                {
                alt42=7;
                }
                break;
            case 70:
                {
                alt42=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;

            }

            switch (alt42) {
                case 1 :
                    // Xpath3.g:4062:4: a0= 'child'
                    {
                    a0=(Token)match(input,43,FOLLOW_43_in_parse_org_emftext_language_xpath3_GeneralForwardStep4045); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_28_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath3.ForwardAxisKind.CHILD_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath3.g:4075:8: a1= 'descendant'
                    {
                    a1=(Token)match(input,45,FOLLOW_45_in_parse_org_emftext_language_xpath3_GeneralForwardStep4060); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_28_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath3.ForwardAxisKind.DESCENDANT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath3.g:4088:8: a2= 'attribute'
                    {
                    a2=(Token)match(input,40,FOLLOW_40_in_parse_org_emftext_language_xpath3_GeneralForwardStep4075); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_28_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath3.ForwardAxisKind.ATTRIBUTE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xpath3.g:4101:8: a3= 'self'
                    {
                    a3=(Token)match(input,83,FOLLOW_83_in_parse_org_emftext_language_xpath3_GeneralForwardStep4090); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_28_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath3.ForwardAxisKind.SELF_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xpath3.g:4114:8: a4= 'descendant-or-self'
                    {
                    a4=(Token)match(input,46,FOLLOW_46_in_parse_org_emftext_language_xpath3_GeneralForwardStep4105); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_28_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath3.ForwardAxisKind.DESCENDANT_OR_SELF_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 6 :
                    // Xpath3.g:4127:8: a5= 'following-sibling'
                    {
                    a5=(Token)match(input,56,FOLLOW_56_in_parse_org_emftext_language_xpath3_GeneralForwardStep4120); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_28_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a5, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath3.ForwardAxisKind.FOLLOWING_SIBLING_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 7 :
                    // Xpath3.g:4140:8: a6= 'following'
                    {
                    a6=(Token)match(input,55,FOLLOW_55_in_parse_org_emftext_language_xpath3_GeneralForwardStep4135); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_28_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a6, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath3.ForwardAxisKind.FOLLOWING_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 8 :
                    // Xpath3.g:4153:8: a7= 'namespace'
                    {
                    a7=(Token)match(input,70,FOLLOW_70_in_parse_org_emftext_language_xpath3_GeneralForwardStep4150); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_28_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a7, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath3.ForwardAxisKind.NAMESPACE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 4184);
            	}

            a10=(Token)match(input,24,FOLLOW_24_in_parse_org_emftext_language_xpath3_GeneralForwardStep4171); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralForwardStep();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_28_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a10, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 4185, 4204);
            	}

            // Xpath3.g:4187:2: (a11_0= parse_org_emftext_language_xpath3_NodeTest )
            // Xpath3.g:4188:3: a11_0= parse_org_emftext_language_xpath3_NodeTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_NodeTest_in_parse_org_emftext_language_xpath3_GeneralForwardStep4189);
            a11_0=parse_org_emftext_language_xpath3_NodeTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralForwardStep();
            				startIncompleteElement(element);
            			}
            			if (a11_0 != null) {
            				if (a11_0 != null) {
            					Object value = a11_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_FORWARD_STEP__NODE_TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_28_0_0_2, a11_0, true);
            				copyLocalizationInfos(a11_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 4205);
            		addExpectedElement(null, 4206, 4211);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4212, 4213);
            		addExpectedElement(null, 4214, 4222);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4223, 4225);
            		addExpectedElement(null, 4226, 4227);
            	}

            // Xpath3.g:4218:2: ( (a12_0= parse_org_emftext_language_xpath3_Predicate ) )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==34) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // Xpath3.g:4219:3: (a12_0= parse_org_emftext_language_xpath3_Predicate )
            	    {
            	    // Xpath3.g:4219:3: (a12_0= parse_org_emftext_language_xpath3_Predicate )
            	    // Xpath3.g:4220:4: a12_0= parse_org_emftext_language_xpath3_Predicate
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_Predicate_in_parse_org_emftext_language_xpath3_GeneralForwardStep4216);
            	    a12_0=parse_org_emftext_language_xpath3_Predicate();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralForwardStep();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a12_0 != null) {
            	    					if (a12_0 != null) {
            	    						Object value = a12_0;
            	    						addObjectToList(element, org.emftext.language.xpath3.XPath3Package.GENERAL_FORWARD_STEP__PREDICATE, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_28_0_0_3, a12_0, true);
            	    					copyLocalizationInfos(a12_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 4228);
            		addExpectedElement(null, 4229, 4234);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4235, 4236);
            		addExpectedElement(null, 4237, 4245);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4246, 4248);
            		addExpectedElement(null, 4249, 4250);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 30, parse_org_emftext_language_xpath3_GeneralForwardStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_GeneralForwardStep"



    // $ANTLR start "parse_org_emftext_language_xpath3_AbbrevForwardStep"
    // Xpath3.g:4256:1: parse_org_emftext_language_xpath3_AbbrevForwardStep returns [org.emftext.language.xpath3.AbbrevForwardStep element = null] : ( (a0= '@' )? ) (a3_0= parse_org_emftext_language_xpath3_NodeTest ) ( (a4_0= parse_org_emftext_language_xpath3_Predicate ) )* ;
    public final org.emftext.language.xpath3.AbbrevForwardStep parse_org_emftext_language_xpath3_AbbrevForwardStep() throws RecognitionException {
        org.emftext.language.xpath3.AbbrevForwardStep element =  null;

        int parse_org_emftext_language_xpath3_AbbrevForwardStep_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath3.NodeTest a3_0 =null;

        org.emftext.language.xpath3.Predicate a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return element; }

            // Xpath3.g:4259:2: ( ( (a0= '@' )? ) (a3_0= parse_org_emftext_language_xpath3_NodeTest ) ( (a4_0= parse_org_emftext_language_xpath3_Predicate ) )* )
            // Xpath3.g:4260:2: ( (a0= '@' )? ) (a3_0= parse_org_emftext_language_xpath3_NodeTest ) ( (a4_0= parse_org_emftext_language_xpath3_Predicate ) )*
            {
            // Xpath3.g:4260:2: ( (a0= '@' )? )
            // Xpath3.g:4261:3: (a0= '@' )?
            {
            // Xpath3.g:4261:3: (a0= '@' )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==33) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // Xpath3.g:4262:4: a0= '@'
                    {
                    a0=(Token)match(input,33,FOLLOW_33_in_parse_org_emftext_language_xpath3_AbbrevForwardStep4266); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAbbrevForwardStep();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStepKind().getEEnumLiteral(org.emftext.language.xpath3.AbbrevForwardStepKind.CHILD_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ABBREV_FORWARD_STEP__KIND), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_29_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStepKind().getEEnumLiteral(org.emftext.language.xpath3.AbbrevForwardStepKind.ATTRIBUTE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ABBREV_FORWARD_STEP__KIND), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 4251, 4270);
            	}

            // Xpath3.g:4284:2: (a3_0= parse_org_emftext_language_xpath3_NodeTest )
            // Xpath3.g:4285:3: a3_0= parse_org_emftext_language_xpath3_NodeTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_NodeTest_in_parse_org_emftext_language_xpath3_AbbrevForwardStep4291);
            a3_0=parse_org_emftext_language_xpath3_NodeTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAbbrevForwardStep();
            				startIncompleteElement(element);
            				// initialize enumeration attribute
            				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStepKind().getEEnumLiteral(org.emftext.language.xpath3.AbbrevForwardStepKind.CHILD_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ABBREV_FORWARD_STEP__KIND), value);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ABBREV_FORWARD_STEP__NODE_TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_29_0_0_1, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 4271);
            		addExpectedElement(null, 4272, 4277);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4278, 4279);
            		addExpectedElement(null, 4280, 4288);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4289, 4291);
            		addExpectedElement(null, 4292, 4293);
            	}

            // Xpath3.g:4318:2: ( (a4_0= parse_org_emftext_language_xpath3_Predicate ) )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==34) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // Xpath3.g:4319:3: (a4_0= parse_org_emftext_language_xpath3_Predicate )
            	    {
            	    // Xpath3.g:4319:3: (a4_0= parse_org_emftext_language_xpath3_Predicate )
            	    // Xpath3.g:4320:4: a4_0= parse_org_emftext_language_xpath3_Predicate
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_Predicate_in_parse_org_emftext_language_xpath3_AbbrevForwardStep4318);
            	    a4_0=parse_org_emftext_language_xpath3_Predicate();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAbbrevForwardStep();
            	    					startIncompleteElement(element);
            	    					// initialize enumeration attribute
            	    					Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStepKind().getEEnumLiteral(org.emftext.language.xpath3.AbbrevForwardStepKind.CHILD_VALUE).getInstance();
            	    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ABBREV_FORWARD_STEP__KIND), value);
            	    				}
            	    				if (a4_0 != null) {
            	    					if (a4_0 != null) {
            	    						Object value = a4_0;
            	    						addObjectToList(element, org.emftext.language.xpath3.XPath3Package.ABBREV_FORWARD_STEP__PREDICATE, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_29_0_0_2, a4_0, true);
            	    					copyLocalizationInfos(a4_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 4294);
            		addExpectedElement(null, 4295, 4300);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4301, 4302);
            		addExpectedElement(null, 4303, 4311);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4312, 4314);
            		addExpectedElement(null, 4315, 4316);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 31, parse_org_emftext_language_xpath3_AbbrevForwardStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_AbbrevForwardStep"



    // $ANTLR start "parse_org_emftext_language_xpath3_GeneralReverseStep"
    // Xpath3.g:4359:1: parse_org_emftext_language_xpath3_GeneralReverseStep returns [org.emftext.language.xpath3.GeneralReverseStep element = null] : ( (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' ) ) a7= '::' (a8_0= parse_org_emftext_language_xpath3_NodeTest ) ( (a9_0= parse_org_emftext_language_xpath3_Predicate ) )* ;
    public final org.emftext.language.xpath3.GeneralReverseStep parse_org_emftext_language_xpath3_GeneralReverseStep() throws RecognitionException {
        org.emftext.language.xpath3.GeneralReverseStep element =  null;

        int parse_org_emftext_language_xpath3_GeneralReverseStep_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a7=null;
        org.emftext.language.xpath3.NodeTest a8_0 =null;

        org.emftext.language.xpath3.Predicate a9_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return element; }

            // Xpath3.g:4362:2: ( ( (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' ) ) a7= '::' (a8_0= parse_org_emftext_language_xpath3_NodeTest ) ( (a9_0= parse_org_emftext_language_xpath3_Predicate ) )* )
            // Xpath3.g:4363:2: ( (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' ) ) a7= '::' (a8_0= parse_org_emftext_language_xpath3_NodeTest ) ( (a9_0= parse_org_emftext_language_xpath3_Predicate ) )*
            {
            // Xpath3.g:4363:2: ( (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' ) )
            // Xpath3.g:4364:3: (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' )
            {
            // Xpath3.g:4364:3: (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' )
            int alt46=5;
            switch ( input.LA(1) ) {
            case 75:
                {
                alt46=1;
                }
                break;
            case 36:
                {
                alt46=2;
                }
                break;
            case 77:
                {
                alt46=3;
                }
                break;
            case 76:
                {
                alt46=4;
                }
                break;
            case 37:
                {
                alt46=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;

            }

            switch (alt46) {
                case 1 :
                    // Xpath3.g:4365:4: a0= 'parent'
                    {
                    a0=(Token)match(input,75,FOLLOW_75_in_parse_org_emftext_language_xpath3_GeneralReverseStep4368); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralReverseStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_30_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath3.ReverseAxisKind.PARENT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_REVERSE_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath3.g:4378:8: a1= 'ancestor'
                    {
                    a1=(Token)match(input,36,FOLLOW_36_in_parse_org_emftext_language_xpath3_GeneralReverseStep4383); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralReverseStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_30_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath3.ReverseAxisKind.ANCESTOR_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_REVERSE_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath3.g:4391:8: a2= 'preceding-sibling'
                    {
                    a2=(Token)match(input,77,FOLLOW_77_in_parse_org_emftext_language_xpath3_GeneralReverseStep4398); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralReverseStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_30_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath3.ReverseAxisKind.PRECEDING_SIBLING_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_REVERSE_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xpath3.g:4404:8: a3= 'preceding'
                    {
                    a3=(Token)match(input,76,FOLLOW_76_in_parse_org_emftext_language_xpath3_GeneralReverseStep4413); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralReverseStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_30_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath3.ReverseAxisKind.PRECEDING_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_REVERSE_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xpath3.g:4417:8: a4= 'ancestor-or-self'
                    {
                    a4=(Token)match(input,37,FOLLOW_37_in_parse_org_emftext_language_xpath3_GeneralReverseStep4428); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralReverseStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_30_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath3.ReverseAxisKind.ANCESTOR_OR_SELF_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_REVERSE_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 4317);
            	}

            a7=(Token)match(input,24,FOLLOW_24_in_parse_org_emftext_language_xpath3_GeneralReverseStep4449); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralReverseStep();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_30_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 4318, 4337);
            	}

            // Xpath3.g:4451:2: (a8_0= parse_org_emftext_language_xpath3_NodeTest )
            // Xpath3.g:4452:3: a8_0= parse_org_emftext_language_xpath3_NodeTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_NodeTest_in_parse_org_emftext_language_xpath3_GeneralReverseStep4467);
            a8_0=parse_org_emftext_language_xpath3_NodeTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralReverseStep();
            				startIncompleteElement(element);
            			}
            			if (a8_0 != null) {
            				if (a8_0 != null) {
            					Object value = a8_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.GENERAL_REVERSE_STEP__NODE_TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_30_0_0_2, a8_0, true);
            				copyLocalizationInfos(a8_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 4338);
            		addExpectedElement(null, 4339, 4344);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4345, 4346);
            		addExpectedElement(null, 4347, 4355);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4356, 4358);
            		addExpectedElement(null, 4359, 4360);
            	}

            // Xpath3.g:4482:2: ( (a9_0= parse_org_emftext_language_xpath3_Predicate ) )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==34) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // Xpath3.g:4483:3: (a9_0= parse_org_emftext_language_xpath3_Predicate )
            	    {
            	    // Xpath3.g:4483:3: (a9_0= parse_org_emftext_language_xpath3_Predicate )
            	    // Xpath3.g:4484:4: a9_0= parse_org_emftext_language_xpath3_Predicate
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_Predicate_in_parse_org_emftext_language_xpath3_GeneralReverseStep4494);
            	    a9_0=parse_org_emftext_language_xpath3_Predicate();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createGeneralReverseStep();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a9_0 != null) {
            	    					if (a9_0 != null) {
            	    						Object value = a9_0;
            	    						addObjectToList(element, org.emftext.language.xpath3.XPath3Package.GENERAL_REVERSE_STEP__PREDICATE, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_30_0_0_3, a9_0, true);
            	    					copyLocalizationInfos(a9_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 4361);
            		addExpectedElement(null, 4362, 4367);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4368, 4369);
            		addExpectedElement(null, 4370, 4378);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4379, 4381);
            		addExpectedElement(null, 4382, 4383);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 32, parse_org_emftext_language_xpath3_GeneralReverseStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_GeneralReverseStep"



    // $ANTLR start "parse_org_emftext_language_xpath3_AbbrevReverseStep"
    // Xpath3.g:4520:1: parse_org_emftext_language_xpath3_AbbrevReverseStep returns [org.emftext.language.xpath3.AbbrevReverseStep element = null] : ( (a0= '..' ) ) ( (a3_0= parse_org_emftext_language_xpath3_Predicate ) )* ;
    public final org.emftext.language.xpath3.AbbrevReverseStep parse_org_emftext_language_xpath3_AbbrevReverseStep() throws RecognitionException {
        org.emftext.language.xpath3.AbbrevReverseStep element =  null;

        int parse_org_emftext_language_xpath3_AbbrevReverseStep_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath3.Predicate a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return element; }

            // Xpath3.g:4523:2: ( ( (a0= '..' ) ) ( (a3_0= parse_org_emftext_language_xpath3_Predicate ) )* )
            // Xpath3.g:4524:2: ( (a0= '..' ) ) ( (a3_0= parse_org_emftext_language_xpath3_Predicate ) )*
            {
            // Xpath3.g:4524:2: ( (a0= '..' ) )
            // Xpath3.g:4525:3: (a0= '..' )
            {
            // Xpath3.g:4525:3: (a0= '..' )
            // Xpath3.g:4526:4: a0= '..'
            {
            a0=(Token)match(input,20,FOLLOW_20_in_parse_org_emftext_language_xpath3_AbbrevReverseStep4544); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            				if (element == null) {
            					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAbbrevReverseStep();
            					startIncompleteElement(element);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_31_0_0_0, null, true);
            				copyLocalizationInfos((CommonToken)a0, element);
            				// set value of enumeration attribute
            				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevReverseStepKind().getEEnumLiteral(org.emftext.language.xpath3.AbbrevReverseStepKind.PARENT_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ABBREV_REVERSE_STEP__KIND), value);
            				completedElement(value, false);
            			}

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevReverseStep(), 4384);
            		addExpectedElement(null, 4385, 4390);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4391, 4392);
            		addExpectedElement(null, 4393, 4401);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4402, 4404);
            		addExpectedElement(null, 4405, 4406);
            	}

            // Xpath3.g:4551:2: ( (a3_0= parse_org_emftext_language_xpath3_Predicate ) )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==34) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // Xpath3.g:4552:3: (a3_0= parse_org_emftext_language_xpath3_Predicate )
            	    {
            	    // Xpath3.g:4552:3: (a3_0= parse_org_emftext_language_xpath3_Predicate )
            	    // Xpath3.g:4553:4: a3_0= parse_org_emftext_language_xpath3_Predicate
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_Predicate_in_parse_org_emftext_language_xpath3_AbbrevReverseStep4574);
            	    a3_0=parse_org_emftext_language_xpath3_Predicate();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAbbrevReverseStep();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a3_0 != null) {
            	    					if (a3_0 != null) {
            	    						Object value = a3_0;
            	    						addObjectToList(element, org.emftext.language.xpath3.XPath3Package.ABBREV_REVERSE_STEP__PREDICATE, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_31_0_0_1, a3_0, true);
            	    					copyLocalizationInfos(a3_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevReverseStep(), 4407);
            		addExpectedElement(null, 4408, 4413);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4414, 4415);
            		addExpectedElement(null, 4416, 4424);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4425, 4427);
            		addExpectedElement(null, 4428, 4429);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 33, parse_org_emftext_language_xpath3_AbbrevReverseStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_AbbrevReverseStep"



    // $ANTLR start "parse_org_emftext_language_xpath3_NodeKindTest"
    // Xpath3.g:4589:1: parse_org_emftext_language_xpath3_NodeKindTest returns [org.emftext.language.xpath3.NodeKindTest element = null] : (a0_0= parse_org_emftext_language_xpath3_KindTest ) ;
    public final org.emftext.language.xpath3.NodeKindTest parse_org_emftext_language_xpath3_NodeKindTest() throws RecognitionException {
        org.emftext.language.xpath3.NodeKindTest element =  null;

        int parse_org_emftext_language_xpath3_NodeKindTest_StartIndex = input.index();

        org.emftext.language.xpath3.KindTest a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return element; }

            // Xpath3.g:4592:2: ( (a0_0= parse_org_emftext_language_xpath3_KindTest ) )
            // Xpath3.g:4593:2: (a0_0= parse_org_emftext_language_xpath3_KindTest )
            {
            // Xpath3.g:4593:2: (a0_0= parse_org_emftext_language_xpath3_KindTest )
            // Xpath3.g:4594:3: a0_0= parse_org_emftext_language_xpath3_KindTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_KindTest_in_parse_org_emftext_language_xpath3_NodeKindTest4619);
            a0_0=parse_org_emftext_language_xpath3_KindTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNodeKindTest();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NODE_KIND_TEST__TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_32_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 4430);
            		addExpectedElement(null, 4431, 4436);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4437, 4438);
            		addExpectedElement(null, 4439, 4447);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4448, 4450);
            		addExpectedElement(null, 4451, 4452);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 4453);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 4454);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 34, parse_org_emftext_language_xpath3_NodeKindTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_NodeKindTest"



    // $ANTLR start "parse_org_emftext_language_xpath3_QNameTest"
    // Xpath3.g:4631:1: parse_org_emftext_language_xpath3_QNameTest returns [org.emftext.language.xpath3.QNameTest element = null] : ( (a0= QNAME ) | (a1= NCNAME ) ) ;
    public final org.emftext.language.xpath3.QNameTest parse_org_emftext_language_xpath3_QNameTest() throws RecognitionException {
        org.emftext.language.xpath3.QNameTest element =  null;

        int parse_org_emftext_language_xpath3_QNameTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return element; }

            // Xpath3.g:4634:2: ( ( (a0= QNAME ) | (a1= NCNAME ) ) )
            // Xpath3.g:4635:2: ( (a0= QNAME ) | (a1= NCNAME ) )
            {
            // Xpath3.g:4635:2: ( (a0= QNAME ) | (a1= NCNAME ) )
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==QNAME) ) {
                alt49=1;
            }
            else if ( (LA49_0==NCNAME) ) {
                alt49=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;

            }
            switch (alt49) {
                case 1 :
                    // Xpath3.g:4636:3: (a0= QNAME )
                    {
                    // Xpath3.g:4636:3: (a0= QNAME )
                    // Xpath3.g:4637:4: a0= QNAME
                    {
                    a0=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_QNameTest4661); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createQNameTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a0 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.QNAME_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a0).getLine(), ((CommonToken) a0).getCharPositionInLine(), ((CommonToken) a0).getStartIndex(), ((CommonToken) a0).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.QNAME_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_33_0_0_0_0_0_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a0, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 4455);
                    			addExpectedElement(null, 4456, 4461);
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4462, 4463);
                    			addExpectedElement(null, 4464, 4472);
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4473, 4475);
                    			addExpectedElement(null, 4476, 4477);
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 4478);
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 4479);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath3.g:4680:6: (a1= NCNAME )
                    {
                    // Xpath3.g:4680:6: (a1= NCNAME )
                    // Xpath3.g:4681:4: a1= NCNAME
                    {
                    a1=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_QNameTest4699); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createQNameTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a1 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.QNAME_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a1).getLine(), ((CommonToken) a1).getCharPositionInLine(), ((CommonToken) a1).getStartIndex(), ((CommonToken) a1).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.QNAME_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_33_0_0_0_0_1_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a1, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			// We've found the last token for this rule. The constructed EObject is now
                    			// complete.
                    			completedElement(element, true);
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 4480);
                    			addExpectedElement(null, 4481, 4486);
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4487, 4488);
                    			addExpectedElement(null, 4489, 4497);
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4498, 4500);
                    			addExpectedElement(null, 4501, 4502);
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 4503);
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 4504);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 4505);
            		addExpectedElement(null, 4506, 4511);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4512, 4513);
            		addExpectedElement(null, 4514, 4522);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4523, 4525);
            		addExpectedElement(null, 4526, 4527);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 4528);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 4529);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 35, parse_org_emftext_language_xpath3_QNameTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_QNameTest"



    // $ANTLR start "parse_org_emftext_language_xpath3_AnyWildcard"
    // Xpath3.g:4744:1: parse_org_emftext_language_xpath3_AnyWildcard returns [org.emftext.language.xpath3.AnyWildcard element = null] : a0= '*' ;
    public final org.emftext.language.xpath3.AnyWildcard parse_org_emftext_language_xpath3_AnyWildcard() throws RecognitionException {
        org.emftext.language.xpath3.AnyWildcard element =  null;

        int parse_org_emftext_language_xpath3_AnyWildcard_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return element; }

            // Xpath3.g:4747:2: (a0= '*' )
            // Xpath3.g:4748:2: a0= '*'
            {
            a0=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath3_AnyWildcard4748); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAnyWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_34_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 4530);
            		addExpectedElement(null, 4531, 4536);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4537, 4538);
            		addExpectedElement(null, 4539, 4547);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4548, 4550);
            		addExpectedElement(null, 4551, 4552);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 4553);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 4554);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 36, parse_org_emftext_language_xpath3_AnyWildcard_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_AnyWildcard"



    // $ANTLR start "parse_org_emftext_language_xpath3_LocalNameWildcard"
    // Xpath3.g:4774:1: parse_org_emftext_language_xpath3_LocalNameWildcard returns [org.emftext.language.xpath3.LocalNameWildcard element = null] : (a0= NCNAME ) a1= ':' a2= '*' ;
    public final org.emftext.language.xpath3.LocalNameWildcard parse_org_emftext_language_xpath3_LocalNameWildcard() throws RecognitionException {
        org.emftext.language.xpath3.LocalNameWildcard element =  null;

        int parse_org_emftext_language_xpath3_LocalNameWildcard_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return element; }

            // Xpath3.g:4777:2: ( (a0= NCNAME ) a1= ':' a2= '*' )
            // Xpath3.g:4778:2: (a0= NCNAME ) a1= ':' a2= '*'
            {
            // Xpath3.g:4778:2: (a0= NCNAME )
            // Xpath3.g:4779:3: a0= NCNAME
            {
            a0=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_LocalNameWildcard4781); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createLocalNameWildcard();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.LOCAL_NAME_WILDCARD__NAMESPACE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((CommonToken) a0).getLine(), ((CommonToken) a0).getCharPositionInLine(), ((CommonToken) a0).getStartIndex(), ((CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.LOCAL_NAME_WILDCARD__NAMESPACE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_35_0_0_0, resolved, true);
            				copyLocalizationInfos((CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 4555);
            	}

            a1=(Token)match(input,23,FOLLOW_23_in_parse_org_emftext_language_xpath3_LocalNameWildcard4802); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createLocalNameWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_35_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 4556);
            	}

            a2=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath3_LocalNameWildcard4816); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createLocalNameWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_35_0_0_2, null, true);
            		copyLocalizationInfos((CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 4557);
            		addExpectedElement(null, 4558, 4563);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4564, 4565);
            		addExpectedElement(null, 4566, 4574);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4575, 4577);
            		addExpectedElement(null, 4578, 4579);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 4580);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 4581);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 37, parse_org_emftext_language_xpath3_LocalNameWildcard_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_LocalNameWildcard"



    // $ANTLR start "parse_org_emftext_language_xpath3_NamespaceWildcard"
    // Xpath3.g:4854:1: parse_org_emftext_language_xpath3_NamespaceWildcard returns [org.emftext.language.xpath3.NamespaceWildcard element = null] : a0= '*' a1= ':' (a2= NCNAME ) ;
    public final org.emftext.language.xpath3.NamespaceWildcard parse_org_emftext_language_xpath3_NamespaceWildcard() throws RecognitionException {
        org.emftext.language.xpath3.NamespaceWildcard element =  null;

        int parse_org_emftext_language_xpath3_NamespaceWildcard_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return element; }

            // Xpath3.g:4857:2: (a0= '*' a1= ':' (a2= NCNAME ) )
            // Xpath3.g:4858:2: a0= '*' a1= ':' (a2= NCNAME )
            {
            a0=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath3_NamespaceWildcard4845); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNamespaceWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_36_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 4582);
            	}

            a1=(Token)match(input,23,FOLLOW_23_in_parse_org_emftext_language_xpath3_NamespaceWildcard4859); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNamespaceWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_36_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 4583);
            	}

            // Xpath3.g:4886:2: (a2= NCNAME )
            // Xpath3.g:4887:3: a2= NCNAME
            {
            a2=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_NamespaceWildcard4877); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNamespaceWildcard();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NAMESPACE_WILDCARD__LOCAL_NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((CommonToken) a2).getLine(), ((CommonToken) a2).getCharPositionInLine(), ((CommonToken) a2).getStartIndex(), ((CommonToken) a2).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NAMESPACE_WILDCARD__LOCAL_NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_36_0_0_2, resolved, true);
            				copyLocalizationInfos((CommonToken) a2, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 4584);
            		addExpectedElement(null, 4585, 4590);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4591, 4592);
            		addExpectedElement(null, 4593, 4601);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4602, 4604);
            		addExpectedElement(null, 4605, 4606);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 4607);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 4608);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 38, parse_org_emftext_language_xpath3_NamespaceWildcard_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_NamespaceWildcard"



    // $ANTLR start "parse_org_emftext_language_xpath3_Predicate"
    // Xpath3.g:4934:1: parse_org_emftext_language_xpath3_Predicate returns [org.emftext.language.xpath3.Predicate element = null] : a0= '[' (a1_0= parse_org_emftext_language_xpath3_Expr ) a2= ']' ;
    public final org.emftext.language.xpath3.Predicate parse_org_emftext_language_xpath3_Predicate() throws RecognitionException {
        org.emftext.language.xpath3.Predicate element =  null;

        int parse_org_emftext_language_xpath3_Predicate_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        org.emftext.language.xpath3.Expr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return element; }

            // Xpath3.g:4937:2: (a0= '[' (a1_0= parse_org_emftext_language_xpath3_Expr ) a2= ']' )
            // Xpath3.g:4938:2: a0= '[' (a1_0= parse_org_emftext_language_xpath3_Expr ) a2= ']'
            {
            a0=(Token)match(input,34,FOLLOW_34_in_parse_org_emftext_language_xpath3_Predicate4913); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createPredicate();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_37_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPredicate(), 4609, 4699);
            	}

            // Xpath3.g:4952:2: (a1_0= parse_org_emftext_language_xpath3_Expr )
            // Xpath3.g:4953:3: a1_0= parse_org_emftext_language_xpath3_Expr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_Expr_in_parse_org_emftext_language_xpath3_Predicate4931);
            a1_0=parse_org_emftext_language_xpath3_Expr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createPredicate();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.PREDICATE__EXPR), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_37_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 4700);
            	}

            a2=(Token)match(input,35,FOLLOW_35_in_parse_org_emftext_language_xpath3_Predicate4949); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createPredicate();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_37_0_0_2, null, true);
            		copyLocalizationInfos((CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getFilterExpr(), 4701);
            		addExpectedElement(null, 4702, 4707);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4708, 4709);
            		addExpectedElement(null, 4710, 4718);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4719, 4721);
            		addExpectedElement(null, 4722, 4723);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 4724);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 4725);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 4726);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevReverseStep(), 4727);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 39, parse_org_emftext_language_xpath3_Predicate_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_Predicate"



    // $ANTLR start "parse_org_emftext_language_xpath3_VarRef"
    // Xpath3.g:5006:1: parse_org_emftext_language_xpath3_VarRef returns [org.emftext.language.xpath3.VarRef element = null] : a0= '$' ( (a1= QNAME ) | (a2= NCNAME ) ) ;
    public final org.emftext.language.xpath3.VarRef parse_org_emftext_language_xpath3_VarRef() throws RecognitionException {
        org.emftext.language.xpath3.VarRef element =  null;

        int parse_org_emftext_language_xpath3_VarRef_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return element; }

            // Xpath3.g:5009:2: (a0= '$' ( (a1= QNAME ) | (a2= NCNAME ) ) )
            // Xpath3.g:5010:2: a0= '$' ( (a1= QNAME ) | (a2= NCNAME ) )
            {
            a0=(Token)match(input,12,FOLLOW_12_in_parse_org_emftext_language_xpath3_VarRef4978); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createVarRef();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_38_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 4728, 4729);
            	}

            // Xpath3.g:5024:2: ( (a1= QNAME ) | (a2= NCNAME ) )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==QNAME) ) {
                alt50=1;
            }
            else if ( (LA50_0==NCNAME) ) {
                alt50=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;

            }
            switch (alt50) {
                case 1 :
                    // Xpath3.g:5025:3: (a1= QNAME )
                    {
                    // Xpath3.g:5025:3: (a1= QNAME )
                    // Xpath3.g:5026:4: a1= QNAME
                    {
                    a1=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_VarRef5001); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createVarRef();
                    					startIncompleteElement(element);
                    				}
                    				if (a1 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.VAR_REF__VAR_NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a1).getLine(), ((CommonToken) a1).getCharPositionInLine(), ((CommonToken) a1).getStartIndex(), ((CommonToken) a1).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.VAR_REF__VAR_NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_38_0_0_1_0_0_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a1, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, 4730, 4735);
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getFilterExpr(), 4736);
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4737, 4738);
                    			addExpectedElement(null, 4739, 4747);
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4748, 4750);
                    			addExpectedElement(null, 4751, 4752);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath3.g:5067:6: (a2= NCNAME )
                    {
                    // Xpath3.g:5067:6: (a2= NCNAME )
                    // Xpath3.g:5068:4: a2= NCNAME
                    {
                    a2=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_VarRef5039); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createVarRef();
                    					startIncompleteElement(element);
                    				}
                    				if (a2 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.VAR_REF__VAR_NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a2).getLine(), ((CommonToken) a2).getCharPositionInLine(), ((CommonToken) a2).getStartIndex(), ((CommonToken) a2).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.VAR_REF__VAR_NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_38_0_0_1_0_1_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a2, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			// We've found the last token for this rule. The constructed EObject is now
                    			// complete.
                    			completedElement(element, true);
                    			addExpectedElement(null, 4753, 4758);
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getFilterExpr(), 4759);
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4760, 4761);
                    			addExpectedElement(null, 4762, 4770);
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4771, 4773);
                    			addExpectedElement(null, 4774, 4775);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 4776, 4781);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getFilterExpr(), 4782);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4783, 4784);
            		addExpectedElement(null, 4785, 4793);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4794, 4796);
            		addExpectedElement(null, 4797, 4798);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 40, parse_org_emftext_language_xpath3_VarRef_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_VarRef"



    // $ANTLR start "parse_org_emftext_language_xpath3_ParenthesizedExpr"
    // Xpath3.g:5127:1: parse_org_emftext_language_xpath3_ParenthesizedExpr returns [org.emftext.language.xpath3.ParenthesizedExpr element = null] : a0= '(' ( (a1_0= parse_org_emftext_language_xpath3_Expr ) )? a2= ')' ;
    public final org.emftext.language.xpath3.ParenthesizedExpr parse_org_emftext_language_xpath3_ParenthesizedExpr() throws RecognitionException {
        org.emftext.language.xpath3.ParenthesizedExpr element =  null;

        int parse_org_emftext_language_xpath3_ParenthesizedExpr_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        org.emftext.language.xpath3.Expr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return element; }

            // Xpath3.g:5130:2: (a0= '(' ( (a1_0= parse_org_emftext_language_xpath3_Expr ) )? a2= ')' )
            // Xpath3.g:5131:2: a0= '(' ( (a1_0= parse_org_emftext_language_xpath3_Expr ) )? a2= ')'
            {
            a0=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_ParenthesizedExpr5088); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createParenthesizedExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_39_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getParenthesizedExpr(), 4799, 4889);
            		addExpectedElement(null, 4890);
            	}

            // Xpath3.g:5146:2: ( (a1_0= parse_org_emftext_language_xpath3_Expr ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( ((LA51_0 >= DECIMAL_LITERAL && LA51_0 <= STRING_LITERAL)||(LA51_0 >= 12 && LA51_0 <= 13)||(LA51_0 >= 15 && LA51_0 <= 16)||(LA51_0 >= 18 && LA51_0 <= 22)||LA51_0==33||(LA51_0 >= 36 && LA51_0 <= 37)||LA51_0==40||(LA51_0 >= 43 && LA51_0 <= 46)||(LA51_0 >= 48 && LA51_0 <= 49)||LA51_0==53||(LA51_0 >= 55 && LA51_0 <= 57)||LA51_0==61||LA51_0==70||LA51_0==72||(LA51_0 >= 75 && LA51_0 <= 78)||(LA51_0 >= 81 && LA51_0 <= 85)) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // Xpath3.g:5147:3: (a1_0= parse_org_emftext_language_xpath3_Expr )
                    {
                    // Xpath3.g:5147:3: (a1_0= parse_org_emftext_language_xpath3_Expr )
                    // Xpath3.g:5148:4: a1_0= parse_org_emftext_language_xpath3_Expr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_Expr_in_parse_org_emftext_language_xpath3_ParenthesizedExpr5111);
                    a1_0=parse_org_emftext_language_xpath3_Expr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createParenthesizedExpr();
                    					startIncompleteElement(element);
                    				}
                    				if (a1_0 != null) {
                    					if (a1_0 != null) {
                    						Object value = a1_0;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.PARENTHESIZED_EXPR__EXPR), value);
                    						completedElement(value, true);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_39_0_0_1, a1_0, true);
                    					copyLocalizationInfos(a1_0, element);
                    				}
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 4891);
            	}

            a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_ParenthesizedExpr5137); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createParenthesizedExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_39_0_0_2, null, true);
            		copyLocalizationInfos((CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 4892, 4897);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getFilterExpr(), 4898);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4899, 4900);
            		addExpectedElement(null, 4901, 4909);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4910, 4912);
            		addExpectedElement(null, 4913, 4914);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 41, parse_org_emftext_language_xpath3_ParenthesizedExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_ParenthesizedExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_ContextItemExpr"
    // Xpath3.g:5198:1: parse_org_emftext_language_xpath3_ContextItemExpr returns [org.emftext.language.xpath3.ContextItemExpr element = null] : a0= '.' ;
    public final org.emftext.language.xpath3.ContextItemExpr parse_org_emftext_language_xpath3_ContextItemExpr() throws RecognitionException {
        org.emftext.language.xpath3.ContextItemExpr element =  null;

        int parse_org_emftext_language_xpath3_ContextItemExpr_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return element; }

            // Xpath3.g:5201:2: (a0= '.' )
            // Xpath3.g:5202:2: a0= '.'
            {
            a0=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath3_ContextItemExpr5166); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createContextItemExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_40_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 4915, 4920);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getFilterExpr(), 4921);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 4922, 4923);
            		addExpectedElement(null, 4924, 4932);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4933, 4935);
            		addExpectedElement(null, 4936, 4937);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 42, parse_org_emftext_language_xpath3_ContextItemExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_ContextItemExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_SingleType"
    // Xpath3.g:5226:1: parse_org_emftext_language_xpath3_SingleType returns [org.emftext.language.xpath3.SingleType element = null] : (a0_0= parse_org_emftext_language_xpath3_AtomicType ) ( (a1= '?' )? ) ;
    public final org.emftext.language.xpath3.SingleType parse_org_emftext_language_xpath3_SingleType() throws RecognitionException {
        org.emftext.language.xpath3.SingleType element =  null;

        int parse_org_emftext_language_xpath3_SingleType_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath3.AtomicType a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return element; }

            // Xpath3.g:5229:2: ( (a0_0= parse_org_emftext_language_xpath3_AtomicType ) ( (a1= '?' )? ) )
            // Xpath3.g:5230:2: (a0_0= parse_org_emftext_language_xpath3_AtomicType ) ( (a1= '?' )? )
            {
            // Xpath3.g:5230:2: (a0_0= parse_org_emftext_language_xpath3_AtomicType )
            // Xpath3.g:5231:3: a0_0= parse_org_emftext_language_xpath3_AtomicType
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AtomicType_in_parse_org_emftext_language_xpath3_SingleType5199);
            a0_0=parse_org_emftext_language_xpath3_AtomicType();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createSingleType();
            				startIncompleteElement(element);
            				// initialize boolean attribute
            				{
            					Object value = false;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.SINGLE_TYPE__OPTIONAL), value);
            				}
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.SINGLE_TYPE__TYPE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_41_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 4938, 4951);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4952, 4954);
            		addExpectedElement(null, 4955, 4956);
            	}

            // Xpath3.g:5263:2: ( (a1= '?' )? )
            // Xpath3.g:5264:3: (a1= '?' )?
            {
            // Xpath3.g:5264:3: (a1= '?' )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==32) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // Xpath3.g:5265:4: a1= '?'
                    {
                    a1=(Token)match(input,32,FOLLOW_32_in_parse_org_emftext_language_xpath3_SingleType5226); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createSingleType();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.SINGLE_TYPE__OPTIONAL), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_41_0_0_1, true, true);
                    				copyLocalizationInfos((CommonToken)a1, element);
                    				// set value of boolean attribute
                    				Object value = true;
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.SINGLE_TYPE__OPTIONAL), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 4957, 4969);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4970, 4972);
            		addExpectedElement(null, 4973, 4974);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 43, parse_org_emftext_language_xpath3_SingleType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_SingleType"



    // $ANTLR start "parse_org_emftext_language_xpath3_EmptySequenceType"
    // Xpath3.g:5296:1: parse_org_emftext_language_xpath3_EmptySequenceType returns [org.emftext.language.xpath3.EmptySequenceType element = null] : a0= 'empty-sequence' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath3.EmptySequenceType parse_org_emftext_language_xpath3_EmptySequenceType() throws RecognitionException {
        org.emftext.language.xpath3.EmptySequenceType element =  null;

        int parse_org_emftext_language_xpath3_EmptySequenceType_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return element; }

            // Xpath3.g:5299:2: (a0= 'empty-sequence' a1= '(' a2= ')' )
            // Xpath3.g:5300:2: a0= 'empty-sequence' a1= '(' a2= ')'
            {
            a0=(Token)match(input,51,FOLLOW_51_in_parse_org_emftext_language_xpath3_EmptySequenceType5262); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createEmptySequenceType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_42_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 4975);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_EmptySequenceType5276); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createEmptySequenceType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_42_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 4976);
            	}

            a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_EmptySequenceType5290); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createEmptySequenceType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_42_0_0_2, null, true);
            		copyLocalizationInfos((CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 4977, 4987);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 4988, 4990);
            		addExpectedElement(null, 4991, 4992);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 44, parse_org_emftext_language_xpath3_EmptySequenceType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_EmptySequenceType"



    // $ANTLR start "parse_org_emftext_language_xpath3_ItemSequenceType"
    // Xpath3.g:5349:1: parse_org_emftext_language_xpath3_ItemSequenceType returns [org.emftext.language.xpath3.ItemSequenceType element = null] : (a0_0= parse_org_emftext_language_xpath3_ItemType ) ( (a1= '?' |a2= '*' |a3= '+' )? ) ;
    public final org.emftext.language.xpath3.ItemSequenceType parse_org_emftext_language_xpath3_ItemSequenceType() throws RecognitionException {
        org.emftext.language.xpath3.ItemSequenceType element =  null;

        int parse_org_emftext_language_xpath3_ItemSequenceType_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        org.emftext.language.xpath3.ItemType a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return element; }

            // Xpath3.g:5352:2: ( (a0_0= parse_org_emftext_language_xpath3_ItemType ) ( (a1= '?' |a2= '*' |a3= '+' )? ) )
            // Xpath3.g:5353:2: (a0_0= parse_org_emftext_language_xpath3_ItemType ) ( (a1= '?' |a2= '*' |a3= '+' )? )
            {
            // Xpath3.g:5353:2: (a0_0= parse_org_emftext_language_xpath3_ItemType )
            // Xpath3.g:5354:3: a0_0= parse_org_emftext_language_xpath3_ItemType
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ItemType_in_parse_org_emftext_language_xpath3_ItemSequenceType5323);
            a0_0=parse_org_emftext_language_xpath3_ItemType();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createItemSequenceType();
            				startIncompleteElement(element);
            				// initialize enumeration attribute
            				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath3.OccurrenceIndicatorKind.MANDATORY_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ITEM_SEQUENCE_TYPE__ITEM_TYPE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_43_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 4993, 5004);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5005, 5007);
            		addExpectedElement(null, 5008, 5009);
            	}

            // Xpath3.g:5384:2: ( (a1= '?' |a2= '*' |a3= '+' )? )
            // Xpath3.g:5385:3: (a1= '?' |a2= '*' |a3= '+' )?
            {
            // Xpath3.g:5385:3: (a1= '?' |a2= '*' |a3= '+' )?
            int alt53=4;
            switch ( input.LA(1) ) {
                case 32:
                    {
                    alt53=1;
                    }
                    break;
                case 15:
                    {
                    int LA53_2 = input.LA(2);

                    if ( (synpred93_Xpath3()) ) {
                        alt53=2;
                    }
                    }
                    break;
                case 16:
                    {
                    int LA53_3 = input.LA(2);

                    if ( (synpred94_Xpath3()) ) {
                        alt53=3;
                    }
                    }
                    break;
            }

            switch (alt53) {
                case 1 :
                    // Xpath3.g:5386:4: a1= '?'
                    {
                    a1=(Token)match(input,32,FOLLOW_32_in_parse_org_emftext_language_xpath3_ItemSequenceType5350); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createItemSequenceType();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath3.OccurrenceIndicatorKind.MANDATORY_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_43_0_0_1, null, true);
                    				copyLocalizationInfos((CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath3.OccurrenceIndicatorKind.OPTIONAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath3.g:5402:8: a2= '*'
                    {
                    a2=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath3_ItemSequenceType5365); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createItemSequenceType();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath3.OccurrenceIndicatorKind.MANDATORY_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_43_0_0_1, null, true);
                    				copyLocalizationInfos((CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath3.OccurrenceIndicatorKind.STAR_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath3.g:5418:8: a3= '+'
                    {
                    a3=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath3_ItemSequenceType5380); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createItemSequenceType();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath3.OccurrenceIndicatorKind.MANDATORY_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_43_0_0_1, null, true);
                    				copyLocalizationInfos((CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath3.XPath3Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath3.OccurrenceIndicatorKind.PLUS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 5010, 5020);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5021, 5023);
            		addExpectedElement(null, 5024, 5025);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 45, parse_org_emftext_language_xpath3_ItemSequenceType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_ItemSequenceType"



    // $ANTLR start "parse_org_emftext_language_xpath3_ItemKindTest"
    // Xpath3.g:5447:1: parse_org_emftext_language_xpath3_ItemKindTest returns [org.emftext.language.xpath3.ItemKindTest element = null] : (a0_0= parse_org_emftext_language_xpath3_KindTest ) ;
    public final org.emftext.language.xpath3.ItemKindTest parse_org_emftext_language_xpath3_ItemKindTest() throws RecognitionException {
        org.emftext.language.xpath3.ItemKindTest element =  null;

        int parse_org_emftext_language_xpath3_ItemKindTest_StartIndex = input.index();

        org.emftext.language.xpath3.KindTest a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return element; }

            // Xpath3.g:5450:2: ( (a0_0= parse_org_emftext_language_xpath3_KindTest ) )
            // Xpath3.g:5451:2: (a0_0= parse_org_emftext_language_xpath3_KindTest )
            {
            // Xpath3.g:5451:2: (a0_0= parse_org_emftext_language_xpath3_KindTest )
            // Xpath3.g:5452:3: a0_0= parse_org_emftext_language_xpath3_KindTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_KindTest_in_parse_org_emftext_language_xpath3_ItemKindTest5420);
            a0_0=parse_org_emftext_language_xpath3_KindTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createItemKindTest();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ITEM_KIND_TEST__TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_44_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 5026, 5037);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5038, 5040);
            		addExpectedElement(null, 5041, 5042);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 46, parse_org_emftext_language_xpath3_ItemKindTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_ItemKindTest"



    // $ANTLR start "parse_org_emftext_language_xpath3_AnyItemType"
    // Xpath3.g:5484:1: parse_org_emftext_language_xpath3_AnyItemType returns [org.emftext.language.xpath3.AnyItemType element = null] : a0= 'item' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath3.AnyItemType parse_org_emftext_language_xpath3_AnyItemType() throws RecognitionException {
        org.emftext.language.xpath3.AnyItemType element =  null;

        int parse_org_emftext_language_xpath3_AnyItemType_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return element; }

            // Xpath3.g:5487:2: (a0= 'item' a1= '(' a2= ')' )
            // Xpath3.g:5488:2: a0= 'item' a1= '(' a2= ')'
            {
            a0=(Token)match(input,66,FOLLOW_66_in_parse_org_emftext_language_xpath3_AnyItemType5453); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAnyItemType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_45_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5043);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_AnyItemType5467); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAnyItemType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_45_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5044);
            	}

            a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_AnyItemType5481); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAnyItemType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_45_0_0_2, null, true);
            		copyLocalizationInfos((CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 5045, 5056);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5057, 5059);
            		addExpectedElement(null, 5060, 5061);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 47, parse_org_emftext_language_xpath3_AnyItemType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_AnyItemType"



    // $ANTLR start "parse_org_emftext_language_xpath3_AtomicItemType"
    // Xpath3.g:5537:1: parse_org_emftext_language_xpath3_AtomicItemType returns [org.emftext.language.xpath3.AtomicItemType element = null] : (a0_0= parse_org_emftext_language_xpath3_AtomicType ) ;
    public final org.emftext.language.xpath3.AtomicItemType parse_org_emftext_language_xpath3_AtomicItemType() throws RecognitionException {
        org.emftext.language.xpath3.AtomicItemType element =  null;

        int parse_org_emftext_language_xpath3_AtomicItemType_StartIndex = input.index();

        org.emftext.language.xpath3.AtomicType a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return element; }

            // Xpath3.g:5540:2: ( (a0_0= parse_org_emftext_language_xpath3_AtomicType ) )
            // Xpath3.g:5541:2: (a0_0= parse_org_emftext_language_xpath3_AtomicType )
            {
            // Xpath3.g:5541:2: (a0_0= parse_org_emftext_language_xpath3_AtomicType )
            // Xpath3.g:5542:3: a0_0= parse_org_emftext_language_xpath3_AtomicType
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AtomicType_in_parse_org_emftext_language_xpath3_AtomicItemType5514);
            a0_0=parse_org_emftext_language_xpath3_AtomicType();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAtomicItemType();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ATOMIC_ITEM_TYPE__TYPE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_46_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 5062, 5073);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5074, 5076);
            		addExpectedElement(null, 5077, 5078);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 48, parse_org_emftext_language_xpath3_AtomicItemType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_AtomicItemType"



    // $ANTLR start "parse_org_emftext_language_xpath3_AtomicType"
    // Xpath3.g:5574:1: parse_org_emftext_language_xpath3_AtomicType returns [org.emftext.language.xpath3.AtomicType element = null] : ( (a0= QNAME ) | (a1= NCNAME ) ) ;
    public final org.emftext.language.xpath3.AtomicType parse_org_emftext_language_xpath3_AtomicType() throws RecognitionException {
        org.emftext.language.xpath3.AtomicType element =  null;

        int parse_org_emftext_language_xpath3_AtomicType_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return element; }

            // Xpath3.g:5577:2: ( ( (a0= QNAME ) | (a1= NCNAME ) ) )
            // Xpath3.g:5578:2: ( (a0= QNAME ) | (a1= NCNAME ) )
            {
            // Xpath3.g:5578:2: ( (a0= QNAME ) | (a1= NCNAME ) )
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==QNAME) ) {
                alt54=1;
            }
            else if ( (LA54_0==NCNAME) ) {
                alt54=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;

            }
            switch (alt54) {
                case 1 :
                    // Xpath3.g:5579:3: (a0= QNAME )
                    {
                    // Xpath3.g:5579:3: (a0= QNAME )
                    // Xpath3.g:5580:4: a0= QNAME
                    {
                    a0=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_AtomicType5556); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAtomicType();
                    					startIncompleteElement(element);
                    				}
                    				if (a0 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ATOMIC_TYPE__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a0).getLine(), ((CommonToken) a0).getCharPositionInLine(), ((CommonToken) a0).getStartIndex(), ((CommonToken) a0).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ATOMIC_TYPE__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_47_0_0_0_0_0_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a0, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, 5079, 5092);
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5093, 5095);
                    			addExpectedElement(null, 5096, 5098);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath3.g:5618:6: (a1= NCNAME )
                    {
                    // Xpath3.g:5618:6: (a1= NCNAME )
                    // Xpath3.g:5619:4: a1= NCNAME
                    {
                    a1=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_AtomicType5594); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAtomicType();
                    					startIncompleteElement(element);
                    				}
                    				if (a1 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ATOMIC_TYPE__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a1).getLine(), ((CommonToken) a1).getCharPositionInLine(), ((CommonToken) a1).getStartIndex(), ((CommonToken) a1).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.ATOMIC_TYPE__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_47_0_0_0_0_1_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a1, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			// We've found the last token for this rule. The constructed EObject is now
                    			// complete.
                    			completedElement(element, true);
                    			addExpectedElement(null, 5099, 5112);
                    			addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5113, 5115);
                    			addExpectedElement(null, 5116, 5118);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 5119, 5132);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5133, 5135);
            		addExpectedElement(null, 5136, 5138);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 49, parse_org_emftext_language_xpath3_AtomicType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_AtomicType"



    // $ANTLR start "parse_org_emftext_language_xpath3_OptionalAtomicType"
    // Xpath3.g:5672:1: parse_org_emftext_language_xpath3_OptionalAtomicType returns [org.emftext.language.xpath3.OptionalAtomicType element = null] : ( (a0= QNAME ) | (a1= NCNAME ) ) ( (a2= '?' )? ) ;
    public final org.emftext.language.xpath3.OptionalAtomicType parse_org_emftext_language_xpath3_OptionalAtomicType() throws RecognitionException {
        org.emftext.language.xpath3.OptionalAtomicType element =  null;

        int parse_org_emftext_language_xpath3_OptionalAtomicType_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return element; }

            // Xpath3.g:5675:2: ( ( (a0= QNAME ) | (a1= NCNAME ) ) ( (a2= '?' )? ) )
            // Xpath3.g:5676:2: ( (a0= QNAME ) | (a1= NCNAME ) ) ( (a2= '?' )? )
            {
            // Xpath3.g:5676:2: ( (a0= QNAME ) | (a1= NCNAME ) )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==QNAME) ) {
                alt55=1;
            }
            else if ( (LA55_0==NCNAME) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;

            }
            switch (alt55) {
                case 1 :
                    // Xpath3.g:5677:3: (a0= QNAME )
                    {
                    // Xpath3.g:5677:3: (a0= QNAME )
                    // Xpath3.g:5678:4: a0= QNAME
                    {
                    a0=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_OptionalAtomicType5652); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createOptionalAtomicType();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.OPTIONAL_ATOMIC_TYPE__OPTIONAL), value);
                    					}
                    				}
                    				if (a0 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.OPTIONAL_ATOMIC_TYPE__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a0).getLine(), ((CommonToken) a0).getCharPositionInLine(), ((CommonToken) a0).getStartIndex(), ((CommonToken) a0).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.OPTIONAL_ATOMIC_TYPE__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_48_0_0_0_0_0_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a0, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, 5139, 5141);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath3.g:5719:6: (a1= NCNAME )
                    {
                    // Xpath3.g:5719:6: (a1= NCNAME )
                    // Xpath3.g:5720:4: a1= NCNAME
                    {
                    a1=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_OptionalAtomicType5690); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createOptionalAtomicType();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.OPTIONAL_ATOMIC_TYPE__OPTIONAL), value);
                    					}
                    				}
                    				if (a1 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.OPTIONAL_ATOMIC_TYPE__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a1).getLine(), ((CommonToken) a1).getCharPositionInLine(), ((CommonToken) a1).getStartIndex(), ((CommonToken) a1).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.OPTIONAL_ATOMIC_TYPE__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_48_0_0_0_0_1_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a1, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, 5142, 5144);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5145, 5147);
            	}

            // Xpath3.g:5766:2: ( (a2= '?' )? )
            // Xpath3.g:5767:3: (a2= '?' )?
            {
            // Xpath3.g:5767:3: (a2= '?' )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==32) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // Xpath3.g:5768:4: a2= '?'
                    {
                    a2=(Token)match(input,32,FOLLOW_32_in_parse_org_emftext_language_xpath3_OptionalAtomicType5733); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createOptionalAtomicType();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.OPTIONAL_ATOMIC_TYPE__OPTIONAL), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_48_0_0_1, true, true);
                    				copyLocalizationInfos((CommonToken)a2, element);
                    				// set value of boolean attribute
                    				Object value = true;
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.OPTIONAL_ATOMIC_TYPE__OPTIONAL), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 5148, 5149);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 50, parse_org_emftext_language_xpath3_OptionalAtomicType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_OptionalAtomicType"



    // $ANTLR start "parse_org_emftext_language_xpath3_AnyKindTest"
    // Xpath3.g:5797:1: parse_org_emftext_language_xpath3_AnyKindTest returns [org.emftext.language.xpath3.AnyKindTest element = null] : a0= 'node' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath3.AnyKindTest parse_org_emftext_language_xpath3_AnyKindTest() throws RecognitionException {
        org.emftext.language.xpath3.AnyKindTest element =  null;

        int parse_org_emftext_language_xpath3_AnyKindTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return element; }

            // Xpath3.g:5800:2: (a0= 'node' a1= '(' a2= ')' )
            // Xpath3.g:5801:2: a0= 'node' a1= '(' a2= ')'
            {
            a0=(Token)match(input,72,FOLLOW_72_in_parse_org_emftext_language_xpath3_AnyKindTest5769); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAnyKindTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_49_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5150);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_AnyKindTest5783); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAnyKindTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_49_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5151);
            	}

            a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_AnyKindTest5797); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAnyKindTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_49_0_0_2, null, true);
            		copyLocalizationInfos((CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 5152);
            		addExpectedElement(null, 5153, 5158);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5159, 5160);
            		addExpectedElement(null, 5161, 5169);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5170, 5172);
            		addExpectedElement(null, 5173, 5174);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 5175);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 5176);
            		addExpectedElement(null, 5177);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 51, parse_org_emftext_language_xpath3_AnyKindTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_AnyKindTest"



    // $ANTLR start "parse_org_emftext_language_xpath3_DocumentTest"
    // Xpath3.g:5856:1: parse_org_emftext_language_xpath3_DocumentTest returns [org.emftext.language.xpath3.DocumentTest element = null] : a0= 'document-node' a1= '(' ( (a2_0= parse_org_emftext_language_xpath3_ElementTest |a2_1= parse_org_emftext_language_xpath3_SchemaElementTest ) )? a3= ')' ;
    public final org.emftext.language.xpath3.DocumentTest parse_org_emftext_language_xpath3_DocumentTest() throws RecognitionException {
        org.emftext.language.xpath3.DocumentTest element =  null;

        int parse_org_emftext_language_xpath3_DocumentTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        org.emftext.language.xpath3.ElementTest a2_0 =null;

        org.emftext.language.xpath3.SchemaElementTest a2_1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return element; }

            // Xpath3.g:5859:2: (a0= 'document-node' a1= '(' ( (a2_0= parse_org_emftext_language_xpath3_ElementTest |a2_1= parse_org_emftext_language_xpath3_SchemaElementTest ) )? a3= ')' )
            // Xpath3.g:5860:2: a0= 'document-node' a1= '(' ( (a2_0= parse_org_emftext_language_xpath3_ElementTest |a2_1= parse_org_emftext_language_xpath3_SchemaElementTest ) )? a3= ')'
            {
            a0=(Token)match(input,48,FOLLOW_48_in_parse_org_emftext_language_xpath3_DocumentTest5826); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createDocumentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_50_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5178);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_DocumentTest5840); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createDocumentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_50_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getDocumentTest(), 5179, 5182);
            		addExpectedElement(null, 5183);
            	}

            // Xpath3.g:5889:2: ( (a2_0= parse_org_emftext_language_xpath3_ElementTest |a2_1= parse_org_emftext_language_xpath3_SchemaElementTest ) )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==49||LA58_0==82) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // Xpath3.g:5890:3: (a2_0= parse_org_emftext_language_xpath3_ElementTest |a2_1= parse_org_emftext_language_xpath3_SchemaElementTest )
                    {
                    // Xpath3.g:5890:3: (a2_0= parse_org_emftext_language_xpath3_ElementTest |a2_1= parse_org_emftext_language_xpath3_SchemaElementTest )
                    int alt57=2;
                    int LA57_0 = input.LA(1);

                    if ( (LA57_0==49) ) {
                        alt57=1;
                    }
                    else if ( (LA57_0==82) ) {
                        alt57=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 57, 0, input);

                        throw nvae;

                    }
                    switch (alt57) {
                        case 1 :
                            // Xpath3.g:5891:4: a2_0= parse_org_emftext_language_xpath3_ElementTest
                            {
                            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ElementTest_in_parse_org_emftext_language_xpath3_DocumentTest5863);
                            a2_0=parse_org_emftext_language_xpath3_ElementTest();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createDocumentTest();
                            					startIncompleteElement(element);
                            				}
                            				if (a2_0 != null) {
                            					if (a2_0 != null) {
                            						Object value = a2_0;
                            						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.DOCUMENT_TEST__TEST), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_50_0_0_2, a2_0, true);
                            					copyLocalizationInfos(a2_0, element);
                            				}
                            			}

                            }
                            break;
                        case 2 :
                            // Xpath3.g:5910:8: a2_1= parse_org_emftext_language_xpath3_SchemaElementTest
                            {
                            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_SchemaElementTest_in_parse_org_emftext_language_xpath3_DocumentTest5880);
                            a2_1=parse_org_emftext_language_xpath3_SchemaElementTest();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createDocumentTest();
                            					startIncompleteElement(element);
                            				}
                            				if (a2_1 != null) {
                            					if (a2_1 != null) {
                            						Object value = a2_1;
                            						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.DOCUMENT_TEST__TEST), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_50_0_0_2, a2_1, true);
                            					copyLocalizationInfos(a2_1, element);
                            				}
                            			}

                            }
                            break;

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5184);
            	}

            a3=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_DocumentTest5906); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createDocumentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_50_0_0_3, null, true);
            		copyLocalizationInfos((CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 5185);
            		addExpectedElement(null, 5186, 5191);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5192, 5193);
            		addExpectedElement(null, 5194, 5202);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5203, 5205);
            		addExpectedElement(null, 5206, 5207);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 5208);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 5209);
            		addExpectedElement(null, 5210);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 52, parse_org_emftext_language_xpath3_DocumentTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_DocumentTest"



    // $ANTLR start "parse_org_emftext_language_xpath3_TextTest"
    // Xpath3.g:5963:1: parse_org_emftext_language_xpath3_TextTest returns [org.emftext.language.xpath3.TextTest element = null] : a0= 'text' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath3.TextTest parse_org_emftext_language_xpath3_TextTest() throws RecognitionException {
        org.emftext.language.xpath3.TextTest element =  null;

        int parse_org_emftext_language_xpath3_TextTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return element; }

            // Xpath3.g:5966:2: (a0= 'text' a1= '(' a2= ')' )
            // Xpath3.g:5967:2: a0= 'text' a1= '(' a2= ')'
            {
            a0=(Token)match(input,85,FOLLOW_85_in_parse_org_emftext_language_xpath3_TextTest5935); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createTextTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_51_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5211);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_TextTest5949); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createTextTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_51_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5212);
            	}

            a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_TextTest5963); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createTextTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_51_0_0_2, null, true);
            		copyLocalizationInfos((CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 5213);
            		addExpectedElement(null, 5214, 5219);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5220, 5221);
            		addExpectedElement(null, 5222, 5230);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5231, 5233);
            		addExpectedElement(null, 5234, 5235);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 5236);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 5237);
            		addExpectedElement(null, 5238);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 53, parse_org_emftext_language_xpath3_TextTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_TextTest"



    // $ANTLR start "parse_org_emftext_language_xpath3_CommentTest"
    // Xpath3.g:6022:1: parse_org_emftext_language_xpath3_CommentTest returns [org.emftext.language.xpath3.CommentTest element = null] : a0= 'comment' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath3.CommentTest parse_org_emftext_language_xpath3_CommentTest() throws RecognitionException {
        org.emftext.language.xpath3.CommentTest element =  null;

        int parse_org_emftext_language_xpath3_CommentTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return element; }

            // Xpath3.g:6025:2: (a0= 'comment' a1= '(' a2= ')' )
            // Xpath3.g:6026:2: a0= 'comment' a1= '(' a2= ')'
            {
            a0=(Token)match(input,44,FOLLOW_44_in_parse_org_emftext_language_xpath3_CommentTest5992); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createCommentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_52_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5239);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_CommentTest6006); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createCommentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_52_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5240);
            	}

            a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_CommentTest6020); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createCommentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_52_0_0_2, null, true);
            		copyLocalizationInfos((CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 5241);
            		addExpectedElement(null, 5242, 5247);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5248, 5249);
            		addExpectedElement(null, 5250, 5258);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5259, 5261);
            		addExpectedElement(null, 5262, 5263);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 5264);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 5265);
            		addExpectedElement(null, 5266);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 54, parse_org_emftext_language_xpath3_CommentTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_CommentTest"



    // $ANTLR start "parse_org_emftext_language_xpath3_PITest"
    // Xpath3.g:6081:1: parse_org_emftext_language_xpath3_PITest returns [org.emftext.language.xpath3.PITest element = null] : (a0= 'processing-instruction' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath3_NCNamePITest |c1= parse_org_emftext_language_xpath3_StringLiteralPITest );
    public final org.emftext.language.xpath3.PITest parse_org_emftext_language_xpath3_PITest() throws RecognitionException {
        org.emftext.language.xpath3.PITest element =  null;

        int parse_org_emftext_language_xpath3_PITest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath3.NCNamePITest c0 =null;

        org.emftext.language.xpath3.StringLiteralPITest c1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return element; }

            // Xpath3.g:6084:2: (a0= 'processing-instruction' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath3_NCNamePITest |c1= parse_org_emftext_language_xpath3_StringLiteralPITest )
            int alt59=3;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==78) ) {
                int LA59_1 = input.LA(2);

                if ( (LA59_1==13) ) {
                    switch ( input.LA(3) ) {
                    case 14:
                        {
                        alt59=1;
                        }
                        break;
                    case NCNAME:
                        {
                        alt59=2;
                        }
                        break;
                    case STRING_LITERAL:
                        {
                        alt59=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 59, 2, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;

            }
            switch (alt59) {
                case 1 :
                    // Xpath3.g:6085:2: a0= 'processing-instruction' a1= '(' a2= ')'
                    {
                    a0=(Token)match(input,78,FOLLOW_78_in_parse_org_emftext_language_xpath3_PITest6049); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createPITest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_53_0_0_0, null, true);
                    		copyLocalizationInfos((CommonToken)a0, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, 5267);
                    	}

                    a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_PITest6063); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createPITest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_53_0_0_1, null, true);
                    		copyLocalizationInfos((CommonToken)a1, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, 5268);
                    	}

                    a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_PITest6077); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createPITest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_53_0_0_2, null, true);
                    		copyLocalizationInfos((CommonToken)a2, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		// We've found the last token for this rule. The constructed EObject is now
                    		// complete.
                    		completedElement(element, true);
                    		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 5269);
                    		addExpectedElement(null, 5270, 5275);
                    		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5276, 5277);
                    		addExpectedElement(null, 5278, 5286);
                    		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5287, 5289);
                    		addExpectedElement(null, 5290, 5291);
                    		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 5292);
                    		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 5293);
                    		addExpectedElement(null, 5294);
                    	}

                    }
                    break;
                case 2 :
                    // Xpath3.g:6140:2: c0= parse_org_emftext_language_xpath3_NCNamePITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_NCNamePITest_in_parse_org_emftext_language_xpath3_PITest6096);
                    c0=parse_org_emftext_language_xpath3_NCNamePITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath3.g:6141:4: c1= parse_org_emftext_language_xpath3_StringLiteralPITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_StringLiteralPITest_in_parse_org_emftext_language_xpath3_PITest6106);
                    c1=parse_org_emftext_language_xpath3_StringLiteralPITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 55, parse_org_emftext_language_xpath3_PITest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_PITest"



    // $ANTLR start "parse_org_emftext_language_xpath3_NCNamePITest"
    // Xpath3.g:6145:1: parse_org_emftext_language_xpath3_NCNamePITest returns [org.emftext.language.xpath3.NCNamePITest element = null] : a0= 'processing-instruction' a1= '(' (a2= NCNAME ) a3= ')' ;
    public final org.emftext.language.xpath3.NCNamePITest parse_org_emftext_language_xpath3_NCNamePITest() throws RecognitionException {
        org.emftext.language.xpath3.NCNamePITest element =  null;

        int parse_org_emftext_language_xpath3_NCNamePITest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return element; }

            // Xpath3.g:6148:2: (a0= 'processing-instruction' a1= '(' (a2= NCNAME ) a3= ')' )
            // Xpath3.g:6149:2: a0= 'processing-instruction' a1= '(' (a2= NCNAME ) a3= ')'
            {
            a0=(Token)match(input,78,FOLLOW_78_in_parse_org_emftext_language_xpath3_NCNamePITest6131); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNCNamePITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_54_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5295);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_NCNamePITest6145); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNCNamePITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_54_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5296);
            	}

            // Xpath3.g:6177:2: (a2= NCNAME )
            // Xpath3.g:6178:3: a2= NCNAME
            {
            a2=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_NCNamePITest6163); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNCNamePITest();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NC_NAME_PI_TEST__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((CommonToken) a2).getLine(), ((CommonToken) a2).getCharPositionInLine(), ((CommonToken) a2).getStartIndex(), ((CommonToken) a2).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NC_NAME_PI_TEST__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_54_0_0_2, resolved, true);
            				copyLocalizationInfos((CommonToken) a2, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5297);
            	}

            a3=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_NCNamePITest6184); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNCNamePITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_54_0_0_3, null, true);
            		copyLocalizationInfos((CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 5298);
            		addExpectedElement(null, 5299, 5304);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5305, 5306);
            		addExpectedElement(null, 5307, 5315);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5316, 5318);
            		addExpectedElement(null, 5319, 5320);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 5321);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 5322);
            		addExpectedElement(null, 5323);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 56, parse_org_emftext_language_xpath3_NCNamePITest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_NCNamePITest"



    // $ANTLR start "parse_org_emftext_language_xpath3_StringLiteralPITest"
    // Xpath3.g:6240:1: parse_org_emftext_language_xpath3_StringLiteralPITest returns [org.emftext.language.xpath3.StringLiteralPITest element = null] : a0= 'processing-instruction' a1= '(' (a2= STRING_LITERAL ) a3= ')' ;
    public final org.emftext.language.xpath3.StringLiteralPITest parse_org_emftext_language_xpath3_StringLiteralPITest() throws RecognitionException {
        org.emftext.language.xpath3.StringLiteralPITest element =  null;

        int parse_org_emftext_language_xpath3_StringLiteralPITest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return element; }

            // Xpath3.g:6243:2: (a0= 'processing-instruction' a1= '(' (a2= STRING_LITERAL ) a3= ')' )
            // Xpath3.g:6244:2: a0= 'processing-instruction' a1= '(' (a2= STRING_LITERAL ) a3= ')'
            {
            a0=(Token)match(input,78,FOLLOW_78_in_parse_org_emftext_language_xpath3_StringLiteralPITest6213); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createStringLiteralPITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_55_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5324);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_StringLiteralPITest6227); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createStringLiteralPITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_55_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5325);
            	}

            // Xpath3.g:6272:2: (a2= STRING_LITERAL )
            // Xpath3.g:6273:3: a2= STRING_LITERAL
            {
            a2=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_parse_org_emftext_language_xpath3_StringLiteralPITest6245); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createStringLiteralPITest();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.STRING_LITERAL_PI_TEST__LITERAL), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((CommonToken) a2).getLine(), ((CommonToken) a2).getCharPositionInLine(), ((CommonToken) a2).getStartIndex(), ((CommonToken) a2).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.emftext.language.xpath3.StringLiteral proxy = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createStringLiteral();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3ContextDependentURIFragmentFactory<org.emftext.language.xpath3.StringLiteralPITest, org.emftext.language.xpath3.StringLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getStringLiteralPITestLiteralReferenceResolver()), element, (EReference) element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.STRING_LITERAL_PI_TEST__LITERAL), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.STRING_LITERAL_PI_TEST__LITERAL), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_55_0_0_2, proxy, true);
            				copyLocalizationInfos((CommonToken) a2, element);
            				copyLocalizationInfos((CommonToken) a2, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5326);
            	}

            a3=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_StringLiteralPITest6266); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createStringLiteralPITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_55_0_0_3, null, true);
            		copyLocalizationInfos((CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 5327);
            		addExpectedElement(null, 5328, 5333);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5334, 5335);
            		addExpectedElement(null, 5336, 5344);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5345, 5347);
            		addExpectedElement(null, 5348, 5349);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 5350);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 5351);
            		addExpectedElement(null, 5352);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 57, parse_org_emftext_language_xpath3_StringLiteralPITest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_StringLiteralPITest"



    // $ANTLR start "parse_org_emftext_language_xpath3_AttributeTest"
    // Xpath3.g:6339:1: parse_org_emftext_language_xpath3_AttributeTest returns [org.emftext.language.xpath3.AttributeTest element = null] : (a0= 'attribute' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath3_WildcardAttributeTest |c1= parse_org_emftext_language_xpath3_NameAttributeTest );
    public final org.emftext.language.xpath3.AttributeTest parse_org_emftext_language_xpath3_AttributeTest() throws RecognitionException {
        org.emftext.language.xpath3.AttributeTest element =  null;

        int parse_org_emftext_language_xpath3_AttributeTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath3.WildcardAttributeTest c0 =null;

        org.emftext.language.xpath3.NameAttributeTest c1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return element; }

            // Xpath3.g:6342:2: (a0= 'attribute' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath3_WildcardAttributeTest |c1= parse_org_emftext_language_xpath3_NameAttributeTest )
            int alt60=3;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==40) ) {
                int LA60_1 = input.LA(2);

                if ( (LA60_1==13) ) {
                    switch ( input.LA(3) ) {
                    case 14:
                        {
                        alt60=1;
                        }
                        break;
                    case 15:
                        {
                        alt60=2;
                        }
                        break;
                    case NCNAME:
                    case QNAME:
                        {
                        alt60=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 60, 2, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;

            }
            switch (alt60) {
                case 1 :
                    // Xpath3.g:6343:2: a0= 'attribute' a1= '(' a2= ')'
                    {
                    a0=(Token)match(input,40,FOLLOW_40_in_parse_org_emftext_language_xpath3_AttributeTest6295); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAttributeTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_56_0_0_0, null, true);
                    		copyLocalizationInfos((CommonToken)a0, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, 5353);
                    	}

                    a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_AttributeTest6309); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAttributeTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_56_0_0_1, null, true);
                    		copyLocalizationInfos((CommonToken)a1, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, 5354);
                    	}

                    a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_AttributeTest6323); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createAttributeTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_56_0_0_2, null, true);
                    		copyLocalizationInfos((CommonToken)a2, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		// We've found the last token for this rule. The constructed EObject is now
                    		// complete.
                    		completedElement(element, true);
                    		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 5355);
                    		addExpectedElement(null, 5356, 5361);
                    		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5362, 5363);
                    		addExpectedElement(null, 5364, 5372);
                    		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5373, 5375);
                    		addExpectedElement(null, 5376, 5377);
                    		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 5378);
                    		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 5379);
                    		addExpectedElement(null, 5380);
                    	}

                    }
                    break;
                case 2 :
                    // Xpath3.g:6398:2: c0= parse_org_emftext_language_xpath3_WildcardAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_WildcardAttributeTest_in_parse_org_emftext_language_xpath3_AttributeTest6342);
                    c0=parse_org_emftext_language_xpath3_WildcardAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath3.g:6399:4: c1= parse_org_emftext_language_xpath3_NameAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_NameAttributeTest_in_parse_org_emftext_language_xpath3_AttributeTest6352);
                    c1=parse_org_emftext_language_xpath3_NameAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 58, parse_org_emftext_language_xpath3_AttributeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_AttributeTest"



    // $ANTLR start "parse_org_emftext_language_xpath3_WildcardAttributeTest"
    // Xpath3.g:6403:1: parse_org_emftext_language_xpath3_WildcardAttributeTest returns [org.emftext.language.xpath3.WildcardAttributeTest element = null] : a0= 'attribute' a1= '(' a2= '*' ( (a3= ',' ( (a4= QNAME ) | (a5= NCNAME ) ) ) )? a6= ')' ;
    public final org.emftext.language.xpath3.WildcardAttributeTest parse_org_emftext_language_xpath3_WildcardAttributeTest() throws RecognitionException {
        org.emftext.language.xpath3.WildcardAttributeTest element =  null;

        int parse_org_emftext_language_xpath3_WildcardAttributeTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return element; }

            // Xpath3.g:6406:2: (a0= 'attribute' a1= '(' a2= '*' ( (a3= ',' ( (a4= QNAME ) | (a5= NCNAME ) ) ) )? a6= ')' )
            // Xpath3.g:6407:2: a0= 'attribute' a1= '(' a2= '*' ( (a3= ',' ( (a4= QNAME ) | (a5= NCNAME ) ) ) )? a6= ')'
            {
            a0=(Token)match(input,40,FOLLOW_40_in_parse_org_emftext_language_xpath3_WildcardAttributeTest6377); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createWildcardAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_57_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5381);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_WildcardAttributeTest6391); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createWildcardAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_57_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5382);
            	}

            a2=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath3_WildcardAttributeTest6405); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createWildcardAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_57_0_0_2, null, true);
            		copyLocalizationInfos((CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5383, 5384);
            	}

            // Xpath3.g:6449:2: ( (a3= ',' ( (a4= QNAME ) | (a5= NCNAME ) ) ) )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==17) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // Xpath3.g:6450:3: (a3= ',' ( (a4= QNAME ) | (a5= NCNAME ) ) )
                    {
                    // Xpath3.g:6450:3: (a3= ',' ( (a4= QNAME ) | (a5= NCNAME ) ) )
                    // Xpath3.g:6451:4: a3= ',' ( (a4= QNAME ) | (a5= NCNAME ) )
                    {
                    a3=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath3_WildcardAttributeTest6428); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createWildcardAttributeTest();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_57_0_0_3_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, 5385, 5386);
                    			}

                    // Xpath3.g:6465:4: ( (a4= QNAME ) | (a5= NCNAME ) )
                    int alt61=2;
                    int LA61_0 = input.LA(1);

                    if ( (LA61_0==QNAME) ) {
                        alt61=1;
                    }
                    else if ( (LA61_0==NCNAME) ) {
                        alt61=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 61, 0, input);

                        throw nvae;

                    }
                    switch (alt61) {
                        case 1 :
                            // Xpath3.g:6466:5: (a4= QNAME )
                            {
                            // Xpath3.g:6466:5: (a4= QNAME )
                            // Xpath3.g:6467:6: a4= QNAME
                            {
                            a4=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_WildcardAttributeTest6461); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            						if (terminateParsing) {
                            							throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                            						}
                            						if (element == null) {
                            							element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createWildcardAttributeTest();
                            							startIncompleteElement(element);
                            						}
                            						if (a4 != null) {
                            							org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                            							tokenResolver.setOptions(getOptions());
                            							org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                            							tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.WILDCARD_ATTRIBUTE_TEST__TYPE), result);
                            							Object resolvedObject = result.getResolvedToken();
                            							if (resolvedObject == null) {
                            								addErrorToResource(result.getErrorMessage(), ((CommonToken) a4).getLine(), ((CommonToken) a4).getCharPositionInLine(), ((CommonToken) a4).getStartIndex(), ((CommonToken) a4).getStopIndex());
                            							}
                            							javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                            							if (resolved != null) {
                            								Object value = resolved;
                            								element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.WILDCARD_ATTRIBUTE_TEST__TYPE), value);
                            								completedElement(value, false);
                            							}
                            							collectHiddenTokens(element);
                            							retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_57_0_0_3_0_0_2_0_0_0, resolved, true);
                            							copyLocalizationInfos((CommonToken) a4, element);
                            						}
                            					}

                            }


                            if ( state.backtracking==0 ) {
                            					// expected elements (follow set)
                            					addExpectedElement(null, 5387);
                            				}

                            }
                            break;
                        case 2 :
                            // Xpath3.g:6503:10: (a5= NCNAME )
                            {
                            // Xpath3.g:6503:10: (a5= NCNAME )
                            // Xpath3.g:6504:6: a5= NCNAME
                            {
                            a5=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_WildcardAttributeTest6517); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            						if (terminateParsing) {
                            							throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                            						}
                            						if (element == null) {
                            							element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createWildcardAttributeTest();
                            							startIncompleteElement(element);
                            						}
                            						if (a5 != null) {
                            							org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                            							tokenResolver.setOptions(getOptions());
                            							org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                            							tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.WILDCARD_ATTRIBUTE_TEST__TYPE), result);
                            							Object resolvedObject = result.getResolvedToken();
                            							if (resolvedObject == null) {
                            								addErrorToResource(result.getErrorMessage(), ((CommonToken) a5).getLine(), ((CommonToken) a5).getCharPositionInLine(), ((CommonToken) a5).getStartIndex(), ((CommonToken) a5).getStopIndex());
                            							}
                            							javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                            							if (resolved != null) {
                            								Object value = resolved;
                            								element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.WILDCARD_ATTRIBUTE_TEST__TYPE), value);
                            								completedElement(value, false);
                            							}
                            							collectHiddenTokens(element);
                            							retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_57_0_0_3_0_0_2_0_1_0, resolved, true);
                            							copyLocalizationInfos((CommonToken) a5, element);
                            						}
                            					}

                            }


                            if ( state.backtracking==0 ) {
                            					// expected elements (follow set)
                            					addExpectedElement(null, 5388);
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, 5389);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5390);
            	}

            a6=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_WildcardAttributeTest6582); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createWildcardAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_57_0_0_4, null, true);
            		copyLocalizationInfos((CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 5391);
            		addExpectedElement(null, 5392, 5397);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5398, 5399);
            		addExpectedElement(null, 5400, 5408);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5409, 5411);
            		addExpectedElement(null, 5412, 5413);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 5414);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 5415);
            		addExpectedElement(null, 5416);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 59, parse_org_emftext_language_xpath3_WildcardAttributeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_WildcardAttributeTest"



    // $ANTLR start "parse_org_emftext_language_xpath3_NameAttributeTest"
    // Xpath3.g:6579:1: parse_org_emftext_language_xpath3_NameAttributeTest returns [org.emftext.language.xpath3.NameAttributeTest element = null] : a0= 'attribute' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) ( (a4= ',' ( (a5= QNAME ) | (a6= NCNAME ) ) ) )? a7= ')' ;
    public final org.emftext.language.xpath3.NameAttributeTest parse_org_emftext_language_xpath3_NameAttributeTest() throws RecognitionException {
        org.emftext.language.xpath3.NameAttributeTest element =  null;

        int parse_org_emftext_language_xpath3_NameAttributeTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return element; }

            // Xpath3.g:6582:2: (a0= 'attribute' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) ( (a4= ',' ( (a5= QNAME ) | (a6= NCNAME ) ) ) )? a7= ')' )
            // Xpath3.g:6583:2: a0= 'attribute' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) ( (a4= ',' ( (a5= QNAME ) | (a6= NCNAME ) ) ) )? a7= ')'
            {
            a0=(Token)match(input,40,FOLLOW_40_in_parse_org_emftext_language_xpath3_NameAttributeTest6611); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNameAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_58_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5417);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_NameAttributeTest6625); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNameAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_58_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5418, 5419);
            	}

            // Xpath3.g:6611:2: ( (a2= QNAME ) | (a3= NCNAME ) )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==QNAME) ) {
                alt63=1;
            }
            else if ( (LA63_0==NCNAME) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;

            }
            switch (alt63) {
                case 1 :
                    // Xpath3.g:6612:3: (a2= QNAME )
                    {
                    // Xpath3.g:6612:3: (a2= QNAME )
                    // Xpath3.g:6613:4: a2= QNAME
                    {
                    a2=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_NameAttributeTest6648); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNameAttributeTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a2 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NAME_ATTRIBUTE_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a2).getLine(), ((CommonToken) a2).getCharPositionInLine(), ((CommonToken) a2).getStartIndex(), ((CommonToken) a2).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NAME_ATTRIBUTE_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_58_0_0_2_0_0_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a2, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, 5420, 5421);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath3.g:6649:6: (a3= NCNAME )
                    {
                    // Xpath3.g:6649:6: (a3= NCNAME )
                    // Xpath3.g:6650:4: a3= NCNAME
                    {
                    a3=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_NameAttributeTest6686); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNameAttributeTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a3 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NAME_ATTRIBUTE_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a3).getLine(), ((CommonToken) a3).getCharPositionInLine(), ((CommonToken) a3).getStartIndex(), ((CommonToken) a3).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NAME_ATTRIBUTE_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_58_0_0_2_0_1_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a3, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, 5422, 5423);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5424, 5425);
            	}

            // Xpath3.g:6691:2: ( (a4= ',' ( (a5= QNAME ) | (a6= NCNAME ) ) ) )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==17) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // Xpath3.g:6692:3: (a4= ',' ( (a5= QNAME ) | (a6= NCNAME ) ) )
                    {
                    // Xpath3.g:6692:3: (a4= ',' ( (a5= QNAME ) | (a6= NCNAME ) ) )
                    // Xpath3.g:6693:4: a4= ',' ( (a5= QNAME ) | (a6= NCNAME ) )
                    {
                    a4=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath3_NameAttributeTest6729); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNameAttributeTest();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_58_0_0_3_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a4, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, 5426, 5427);
                    			}

                    // Xpath3.g:6707:4: ( (a5= QNAME ) | (a6= NCNAME ) )
                    int alt64=2;
                    int LA64_0 = input.LA(1);

                    if ( (LA64_0==QNAME) ) {
                        alt64=1;
                    }
                    else if ( (LA64_0==NCNAME) ) {
                        alt64=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 64, 0, input);

                        throw nvae;

                    }
                    switch (alt64) {
                        case 1 :
                            // Xpath3.g:6708:5: (a5= QNAME )
                            {
                            // Xpath3.g:6708:5: (a5= QNAME )
                            // Xpath3.g:6709:6: a5= QNAME
                            {
                            a5=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_NameAttributeTest6762); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            						if (terminateParsing) {
                            							throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                            						}
                            						if (element == null) {
                            							element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNameAttributeTest();
                            							startIncompleteElement(element);
                            						}
                            						if (a5 != null) {
                            							org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                            							tokenResolver.setOptions(getOptions());
                            							org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                            							tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NAME_ATTRIBUTE_TEST__TYPE), result);
                            							Object resolvedObject = result.getResolvedToken();
                            							if (resolvedObject == null) {
                            								addErrorToResource(result.getErrorMessage(), ((CommonToken) a5).getLine(), ((CommonToken) a5).getCharPositionInLine(), ((CommonToken) a5).getStartIndex(), ((CommonToken) a5).getStopIndex());
                            							}
                            							javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                            							if (resolved != null) {
                            								Object value = resolved;
                            								element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NAME_ATTRIBUTE_TEST__TYPE), value);
                            								completedElement(value, false);
                            							}
                            							collectHiddenTokens(element);
                            							retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_58_0_0_3_0_0_2_0_0_0, resolved, true);
                            							copyLocalizationInfos((CommonToken) a5, element);
                            						}
                            					}

                            }


                            if ( state.backtracking==0 ) {
                            					// expected elements (follow set)
                            					addExpectedElement(null, 5428);
                            				}

                            }
                            break;
                        case 2 :
                            // Xpath3.g:6745:10: (a6= NCNAME )
                            {
                            // Xpath3.g:6745:10: (a6= NCNAME )
                            // Xpath3.g:6746:6: a6= NCNAME
                            {
                            a6=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_NameAttributeTest6818); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            						if (terminateParsing) {
                            							throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                            						}
                            						if (element == null) {
                            							element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNameAttributeTest();
                            							startIncompleteElement(element);
                            						}
                            						if (a6 != null) {
                            							org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                            							tokenResolver.setOptions(getOptions());
                            							org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                            							tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NAME_ATTRIBUTE_TEST__TYPE), result);
                            							Object resolvedObject = result.getResolvedToken();
                            							if (resolvedObject == null) {
                            								addErrorToResource(result.getErrorMessage(), ((CommonToken) a6).getLine(), ((CommonToken) a6).getCharPositionInLine(), ((CommonToken) a6).getStartIndex(), ((CommonToken) a6).getStopIndex());
                            							}
                            							javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                            							if (resolved != null) {
                            								Object value = resolved;
                            								element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NAME_ATTRIBUTE_TEST__TYPE), value);
                            								completedElement(value, false);
                            							}
                            							collectHiddenTokens(element);
                            							retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_58_0_0_3_0_0_2_0_1_0, resolved, true);
                            							copyLocalizationInfos((CommonToken) a6, element);
                            						}
                            					}

                            }


                            if ( state.backtracking==0 ) {
                            					// expected elements (follow set)
                            					addExpectedElement(null, 5429);
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, 5430);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5431);
            	}

            a7=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_NameAttributeTest6883); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNameAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_58_0_0_4, null, true);
            		copyLocalizationInfos((CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 5432);
            		addExpectedElement(null, 5433, 5438);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5439, 5440);
            		addExpectedElement(null, 5441, 5449);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5450, 5452);
            		addExpectedElement(null, 5453, 5454);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 5455);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 5456);
            		addExpectedElement(null, 5457);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 60, parse_org_emftext_language_xpath3_NameAttributeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_NameAttributeTest"



    // $ANTLR start "parse_org_emftext_language_xpath3_SchemaAttributeTest"
    // Xpath3.g:6821:1: parse_org_emftext_language_xpath3_SchemaAttributeTest returns [org.emftext.language.xpath3.SchemaAttributeTest element = null] : a0= 'schema-attribute' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) a4= ')' ;
    public final org.emftext.language.xpath3.SchemaAttributeTest parse_org_emftext_language_xpath3_SchemaAttributeTest() throws RecognitionException {
        org.emftext.language.xpath3.SchemaAttributeTest element =  null;

        int parse_org_emftext_language_xpath3_SchemaAttributeTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return element; }

            // Xpath3.g:6824:2: (a0= 'schema-attribute' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) a4= ')' )
            // Xpath3.g:6825:2: a0= 'schema-attribute' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) a4= ')'
            {
            a0=(Token)match(input,81,FOLLOW_81_in_parse_org_emftext_language_xpath3_SchemaAttributeTest6912); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createSchemaAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_59_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5458);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_SchemaAttributeTest6926); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createSchemaAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_59_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5459, 5460);
            	}

            // Xpath3.g:6853:2: ( (a2= QNAME ) | (a3= NCNAME ) )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==QNAME) ) {
                alt66=1;
            }
            else if ( (LA66_0==NCNAME) ) {
                alt66=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;

            }
            switch (alt66) {
                case 1 :
                    // Xpath3.g:6854:3: (a2= QNAME )
                    {
                    // Xpath3.g:6854:3: (a2= QNAME )
                    // Xpath3.g:6855:4: a2= QNAME
                    {
                    a2=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_SchemaAttributeTest6949); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createSchemaAttributeTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a2 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.SCHEMA_ATTRIBUTE_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a2).getLine(), ((CommonToken) a2).getCharPositionInLine(), ((CommonToken) a2).getStartIndex(), ((CommonToken) a2).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.SCHEMA_ATTRIBUTE_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_59_0_0_2_0_0_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a2, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, 5461);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath3.g:6891:6: (a3= NCNAME )
                    {
                    // Xpath3.g:6891:6: (a3= NCNAME )
                    // Xpath3.g:6892:4: a3= NCNAME
                    {
                    a3=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_SchemaAttributeTest6987); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createSchemaAttributeTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a3 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.SCHEMA_ATTRIBUTE_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a3).getLine(), ((CommonToken) a3).getCharPositionInLine(), ((CommonToken) a3).getStartIndex(), ((CommonToken) a3).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.SCHEMA_ATTRIBUTE_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_59_0_0_2_0_1_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a3, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, 5462);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5463);
            	}

            a4=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_SchemaAttributeTest7021); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createSchemaAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_59_0_0_3, null, true);
            		copyLocalizationInfos((CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 5464);
            		addExpectedElement(null, 5465, 5470);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5471, 5472);
            		addExpectedElement(null, 5473, 5481);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5482, 5484);
            		addExpectedElement(null, 5485, 5486);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 5487);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 5488);
            		addExpectedElement(null, 5489);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 61, parse_org_emftext_language_xpath3_SchemaAttributeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_SchemaAttributeTest"



    // $ANTLR start "parse_org_emftext_language_xpath3_ElementTest"
    // Xpath3.g:6960:1: parse_org_emftext_language_xpath3_ElementTest returns [org.emftext.language.xpath3.ElementTest element = null] : (a0= 'element' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath3_WildcardElementTest |c1= parse_org_emftext_language_xpath3_NameElementTest );
    public final org.emftext.language.xpath3.ElementTest parse_org_emftext_language_xpath3_ElementTest() throws RecognitionException {
        org.emftext.language.xpath3.ElementTest element =  null;

        int parse_org_emftext_language_xpath3_ElementTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath3.WildcardElementTest c0 =null;

        org.emftext.language.xpath3.NameElementTest c1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return element; }

            // Xpath3.g:6963:2: (a0= 'element' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath3_WildcardElementTest |c1= parse_org_emftext_language_xpath3_NameElementTest )
            int alt67=3;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==49) ) {
                int LA67_1 = input.LA(2);

                if ( (LA67_1==13) ) {
                    switch ( input.LA(3) ) {
                    case 14:
                        {
                        alt67=1;
                        }
                        break;
                    case 15:
                        {
                        alt67=2;
                        }
                        break;
                    case NCNAME:
                    case QNAME:
                        {
                        alt67=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 67, 2, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;

            }
            switch (alt67) {
                case 1 :
                    // Xpath3.g:6964:2: a0= 'element' a1= '(' a2= ')'
                    {
                    a0=(Token)match(input,49,FOLLOW_49_in_parse_org_emftext_language_xpath3_ElementTest7050); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createElementTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_60_0_0_0, null, true);
                    		copyLocalizationInfos((CommonToken)a0, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, 5490);
                    	}

                    a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_ElementTest7064); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createElementTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_60_0_0_1, null, true);
                    		copyLocalizationInfos((CommonToken)a1, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, 5491);
                    	}

                    a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_ElementTest7078); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createElementTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_60_0_0_2, null, true);
                    		copyLocalizationInfos((CommonToken)a2, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		// We've found the last token for this rule. The constructed EObject is now
                    		// complete.
                    		completedElement(element, true);
                    		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 5492);
                    		addExpectedElement(null, 5493, 5498);
                    		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5499, 5500);
                    		addExpectedElement(null, 5501, 5509);
                    		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5510, 5512);
                    		addExpectedElement(null, 5513, 5514);
                    		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 5515);
                    		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 5516);
                    		addExpectedElement(null, 5517, 5518);
                    	}

                    }
                    break;
                case 2 :
                    // Xpath3.g:7019:2: c0= parse_org_emftext_language_xpath3_WildcardElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_WildcardElementTest_in_parse_org_emftext_language_xpath3_ElementTest7097);
                    c0=parse_org_emftext_language_xpath3_WildcardElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath3.g:7020:4: c1= parse_org_emftext_language_xpath3_NameElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_NameElementTest_in_parse_org_emftext_language_xpath3_ElementTest7107);
                    c1=parse_org_emftext_language_xpath3_NameElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 62, parse_org_emftext_language_xpath3_ElementTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_ElementTest"



    // $ANTLR start "parse_org_emftext_language_xpath3_WildcardElementTest"
    // Xpath3.g:7024:1: parse_org_emftext_language_xpath3_WildcardElementTest returns [org.emftext.language.xpath3.WildcardElementTest element = null] : a0= 'element' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath3_OptionalAtomicType ) ) )? a5= ')' ;
    public final org.emftext.language.xpath3.WildcardElementTest parse_org_emftext_language_xpath3_WildcardElementTest() throws RecognitionException {
        org.emftext.language.xpath3.WildcardElementTest element =  null;

        int parse_org_emftext_language_xpath3_WildcardElementTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        org.emftext.language.xpath3.OptionalAtomicType a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return element; }

            // Xpath3.g:7027:2: (a0= 'element' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath3_OptionalAtomicType ) ) )? a5= ')' )
            // Xpath3.g:7028:2: a0= 'element' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath3_OptionalAtomicType ) ) )? a5= ')'
            {
            a0=(Token)match(input,49,FOLLOW_49_in_parse_org_emftext_language_xpath3_WildcardElementTest7132); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createWildcardElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_61_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5519);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_WildcardElementTest7146); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createWildcardElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_61_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5520);
            	}

            a2=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath3_WildcardElementTest7160); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createWildcardElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_61_0_0_2, null, true);
            		copyLocalizationInfos((CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5521, 5522);
            	}

            // Xpath3.g:7070:2: ( (a3= ',' (a4_0= parse_org_emftext_language_xpath3_OptionalAtomicType ) ) )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==17) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // Xpath3.g:7071:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath3_OptionalAtomicType ) )
                    {
                    // Xpath3.g:7071:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath3_OptionalAtomicType ) )
                    // Xpath3.g:7072:4: a3= ',' (a4_0= parse_org_emftext_language_xpath3_OptionalAtomicType )
                    {
                    a3=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath3_WildcardElementTest7183); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createWildcardElementTest();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_61_0_0_3_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getWildcardElementTest(), 5523, 5524);
                    			}

                    // Xpath3.g:7086:4: (a4_0= parse_org_emftext_language_xpath3_OptionalAtomicType )
                    // Xpath3.g:7087:5: a4_0= parse_org_emftext_language_xpath3_OptionalAtomicType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_OptionalAtomicType_in_parse_org_emftext_language_xpath3_WildcardElementTest7209);
                    a4_0=parse_org_emftext_language_xpath3_OptionalAtomicType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createWildcardElementTest();
                    						startIncompleteElement(element);
                    					}
                    					if (a4_0 != null) {
                    						if (a4_0 != null) {
                    							Object value = a4_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.WILDCARD_ELEMENT_TEST__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_61_0_0_3_0_0_2, a4_0, true);
                    						copyLocalizationInfos(a4_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, 5525);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5526);
            	}

            a5=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_WildcardElementTest7250); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createWildcardElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_61_0_0_4, null, true);
            		copyLocalizationInfos((CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 5527);
            		addExpectedElement(null, 5528, 5533);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5534, 5535);
            		addExpectedElement(null, 5536, 5544);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5545, 5547);
            		addExpectedElement(null, 5548, 5549);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 5550);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 5551);
            		addExpectedElement(null, 5552, 5553);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 63, parse_org_emftext_language_xpath3_WildcardElementTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_WildcardElementTest"



    // $ANTLR start "parse_org_emftext_language_xpath3_NameElementTest"
    // Xpath3.g:7146:1: parse_org_emftext_language_xpath3_NameElementTest returns [org.emftext.language.xpath3.NameElementTest element = null] : a0= 'element' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath3_OptionalAtomicType ) ) )? a6= ')' ;
    public final org.emftext.language.xpath3.NameElementTest parse_org_emftext_language_xpath3_NameElementTest() throws RecognitionException {
        org.emftext.language.xpath3.NameElementTest element =  null;

        int parse_org_emftext_language_xpath3_NameElementTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        org.emftext.language.xpath3.OptionalAtomicType a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return element; }

            // Xpath3.g:7149:2: (a0= 'element' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath3_OptionalAtomicType ) ) )? a6= ')' )
            // Xpath3.g:7150:2: a0= 'element' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath3_OptionalAtomicType ) ) )? a6= ')'
            {
            a0=(Token)match(input,49,FOLLOW_49_in_parse_org_emftext_language_xpath3_NameElementTest7279); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNameElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_62_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5554);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_NameElementTest7293); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNameElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_62_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5555, 5556);
            	}

            // Xpath3.g:7178:2: ( (a2= QNAME ) | (a3= NCNAME ) )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==QNAME) ) {
                alt69=1;
            }
            else if ( (LA69_0==NCNAME) ) {
                alt69=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;

            }
            switch (alt69) {
                case 1 :
                    // Xpath3.g:7179:3: (a2= QNAME )
                    {
                    // Xpath3.g:7179:3: (a2= QNAME )
                    // Xpath3.g:7180:4: a2= QNAME
                    {
                    a2=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_NameElementTest7316); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNameElementTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a2 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NAME_ELEMENT_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a2).getLine(), ((CommonToken) a2).getCharPositionInLine(), ((CommonToken) a2).getStartIndex(), ((CommonToken) a2).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NAME_ELEMENT_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_62_0_0_2_0_0_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a2, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, 5557, 5558);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath3.g:7216:6: (a3= NCNAME )
                    {
                    // Xpath3.g:7216:6: (a3= NCNAME )
                    // Xpath3.g:7217:4: a3= NCNAME
                    {
                    a3=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_NameElementTest7354); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNameElementTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a3 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NAME_ELEMENT_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a3).getLine(), ((CommonToken) a3).getCharPositionInLine(), ((CommonToken) a3).getStartIndex(), ((CommonToken) a3).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NAME_ELEMENT_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_62_0_0_2_0_1_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a3, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, 5559, 5560);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5561, 5562);
            	}

            // Xpath3.g:7258:2: ( (a4= ',' (a5_0= parse_org_emftext_language_xpath3_OptionalAtomicType ) ) )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==17) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // Xpath3.g:7259:3: (a4= ',' (a5_0= parse_org_emftext_language_xpath3_OptionalAtomicType ) )
                    {
                    // Xpath3.g:7259:3: (a4= ',' (a5_0= parse_org_emftext_language_xpath3_OptionalAtomicType ) )
                    // Xpath3.g:7260:4: a4= ',' (a5_0= parse_org_emftext_language_xpath3_OptionalAtomicType )
                    {
                    a4=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath3_NameElementTest7397); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNameElementTest();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_62_0_0_3_0_0_0, null, true);
                    				copyLocalizationInfos((CommonToken)a4, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getNameElementTest(), 5563, 5564);
                    			}

                    // Xpath3.g:7274:4: (a5_0= parse_org_emftext_language_xpath3_OptionalAtomicType )
                    // Xpath3.g:7275:5: a5_0= parse_org_emftext_language_xpath3_OptionalAtomicType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_OptionalAtomicType_in_parse_org_emftext_language_xpath3_NameElementTest7423);
                    a5_0=parse_org_emftext_language_xpath3_OptionalAtomicType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNameElementTest();
                    						startIncompleteElement(element);
                    					}
                    					if (a5_0 != null) {
                    						if (a5_0 != null) {
                    							Object value = a5_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.NAME_ELEMENT_TEST__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_62_0_0_3_0_0_2, a5_0, true);
                    						copyLocalizationInfos(a5_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, 5565);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5566);
            	}

            a6=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_NameElementTest7464); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createNameElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_62_0_0_4, null, true);
            		copyLocalizationInfos((CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 5567);
            		addExpectedElement(null, 5568, 5573);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5574, 5575);
            		addExpectedElement(null, 5576, 5584);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5585, 5587);
            		addExpectedElement(null, 5588, 5589);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 5590);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 5591);
            		addExpectedElement(null, 5592, 5593);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 64, parse_org_emftext_language_xpath3_NameElementTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_NameElementTest"



    // $ANTLR start "parse_org_emftext_language_xpath3_SchemaElementTest"
    // Xpath3.g:7334:1: parse_org_emftext_language_xpath3_SchemaElementTest returns [org.emftext.language.xpath3.SchemaElementTest element = null] : a0= 'schema-element' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) a4= ')' ;
    public final org.emftext.language.xpath3.SchemaElementTest parse_org_emftext_language_xpath3_SchemaElementTest() throws RecognitionException {
        org.emftext.language.xpath3.SchemaElementTest element =  null;

        int parse_org_emftext_language_xpath3_SchemaElementTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return element; }

            // Xpath3.g:7337:2: (a0= 'schema-element' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) a4= ')' )
            // Xpath3.g:7338:2: a0= 'schema-element' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) a4= ')'
            {
            a0=(Token)match(input,82,FOLLOW_82_in_parse_org_emftext_language_xpath3_SchemaElementTest7493); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createSchemaElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_63_0_0_0, null, true);
            		copyLocalizationInfos((CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5594);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath3_SchemaElementTest7507); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createSchemaElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_63_0_0_1, null, true);
            		copyLocalizationInfos((CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5595, 5596);
            	}

            // Xpath3.g:7366:2: ( (a2= QNAME ) | (a3= NCNAME ) )
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==QNAME) ) {
                alt71=1;
            }
            else if ( (LA71_0==NCNAME) ) {
                alt71=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;

            }
            switch (alt71) {
                case 1 :
                    // Xpath3.g:7367:3: (a2= QNAME )
                    {
                    // Xpath3.g:7367:3: (a2= QNAME )
                    // Xpath3.g:7368:4: a2= QNAME
                    {
                    a2=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_SchemaElementTest7530); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createSchemaElementTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a2 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.SCHEMA_ELEMENT_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a2).getLine(), ((CommonToken) a2).getCharPositionInLine(), ((CommonToken) a2).getStartIndex(), ((CommonToken) a2).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.SCHEMA_ELEMENT_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_63_0_0_2_0_0_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a2, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, 5597);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath3.g:7404:6: (a3= NCNAME )
                    {
                    // Xpath3.g:7404:6: (a3= NCNAME )
                    // Xpath3.g:7405:4: a3= NCNAME
                    {
                    a3=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_SchemaElementTest7568); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createSchemaElementTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a3 != null) {
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.SCHEMA_ELEMENT_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((CommonToken) a3).getLine(), ((CommonToken) a3).getCharPositionInLine(), ((CommonToken) a3).getStartIndex(), ((CommonToken) a3).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.SCHEMA_ELEMENT_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_63_0_0_2_0_1_0, resolved, true);
                    					copyLocalizationInfos((CommonToken) a3, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, 5598);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, 5599);
            	}

            a4=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath3_SchemaElementTest7602); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createSchemaElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_63_0_0_3, null, true);
            		copyLocalizationInfos((CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralForwardStep(), 5600);
            		addExpectedElement(null, 5601, 5606);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5607, 5608);
            		addExpectedElement(null, 5609, 5617);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5618, 5620);
            		addExpectedElement(null, 5621, 5622);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getAbbrevForwardStep(), 5623);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getGeneralReverseStep(), 5624);
            		addExpectedElement(null, 5625, 5626);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 65, parse_org_emftext_language_xpath3_SchemaElementTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_SchemaElementTest"



    // $ANTLR start "parse_org_emftext_language_xpath3_IntegerLiteral"
    // Xpath3.g:7473:1: parse_org_emftext_language_xpath3_IntegerLiteral returns [org.emftext.language.xpath3.IntegerLiteral element = null] : (a0= INTEGER_LITERAL ) ;
    public final org.emftext.language.xpath3.IntegerLiteral parse_org_emftext_language_xpath3_IntegerLiteral() throws RecognitionException {
        org.emftext.language.xpath3.IntegerLiteral element =  null;

        int parse_org_emftext_language_xpath3_IntegerLiteral_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return element; }

            // Xpath3.g:7476:2: ( (a0= INTEGER_LITERAL ) )
            // Xpath3.g:7477:2: (a0= INTEGER_LITERAL )
            {
            // Xpath3.g:7477:2: (a0= INTEGER_LITERAL )
            // Xpath3.g:7478:3: a0= INTEGER_LITERAL
            {
            a0=(Token)match(input,INTEGER_LITERAL,FOLLOW_INTEGER_LITERAL_in_parse_org_emftext_language_xpath3_IntegerLiteral7635); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createIntegerLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.INTEGER_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((CommonToken) a0).getLine(), ((CommonToken) a0).getCharPositionInLine(), ((CommonToken) a0).getStartIndex(), ((CommonToken) a0).getStopIndex());
            				}
            				java.lang.Integer resolved = (java.lang.Integer) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.INTEGER_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_64_0_0_0, resolved, true);
            				copyLocalizationInfos((CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 5627, 5632);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getFilterExpr(), 5633);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5634, 5635);
            		addExpectedElement(null, 5636, 5644);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5645, 5647);
            		addExpectedElement(null, 5648, 5649);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 66, parse_org_emftext_language_xpath3_IntegerLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_IntegerLiteral"



    // $ANTLR start "parse_org_emftext_language_xpath3_DecimalLiteral"
    // Xpath3.g:7523:1: parse_org_emftext_language_xpath3_DecimalLiteral returns [org.emftext.language.xpath3.DecimalLiteral element = null] : (a0= DECIMAL_LITERAL ) ;
    public final org.emftext.language.xpath3.DecimalLiteral parse_org_emftext_language_xpath3_DecimalLiteral() throws RecognitionException {
        org.emftext.language.xpath3.DecimalLiteral element =  null;

        int parse_org_emftext_language_xpath3_DecimalLiteral_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return element; }

            // Xpath3.g:7526:2: ( (a0= DECIMAL_LITERAL ) )
            // Xpath3.g:7527:2: (a0= DECIMAL_LITERAL )
            {
            // Xpath3.g:7527:2: (a0= DECIMAL_LITERAL )
            // Xpath3.g:7528:3: a0= DECIMAL_LITERAL
            {
            a0=(Token)match(input,DECIMAL_LITERAL,FOLLOW_DECIMAL_LITERAL_in_parse_org_emftext_language_xpath3_DecimalLiteral7675); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createDecimalLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("DECIMAL_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.DECIMAL_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((CommonToken) a0).getLine(), ((CommonToken) a0).getCharPositionInLine(), ((CommonToken) a0).getStartIndex(), ((CommonToken) a0).getStopIndex());
            				}
            				java.lang.Float resolved = (java.lang.Float) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.DECIMAL_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_65_0_0_0, resolved, true);
            				copyLocalizationInfos((CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 5650, 5655);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getFilterExpr(), 5656);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5657, 5658);
            		addExpectedElement(null, 5659, 5667);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5668, 5670);
            		addExpectedElement(null, 5671, 5672);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 67, parse_org_emftext_language_xpath3_DecimalLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_DecimalLiteral"



    // $ANTLR start "parse_org_emftext_language_xpath3_DoubleLiteral"
    // Xpath3.g:7573:1: parse_org_emftext_language_xpath3_DoubleLiteral returns [org.emftext.language.xpath3.DoubleLiteral element = null] : (a0= DOUBLE_LITERAL ) ;
    public final org.emftext.language.xpath3.DoubleLiteral parse_org_emftext_language_xpath3_DoubleLiteral() throws RecognitionException {
        org.emftext.language.xpath3.DoubleLiteral element =  null;

        int parse_org_emftext_language_xpath3_DoubleLiteral_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return element; }

            // Xpath3.g:7576:2: ( (a0= DOUBLE_LITERAL ) )
            // Xpath3.g:7577:2: (a0= DOUBLE_LITERAL )
            {
            // Xpath3.g:7577:2: (a0= DOUBLE_LITERAL )
            // Xpath3.g:7578:3: a0= DOUBLE_LITERAL
            {
            a0=(Token)match(input,DOUBLE_LITERAL,FOLLOW_DOUBLE_LITERAL_in_parse_org_emftext_language_xpath3_DoubleLiteral7715); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createDoubleLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("DOUBLE_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.DOUBLE_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((CommonToken) a0).getLine(), ((CommonToken) a0).getCharPositionInLine(), ((CommonToken) a0).getStartIndex(), ((CommonToken) a0).getStopIndex());
            				}
            				java.lang.Double resolved = (java.lang.Double) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.DOUBLE_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_66_0_0_0, resolved, true);
            				copyLocalizationInfos((CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 5673, 5678);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getFilterExpr(), 5679);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5680, 5681);
            		addExpectedElement(null, 5682, 5690);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5691, 5693);
            		addExpectedElement(null, 5694, 5695);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 68, parse_org_emftext_language_xpath3_DoubleLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_DoubleLiteral"



    // $ANTLR start "parse_org_emftext_language_xpath3_StringLiteral"
    // Xpath3.g:7623:1: parse_org_emftext_language_xpath3_StringLiteral returns [org.emftext.language.xpath3.StringLiteral element = null] : (a0= STRING_LITERAL ) ;
    public final org.emftext.language.xpath3.StringLiteral parse_org_emftext_language_xpath3_StringLiteral() throws RecognitionException {
        org.emftext.language.xpath3.StringLiteral element =  null;

        int parse_org_emftext_language_xpath3_StringLiteral_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return element; }

            // Xpath3.g:7626:2: ( (a0= STRING_LITERAL ) )
            // Xpath3.g:7627:2: (a0= STRING_LITERAL )
            {
            // Xpath3.g:7627:2: (a0= STRING_LITERAL )
            // Xpath3.g:7628:3: a0= STRING_LITERAL
            {
            a0=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_parse_org_emftext_language_xpath3_StringLiteral7755); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath3.resource.xpath3.mopp.Xpath3TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath3.XPath3Factory.eINSTANCE.createStringLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath3.resource.xpath3.IXpath3TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.STRING_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((CommonToken) a0).getLine(), ((CommonToken) a0).getCharPositionInLine(), ((CommonToken) a0).getStartIndex(), ((CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath3.XPath3Package.STRING_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath3.resource.xpath3.grammar.Xpath3GrammarInformationProvider.XPATH3_67_0_0_0, resolved, true);
            				copyLocalizationInfos((CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		// We've found the last token for this rule. The constructed EObject is now
            		// complete.
            		completedElement(element, true);
            		addExpectedElement(null, 5696, 5701);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getFilterExpr(), 5702);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getPathExpr(), 5703, 5704);
            		addExpectedElement(null, 5705, 5713);
            		addExpectedElement(org.emftext.language.xpath3.XPath3Package.eINSTANCE.getComparisonExpr(), 5714, 5716);
            		addExpectedElement(null, 5717, 5718);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 69, parse_org_emftext_language_xpath3_StringLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_StringLiteral"



    // $ANTLR start "parse_org_emftext_language_xpath3_ExprSingle"
    // Xpath3.g:7673:1: parse_org_emftext_language_xpath3_ExprSingle returns [org.emftext.language.xpath3.ExprSingle element = null] : (c0= parse_org_emftext_language_xpath3_ForExpr |c1= parse_org_emftext_language_xpath3_QuantifiedExpr |c2= parse_org_emftext_language_xpath3_IfExpr |c3= parse_org_emftext_language_xpath3_OrExpr |c4= parse_org_emftext_language_xpath3_AndExpr |c5= parse_org_emftext_language_xpath3_ComparisonExpr |c6= parse_org_emftext_language_xpath3_RangeExpr |c7= parse_org_emftext_language_xpath3_AdditiveExpr |c8= parse_org_emftext_language_xpath3_MultiplicativeExpr |c9= parse_org_emftext_language_xpath3_UnionExpr |c10= parse_org_emftext_language_xpath3_IntersectExceptExpr |c11= parse_org_emftext_language_xpath3_InstanceofExpr |c12= parse_org_emftext_language_xpath3_TreatExpr |c13= parse_org_emftext_language_xpath3_CastableExpr |c14= parse_org_emftext_language_xpath3_CastExpr |c15= parse_org_emftext_language_xpath3_UnaryExpr |c16= parse_org_emftext_language_xpath3_FilterExpr |c17= parse_org_emftext_language_xpath3_FunctionCall |c18= parse_org_emftext_language_xpath3_PathExpr |c19= parse_org_emftext_language_xpath3_ChildStepExpr |c20= parse_org_emftext_language_xpath3_DescOrSelfStepExpr |c21= parse_org_emftext_language_xpath3_RootStepExpr |c22= parse_org_emftext_language_xpath3_SelfStepExpr |c23= parse_org_emftext_language_xpath3_GeneralForwardStep |c24= parse_org_emftext_language_xpath3_AbbrevForwardStep |c25= parse_org_emftext_language_xpath3_GeneralReverseStep |c26= parse_org_emftext_language_xpath3_AbbrevReverseStep |c27= parse_org_emftext_language_xpath3_VarRef |c28= parse_org_emftext_language_xpath3_ParenthesizedExpr |c29= parse_org_emftext_language_xpath3_ContextItemExpr |c30= parse_org_emftext_language_xpath3_IntegerLiteral |c31= parse_org_emftext_language_xpath3_DecimalLiteral |c32= parse_org_emftext_language_xpath3_DoubleLiteral |c33= parse_org_emftext_language_xpath3_StringLiteral );
    public final org.emftext.language.xpath3.ExprSingle parse_org_emftext_language_xpath3_ExprSingle() throws RecognitionException {
        org.emftext.language.xpath3.ExprSingle element =  null;

        int parse_org_emftext_language_xpath3_ExprSingle_StartIndex = input.index();

        org.emftext.language.xpath3.ForExpr c0 =null;

        org.emftext.language.xpath3.QuantifiedExpr c1 =null;

        org.emftext.language.xpath3.IfExpr c2 =null;

        org.emftext.language.xpath3.OrExpr c3 =null;

        org.emftext.language.xpath3.AndExpr c4 =null;

        org.emftext.language.xpath3.ComparisonExpr c5 =null;

        org.emftext.language.xpath3.RangeExpr c6 =null;

        org.emftext.language.xpath3.AdditiveExpr c7 =null;

        org.emftext.language.xpath3.MultiplicativeExpr c8 =null;

        org.emftext.language.xpath3.UnionExpr c9 =null;

        org.emftext.language.xpath3.IntersectExceptExpr c10 =null;

        org.emftext.language.xpath3.InstanceofExpr c11 =null;

        org.emftext.language.xpath3.TreatExpr c12 =null;

        org.emftext.language.xpath3.CastableExpr c13 =null;

        org.emftext.language.xpath3.CastExpr c14 =null;

        org.emftext.language.xpath3.UnaryExpr c15 =null;

        org.emftext.language.xpath3.FilterExpr c16 =null;

        org.emftext.language.xpath3.FunctionCall c17 =null;

        org.emftext.language.xpath3.PathExpr c18 =null;

        org.emftext.language.xpath3.ChildStepExpr c19 =null;

        org.emftext.language.xpath3.DescOrSelfStepExpr c20 =null;

        org.emftext.language.xpath3.RootStepExpr c21 =null;

        org.emftext.language.xpath3.SelfStepExpr c22 =null;

        org.emftext.language.xpath3.GeneralForwardStep c23 =null;

        org.emftext.language.xpath3.AbbrevForwardStep c24 =null;

        org.emftext.language.xpath3.GeneralReverseStep c25 =null;

        org.emftext.language.xpath3.AbbrevReverseStep c26 =null;

        org.emftext.language.xpath3.VarRef c27 =null;

        org.emftext.language.xpath3.ParenthesizedExpr c28 =null;

        org.emftext.language.xpath3.ContextItemExpr c29 =null;

        org.emftext.language.xpath3.IntegerLiteral c30 =null;

        org.emftext.language.xpath3.DecimalLiteral c31 =null;

        org.emftext.language.xpath3.DoubleLiteral c32 =null;

        org.emftext.language.xpath3.StringLiteral c33 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return element; }

            // Xpath3.g:7674:2: (c0= parse_org_emftext_language_xpath3_ForExpr |c1= parse_org_emftext_language_xpath3_QuantifiedExpr |c2= parse_org_emftext_language_xpath3_IfExpr |c3= parse_org_emftext_language_xpath3_OrExpr |c4= parse_org_emftext_language_xpath3_AndExpr |c5= parse_org_emftext_language_xpath3_ComparisonExpr |c6= parse_org_emftext_language_xpath3_RangeExpr |c7= parse_org_emftext_language_xpath3_AdditiveExpr |c8= parse_org_emftext_language_xpath3_MultiplicativeExpr |c9= parse_org_emftext_language_xpath3_UnionExpr |c10= parse_org_emftext_language_xpath3_IntersectExceptExpr |c11= parse_org_emftext_language_xpath3_InstanceofExpr |c12= parse_org_emftext_language_xpath3_TreatExpr |c13= parse_org_emftext_language_xpath3_CastableExpr |c14= parse_org_emftext_language_xpath3_CastExpr |c15= parse_org_emftext_language_xpath3_UnaryExpr |c16= parse_org_emftext_language_xpath3_FilterExpr |c17= parse_org_emftext_language_xpath3_FunctionCall |c18= parse_org_emftext_language_xpath3_PathExpr |c19= parse_org_emftext_language_xpath3_ChildStepExpr |c20= parse_org_emftext_language_xpath3_DescOrSelfStepExpr |c21= parse_org_emftext_language_xpath3_RootStepExpr |c22= parse_org_emftext_language_xpath3_SelfStepExpr |c23= parse_org_emftext_language_xpath3_GeneralForwardStep |c24= parse_org_emftext_language_xpath3_AbbrevForwardStep |c25= parse_org_emftext_language_xpath3_GeneralReverseStep |c26= parse_org_emftext_language_xpath3_AbbrevReverseStep |c27= parse_org_emftext_language_xpath3_VarRef |c28= parse_org_emftext_language_xpath3_ParenthesizedExpr |c29= parse_org_emftext_language_xpath3_ContextItemExpr |c30= parse_org_emftext_language_xpath3_IntegerLiteral |c31= parse_org_emftext_language_xpath3_DecimalLiteral |c32= parse_org_emftext_language_xpath3_DoubleLiteral |c33= parse_org_emftext_language_xpath3_StringLiteral )
            int alt72=34;
            alt72 = dfa72.predict(input);
            switch (alt72) {
                case 1 :
                    // Xpath3.g:7675:2: c0= parse_org_emftext_language_xpath3_ForExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_ExprSingle7787);
                    c0=parse_org_emftext_language_xpath3_ForExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath3.g:7676:4: c1= parse_org_emftext_language_xpath3_QuantifiedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_ExprSingle7797);
                    c1=parse_org_emftext_language_xpath3_QuantifiedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath3.g:7677:4: c2= parse_org_emftext_language_xpath3_IfExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_ExprSingle7807);
                    c2=parse_org_emftext_language_xpath3_IfExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath3.g:7678:4: c3= parse_org_emftext_language_xpath3_OrExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_ExprSingle7817);
                    c3=parse_org_emftext_language_xpath3_OrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath3.g:7679:4: c4= parse_org_emftext_language_xpath3_AndExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AndExpr_in_parse_org_emftext_language_xpath3_ExprSingle7827);
                    c4=parse_org_emftext_language_xpath3_AndExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath3.g:7680:4: c5= parse_org_emftext_language_xpath3_ComparisonExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ComparisonExpr_in_parse_org_emftext_language_xpath3_ExprSingle7837);
                    c5=parse_org_emftext_language_xpath3_ComparisonExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath3.g:7681:4: c6= parse_org_emftext_language_xpath3_RangeExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_RangeExpr_in_parse_org_emftext_language_xpath3_ExprSingle7847);
                    c6=parse_org_emftext_language_xpath3_RangeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xpath3.g:7682:4: c7= parse_org_emftext_language_xpath3_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AdditiveExpr_in_parse_org_emftext_language_xpath3_ExprSingle7857);
                    c7=parse_org_emftext_language_xpath3_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xpath3.g:7683:4: c8= parse_org_emftext_language_xpath3_MultiplicativeExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_MultiplicativeExpr_in_parse_org_emftext_language_xpath3_ExprSingle7867);
                    c8=parse_org_emftext_language_xpath3_MultiplicativeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 10 :
                    // Xpath3.g:7684:4: c9= parse_org_emftext_language_xpath3_UnionExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_UnionExpr_in_parse_org_emftext_language_xpath3_ExprSingle7877);
                    c9=parse_org_emftext_language_xpath3_UnionExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c9; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 11 :
                    // Xpath3.g:7685:4: c10= parse_org_emftext_language_xpath3_IntersectExceptExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IntersectExceptExpr_in_parse_org_emftext_language_xpath3_ExprSingle7887);
                    c10=parse_org_emftext_language_xpath3_IntersectExceptExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c10; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 12 :
                    // Xpath3.g:7686:4: c11= parse_org_emftext_language_xpath3_InstanceofExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_InstanceofExpr_in_parse_org_emftext_language_xpath3_ExprSingle7897);
                    c11=parse_org_emftext_language_xpath3_InstanceofExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c11; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 13 :
                    // Xpath3.g:7687:4: c12= parse_org_emftext_language_xpath3_TreatExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_TreatExpr_in_parse_org_emftext_language_xpath3_ExprSingle7907);
                    c12=parse_org_emftext_language_xpath3_TreatExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c12; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 14 :
                    // Xpath3.g:7688:4: c13= parse_org_emftext_language_xpath3_CastableExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_CastableExpr_in_parse_org_emftext_language_xpath3_ExprSingle7917);
                    c13=parse_org_emftext_language_xpath3_CastableExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c13; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 15 :
                    // Xpath3.g:7689:4: c14= parse_org_emftext_language_xpath3_CastExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_CastExpr_in_parse_org_emftext_language_xpath3_ExprSingle7927);
                    c14=parse_org_emftext_language_xpath3_CastExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c14; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 16 :
                    // Xpath3.g:7690:4: c15= parse_org_emftext_language_xpath3_UnaryExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_UnaryExpr_in_parse_org_emftext_language_xpath3_ExprSingle7937);
                    c15=parse_org_emftext_language_xpath3_UnaryExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c15; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 17 :
                    // Xpath3.g:7691:4: c16= parse_org_emftext_language_xpath3_FilterExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_FilterExpr_in_parse_org_emftext_language_xpath3_ExprSingle7947);
                    c16=parse_org_emftext_language_xpath3_FilterExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c16; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 18 :
                    // Xpath3.g:7692:4: c17= parse_org_emftext_language_xpath3_FunctionCall
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_FunctionCall_in_parse_org_emftext_language_xpath3_ExprSingle7957);
                    c17=parse_org_emftext_language_xpath3_FunctionCall();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c17; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 19 :
                    // Xpath3.g:7693:4: c18= parse_org_emftext_language_xpath3_PathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_PathExpr_in_parse_org_emftext_language_xpath3_ExprSingle7967);
                    c18=parse_org_emftext_language_xpath3_PathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c18; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 20 :
                    // Xpath3.g:7694:4: c19= parse_org_emftext_language_xpath3_ChildStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ChildStepExpr_in_parse_org_emftext_language_xpath3_ExprSingle7977);
                    c19=parse_org_emftext_language_xpath3_ChildStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c19; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 21 :
                    // Xpath3.g:7695:4: c20= parse_org_emftext_language_xpath3_DescOrSelfStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DescOrSelfStepExpr_in_parse_org_emftext_language_xpath3_ExprSingle7987);
                    c20=parse_org_emftext_language_xpath3_DescOrSelfStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c20; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 22 :
                    // Xpath3.g:7696:4: c21= parse_org_emftext_language_xpath3_RootStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_RootStepExpr_in_parse_org_emftext_language_xpath3_ExprSingle7997);
                    c21=parse_org_emftext_language_xpath3_RootStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c21; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 23 :
                    // Xpath3.g:7697:4: c22= parse_org_emftext_language_xpath3_SelfStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_SelfStepExpr_in_parse_org_emftext_language_xpath3_ExprSingle8007);
                    c22=parse_org_emftext_language_xpath3_SelfStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c22; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 24 :
                    // Xpath3.g:7698:4: c23= parse_org_emftext_language_xpath3_GeneralForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_GeneralForwardStep_in_parse_org_emftext_language_xpath3_ExprSingle8017);
                    c23=parse_org_emftext_language_xpath3_GeneralForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c23; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 25 :
                    // Xpath3.g:7699:4: c24= parse_org_emftext_language_xpath3_AbbrevForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AbbrevForwardStep_in_parse_org_emftext_language_xpath3_ExprSingle8027);
                    c24=parse_org_emftext_language_xpath3_AbbrevForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c24; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 26 :
                    // Xpath3.g:7700:4: c25= parse_org_emftext_language_xpath3_GeneralReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_GeneralReverseStep_in_parse_org_emftext_language_xpath3_ExprSingle8037);
                    c25=parse_org_emftext_language_xpath3_GeneralReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c25; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 27 :
                    // Xpath3.g:7701:4: c26= parse_org_emftext_language_xpath3_AbbrevReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AbbrevReverseStep_in_parse_org_emftext_language_xpath3_ExprSingle8047);
                    c26=parse_org_emftext_language_xpath3_AbbrevReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c26; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 28 :
                    // Xpath3.g:7702:4: c27= parse_org_emftext_language_xpath3_VarRef
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_VarRef_in_parse_org_emftext_language_xpath3_ExprSingle8057);
                    c27=parse_org_emftext_language_xpath3_VarRef();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c27; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 29 :
                    // Xpath3.g:7703:4: c28= parse_org_emftext_language_xpath3_ParenthesizedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ParenthesizedExpr_in_parse_org_emftext_language_xpath3_ExprSingle8067);
                    c28=parse_org_emftext_language_xpath3_ParenthesizedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c28; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 30 :
                    // Xpath3.g:7704:4: c29= parse_org_emftext_language_xpath3_ContextItemExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ContextItemExpr_in_parse_org_emftext_language_xpath3_ExprSingle8077);
                    c29=parse_org_emftext_language_xpath3_ContextItemExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c29; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 31 :
                    // Xpath3.g:7705:4: c30= parse_org_emftext_language_xpath3_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IntegerLiteral_in_parse_org_emftext_language_xpath3_ExprSingle8087);
                    c30=parse_org_emftext_language_xpath3_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c30; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 32 :
                    // Xpath3.g:7706:4: c31= parse_org_emftext_language_xpath3_DecimalLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DecimalLiteral_in_parse_org_emftext_language_xpath3_ExprSingle8097);
                    c31=parse_org_emftext_language_xpath3_DecimalLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c31; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 33 :
                    // Xpath3.g:7707:4: c32= parse_org_emftext_language_xpath3_DoubleLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DoubleLiteral_in_parse_org_emftext_language_xpath3_ExprSingle8107);
                    c32=parse_org_emftext_language_xpath3_DoubleLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c32; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 34 :
                    // Xpath3.g:7708:4: c33= parse_org_emftext_language_xpath3_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_StringLiteral_in_parse_org_emftext_language_xpath3_ExprSingle8117);
                    c33=parse_org_emftext_language_xpath3_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c33; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 70, parse_org_emftext_language_xpath3_ExprSingle_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_ExprSingle"



    // $ANTLR start "parse_org_emftext_language_xpath3_Comp"
    // Xpath3.g:7712:1: parse_org_emftext_language_xpath3_Comp returns [org.emftext.language.xpath3.Comp element = null] : (c0= parse_org_emftext_language_xpath3_GeneralComp |c1= parse_org_emftext_language_xpath3_ValueComp |c2= parse_org_emftext_language_xpath3_NodeComp );
    public final org.emftext.language.xpath3.Comp parse_org_emftext_language_xpath3_Comp() throws RecognitionException {
        org.emftext.language.xpath3.Comp element =  null;

        int parse_org_emftext_language_xpath3_Comp_StartIndex = input.index();

        org.emftext.language.xpath3.GeneralComp c0 =null;

        org.emftext.language.xpath3.ValueComp c1 =null;

        org.emftext.language.xpath3.NodeComp c2 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return element; }

            // Xpath3.g:7713:2: (c0= parse_org_emftext_language_xpath3_GeneralComp |c1= parse_org_emftext_language_xpath3_ValueComp |c2= parse_org_emftext_language_xpath3_NodeComp )
            int alt73=3;
            switch ( input.LA(1) ) {
            case 11:
            case 25:
            case 27:
            case 28:
            case 29:
            case 30:
                {
                alt73=1;
                }
                break;
            case 52:
            case 58:
            case 59:
            case 67:
            case 68:
            case 71:
                {
                alt73=2;
                }
                break;
            case 26:
            case 31:
            case 65:
                {
                alt73=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;

            }

            switch (alt73) {
                case 1 :
                    // Xpath3.g:7714:2: c0= parse_org_emftext_language_xpath3_GeneralComp
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_GeneralComp_in_parse_org_emftext_language_xpath3_Comp8138);
                    c0=parse_org_emftext_language_xpath3_GeneralComp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath3.g:7715:4: c1= parse_org_emftext_language_xpath3_ValueComp
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ValueComp_in_parse_org_emftext_language_xpath3_Comp8148);
                    c1=parse_org_emftext_language_xpath3_ValueComp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath3.g:7716:4: c2= parse_org_emftext_language_xpath3_NodeComp
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_NodeComp_in_parse_org_emftext_language_xpath3_Comp8158);
                    c2=parse_org_emftext_language_xpath3_NodeComp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 71, parse_org_emftext_language_xpath3_Comp_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_Comp"



    // $ANTLR start "parse_org_emftext_language_xpath3_SequenceType"
    // Xpath3.g:7720:1: parse_org_emftext_language_xpath3_SequenceType returns [org.emftext.language.xpath3.SequenceType element = null] : (c0= parse_org_emftext_language_xpath3_EmptySequenceType |c1= parse_org_emftext_language_xpath3_ItemSequenceType );
    public final org.emftext.language.xpath3.SequenceType parse_org_emftext_language_xpath3_SequenceType() throws RecognitionException {
        org.emftext.language.xpath3.SequenceType element =  null;

        int parse_org_emftext_language_xpath3_SequenceType_StartIndex = input.index();

        org.emftext.language.xpath3.EmptySequenceType c0 =null;

        org.emftext.language.xpath3.ItemSequenceType c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return element; }

            // Xpath3.g:7721:2: (c0= parse_org_emftext_language_xpath3_EmptySequenceType |c1= parse_org_emftext_language_xpath3_ItemSequenceType )
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==51) ) {
                alt74=1;
            }
            else if ( ((LA74_0 >= NCNAME && LA74_0 <= QNAME)||LA74_0==40||LA74_0==44||(LA74_0 >= 48 && LA74_0 <= 49)||LA74_0==66||LA74_0==72||LA74_0==78||(LA74_0 >= 81 && LA74_0 <= 82)||LA74_0==85) ) {
                alt74=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;

            }
            switch (alt74) {
                case 1 :
                    // Xpath3.g:7722:2: c0= parse_org_emftext_language_xpath3_EmptySequenceType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_EmptySequenceType_in_parse_org_emftext_language_xpath3_SequenceType8179);
                    c0=parse_org_emftext_language_xpath3_EmptySequenceType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath3.g:7723:4: c1= parse_org_emftext_language_xpath3_ItemSequenceType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ItemSequenceType_in_parse_org_emftext_language_xpath3_SequenceType8189);
                    c1=parse_org_emftext_language_xpath3_ItemSequenceType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 72, parse_org_emftext_language_xpath3_SequenceType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_SequenceType"



    // $ANTLR start "parse_org_emftext_language_xpath3_ValueExpr"
    // Xpath3.g:7727:1: parse_org_emftext_language_xpath3_ValueExpr returns [org.emftext.language.xpath3.ValueExpr element = null] : c0= parse_org_emftext_language_xpath3_PathExpr ;
    public final org.emftext.language.xpath3.ValueExpr parse_org_emftext_language_xpath3_ValueExpr() throws RecognitionException {
        org.emftext.language.xpath3.ValueExpr element =  null;

        int parse_org_emftext_language_xpath3_ValueExpr_StartIndex = input.index();

        org.emftext.language.xpath3.PathExpr c0 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return element; }

            // Xpath3.g:7728:2: (c0= parse_org_emftext_language_xpath3_PathExpr )
            // Xpath3.g:7729:2: c0= parse_org_emftext_language_xpath3_PathExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath3_PathExpr_in_parse_org_emftext_language_xpath3_ValueExpr8210);
            c0=parse_org_emftext_language_xpath3_PathExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 73, parse_org_emftext_language_xpath3_ValueExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_ValueExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_PrimaryExpr"
    // Xpath3.g:7733:1: parse_org_emftext_language_xpath3_PrimaryExpr returns [org.emftext.language.xpath3.PrimaryExpr element = null] : (c0= parse_org_emftext_language_xpath3_FunctionCall |c1= parse_org_emftext_language_xpath3_VarRef |c2= parse_org_emftext_language_xpath3_ParenthesizedExpr |c3= parse_org_emftext_language_xpath3_ContextItemExpr |c4= parse_org_emftext_language_xpath3_IntegerLiteral |c5= parse_org_emftext_language_xpath3_DecimalLiteral |c6= parse_org_emftext_language_xpath3_DoubleLiteral |c7= parse_org_emftext_language_xpath3_StringLiteral );
    public final org.emftext.language.xpath3.PrimaryExpr parse_org_emftext_language_xpath3_PrimaryExpr() throws RecognitionException {
        org.emftext.language.xpath3.PrimaryExpr element =  null;

        int parse_org_emftext_language_xpath3_PrimaryExpr_StartIndex = input.index();

        org.emftext.language.xpath3.FunctionCall c0 =null;

        org.emftext.language.xpath3.VarRef c1 =null;

        org.emftext.language.xpath3.ParenthesizedExpr c2 =null;

        org.emftext.language.xpath3.ContextItemExpr c3 =null;

        org.emftext.language.xpath3.IntegerLiteral c4 =null;

        org.emftext.language.xpath3.DecimalLiteral c5 =null;

        org.emftext.language.xpath3.DoubleLiteral c6 =null;

        org.emftext.language.xpath3.StringLiteral c7 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return element; }

            // Xpath3.g:7734:2: (c0= parse_org_emftext_language_xpath3_FunctionCall |c1= parse_org_emftext_language_xpath3_VarRef |c2= parse_org_emftext_language_xpath3_ParenthesizedExpr |c3= parse_org_emftext_language_xpath3_ContextItemExpr |c4= parse_org_emftext_language_xpath3_IntegerLiteral |c5= parse_org_emftext_language_xpath3_DecimalLiteral |c6= parse_org_emftext_language_xpath3_DoubleLiteral |c7= parse_org_emftext_language_xpath3_StringLiteral )
            int alt75=8;
            switch ( input.LA(1) ) {
            case NCNAME:
            case QNAME:
                {
                alt75=1;
                }
                break;
            case 12:
                {
                alt75=2;
                }
                break;
            case 13:
                {
                alt75=3;
                }
                break;
            case 19:
                {
                alt75=4;
                }
                break;
            case INTEGER_LITERAL:
                {
                alt75=5;
                }
                break;
            case DECIMAL_LITERAL:
                {
                alt75=6;
                }
                break;
            case DOUBLE_LITERAL:
                {
                alt75=7;
                }
                break;
            case STRING_LITERAL:
                {
                alt75=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;

            }

            switch (alt75) {
                case 1 :
                    // Xpath3.g:7735:2: c0= parse_org_emftext_language_xpath3_FunctionCall
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_FunctionCall_in_parse_org_emftext_language_xpath3_PrimaryExpr8231);
                    c0=parse_org_emftext_language_xpath3_FunctionCall();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath3.g:7736:4: c1= parse_org_emftext_language_xpath3_VarRef
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_VarRef_in_parse_org_emftext_language_xpath3_PrimaryExpr8241);
                    c1=parse_org_emftext_language_xpath3_VarRef();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath3.g:7737:4: c2= parse_org_emftext_language_xpath3_ParenthesizedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ParenthesizedExpr_in_parse_org_emftext_language_xpath3_PrimaryExpr8251);
                    c2=parse_org_emftext_language_xpath3_ParenthesizedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath3.g:7738:4: c3= parse_org_emftext_language_xpath3_ContextItemExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ContextItemExpr_in_parse_org_emftext_language_xpath3_PrimaryExpr8261);
                    c3=parse_org_emftext_language_xpath3_ContextItemExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath3.g:7739:4: c4= parse_org_emftext_language_xpath3_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IntegerLiteral_in_parse_org_emftext_language_xpath3_PrimaryExpr8271);
                    c4=parse_org_emftext_language_xpath3_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath3.g:7740:4: c5= parse_org_emftext_language_xpath3_DecimalLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DecimalLiteral_in_parse_org_emftext_language_xpath3_PrimaryExpr8281);
                    c5=parse_org_emftext_language_xpath3_DecimalLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath3.g:7741:4: c6= parse_org_emftext_language_xpath3_DoubleLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DoubleLiteral_in_parse_org_emftext_language_xpath3_PrimaryExpr8291);
                    c6=parse_org_emftext_language_xpath3_DoubleLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xpath3.g:7742:4: c7= parse_org_emftext_language_xpath3_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_StringLiteral_in_parse_org_emftext_language_xpath3_PrimaryExpr8301);
                    c7=parse_org_emftext_language_xpath3_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 74, parse_org_emftext_language_xpath3_PrimaryExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_PrimaryExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_PathExprChild"
    // Xpath3.g:7746:1: parse_org_emftext_language_xpath3_PathExprChild returns [org.emftext.language.xpath3.PathExprChild element = null] : (c0= parse_org_emftext_language_xpath3_FilterExpr |c1= parse_org_emftext_language_xpath3_FunctionCall |c2= parse_org_emftext_language_xpath3_ChildStepExpr |c3= parse_org_emftext_language_xpath3_DescOrSelfStepExpr |c4= parse_org_emftext_language_xpath3_RootStepExpr |c5= parse_org_emftext_language_xpath3_SelfStepExpr |c6= parse_org_emftext_language_xpath3_GeneralForwardStep |c7= parse_org_emftext_language_xpath3_AbbrevForwardStep |c8= parse_org_emftext_language_xpath3_GeneralReverseStep |c9= parse_org_emftext_language_xpath3_AbbrevReverseStep |c10= parse_org_emftext_language_xpath3_VarRef |c11= parse_org_emftext_language_xpath3_ParenthesizedExpr |c12= parse_org_emftext_language_xpath3_ContextItemExpr |c13= parse_org_emftext_language_xpath3_IntegerLiteral |c14= parse_org_emftext_language_xpath3_DecimalLiteral |c15= parse_org_emftext_language_xpath3_DoubleLiteral |c16= parse_org_emftext_language_xpath3_StringLiteral );
    public final org.emftext.language.xpath3.PathExprChild parse_org_emftext_language_xpath3_PathExprChild() throws RecognitionException {
        org.emftext.language.xpath3.PathExprChild element =  null;

        int parse_org_emftext_language_xpath3_PathExprChild_StartIndex = input.index();

        org.emftext.language.xpath3.FilterExpr c0 =null;

        org.emftext.language.xpath3.FunctionCall c1 =null;

        org.emftext.language.xpath3.ChildStepExpr c2 =null;

        org.emftext.language.xpath3.DescOrSelfStepExpr c3 =null;

        org.emftext.language.xpath3.RootStepExpr c4 =null;

        org.emftext.language.xpath3.SelfStepExpr c5 =null;

        org.emftext.language.xpath3.GeneralForwardStep c6 =null;

        org.emftext.language.xpath3.AbbrevForwardStep c7 =null;

        org.emftext.language.xpath3.GeneralReverseStep c8 =null;

        org.emftext.language.xpath3.AbbrevReverseStep c9 =null;

        org.emftext.language.xpath3.VarRef c10 =null;

        org.emftext.language.xpath3.ParenthesizedExpr c11 =null;

        org.emftext.language.xpath3.ContextItemExpr c12 =null;

        org.emftext.language.xpath3.IntegerLiteral c13 =null;

        org.emftext.language.xpath3.DecimalLiteral c14 =null;

        org.emftext.language.xpath3.DoubleLiteral c15 =null;

        org.emftext.language.xpath3.StringLiteral c16 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return element; }

            // Xpath3.g:7747:2: (c0= parse_org_emftext_language_xpath3_FilterExpr |c1= parse_org_emftext_language_xpath3_FunctionCall |c2= parse_org_emftext_language_xpath3_ChildStepExpr |c3= parse_org_emftext_language_xpath3_DescOrSelfStepExpr |c4= parse_org_emftext_language_xpath3_RootStepExpr |c5= parse_org_emftext_language_xpath3_SelfStepExpr |c6= parse_org_emftext_language_xpath3_GeneralForwardStep |c7= parse_org_emftext_language_xpath3_AbbrevForwardStep |c8= parse_org_emftext_language_xpath3_GeneralReverseStep |c9= parse_org_emftext_language_xpath3_AbbrevReverseStep |c10= parse_org_emftext_language_xpath3_VarRef |c11= parse_org_emftext_language_xpath3_ParenthesizedExpr |c12= parse_org_emftext_language_xpath3_ContextItemExpr |c13= parse_org_emftext_language_xpath3_IntegerLiteral |c14= parse_org_emftext_language_xpath3_DecimalLiteral |c15= parse_org_emftext_language_xpath3_DoubleLiteral |c16= parse_org_emftext_language_xpath3_StringLiteral )
            int alt76=17;
            switch ( input.LA(1) ) {
            case QNAME:
                {
                int LA76_1 = input.LA(2);

                if ( (synpred159_Xpath3()) ) {
                    alt76=1;
                }
                else if ( (synpred160_Xpath3()) ) {
                    alt76=2;
                }
                else if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath3()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 1, input);

                    throw nvae;

                }
                }
                break;
            case NCNAME:
                {
                int LA76_2 = input.LA(2);

                if ( (synpred159_Xpath3()) ) {
                    alt76=1;
                }
                else if ( (synpred160_Xpath3()) ) {
                    alt76=2;
                }
                else if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath3()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 2, input);

                    throw nvae;

                }
                }
                break;
            case 12:
                {
                int LA76_3 = input.LA(2);

                if ( (synpred159_Xpath3()) ) {
                    alt76=1;
                }
                else if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred169_Xpath3()) ) {
                    alt76=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 3, input);

                    throw nvae;

                }
                }
                break;
            case 13:
                {
                int LA76_4 = input.LA(2);

                if ( (synpred159_Xpath3()) ) {
                    alt76=1;
                }
                else if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred170_Xpath3()) ) {
                    alt76=12;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 4, input);

                    throw nvae;

                }
                }
                break;
            case 19:
                {
                int LA76_5 = input.LA(2);

                if ( (synpred159_Xpath3()) ) {
                    alt76=1;
                }
                else if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred171_Xpath3()) ) {
                    alt76=13;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 5, input);

                    throw nvae;

                }
                }
                break;
            case INTEGER_LITERAL:
                {
                int LA76_6 = input.LA(2);

                if ( (synpred159_Xpath3()) ) {
                    alt76=1;
                }
                else if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred172_Xpath3()) ) {
                    alt76=14;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 6, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL_LITERAL:
                {
                int LA76_7 = input.LA(2);

                if ( (synpred159_Xpath3()) ) {
                    alt76=1;
                }
                else if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred173_Xpath3()) ) {
                    alt76=15;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 7, input);

                    throw nvae;

                }
                }
                break;
            case DOUBLE_LITERAL:
                {
                int LA76_8 = input.LA(2);

                if ( (synpred159_Xpath3()) ) {
                    alt76=1;
                }
                else if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred174_Xpath3()) ) {
                    alt76=16;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 8, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA76_9 = input.LA(2);

                if ( (synpred159_Xpath3()) ) {
                    alt76=1;
                }
                else if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (true) ) {
                    alt76=17;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 9, input);

                    throw nvae;

                }
                }
                break;
            case 21:
                {
                int LA76_10 = input.LA(2);

                if ( (synpred161_Xpath3()) ) {
                    alt76=3;
                }
                else if ( (synpred163_Xpath3()) ) {
                    alt76=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 10, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                alt76=4;
                }
                break;
            case 43:
                {
                int LA76_12 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred165_Xpath3()) ) {
                    alt76=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 12, input);

                    throw nvae;

                }
                }
                break;
            case 45:
                {
                int LA76_13 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred165_Xpath3()) ) {
                    alt76=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 13, input);

                    throw nvae;

                }
                }
                break;
            case 40:
                {
                int LA76_14 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred165_Xpath3()) ) {
                    alt76=7;
                }
                else if ( (synpred166_Xpath3()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 14, input);

                    throw nvae;

                }
                }
                break;
            case 83:
                {
                int LA76_15 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred165_Xpath3()) ) {
                    alt76=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 15, input);

                    throw nvae;

                }
                }
                break;
            case 46:
                {
                int LA76_16 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred165_Xpath3()) ) {
                    alt76=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 16, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA76_17 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred165_Xpath3()) ) {
                    alt76=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 17, input);

                    throw nvae;

                }
                }
                break;
            case 55:
                {
                int LA76_18 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred165_Xpath3()) ) {
                    alt76=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 18, input);

                    throw nvae;

                }
                }
                break;
            case 70:
                {
                int LA76_19 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred165_Xpath3()) ) {
                    alt76=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 19, input);

                    throw nvae;

                }
                }
                break;
            case 33:
                {
                int LA76_20 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath3()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 20, input);

                    throw nvae;

                }
                }
                break;
            case 72:
                {
                int LA76_21 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath3()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 21, input);

                    throw nvae;

                }
                }
                break;
            case 48:
                {
                int LA76_22 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath3()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 22, input);

                    throw nvae;

                }
                }
                break;
            case 85:
                {
                int LA76_23 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath3()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 23, input);

                    throw nvae;

                }
                }
                break;
            case 44:
                {
                int LA76_24 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath3()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 24, input);

                    throw nvae;

                }
                }
                break;
            case 78:
                {
                int LA76_25 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath3()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 25, input);

                    throw nvae;

                }
                }
                break;
            case 81:
                {
                int LA76_26 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath3()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 26, input);

                    throw nvae;

                }
                }
                break;
            case 49:
                {
                int LA76_27 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath3()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 27, input);

                    throw nvae;

                }
                }
                break;
            case 82:
                {
                int LA76_28 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath3()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 28, input);

                    throw nvae;

                }
                }
                break;
            case 15:
                {
                int LA76_29 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath3()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 29, input);

                    throw nvae;

                }
                }
                break;
            case 75:
                {
                int LA76_30 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred167_Xpath3()) ) {
                    alt76=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 30, input);

                    throw nvae;

                }
                }
                break;
            case 36:
                {
                int LA76_31 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred167_Xpath3()) ) {
                    alt76=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 31, input);

                    throw nvae;

                }
                }
                break;
            case 77:
                {
                int LA76_32 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred167_Xpath3()) ) {
                    alt76=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 32, input);

                    throw nvae;

                }
                }
                break;
            case 76:
                {
                int LA76_33 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred167_Xpath3()) ) {
                    alt76=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 33, input);

                    throw nvae;

                }
                }
                break;
            case 37:
                {
                int LA76_34 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred167_Xpath3()) ) {
                    alt76=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 34, input);

                    throw nvae;

                }
                }
                break;
            case 20:
                {
                int LA76_35 = input.LA(2);

                if ( (synpred164_Xpath3()) ) {
                    alt76=6;
                }
                else if ( (synpred168_Xpath3()) ) {
                    alt76=10;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 35, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;

            }

            switch (alt76) {
                case 1 :
                    // Xpath3.g:7748:2: c0= parse_org_emftext_language_xpath3_FilterExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_FilterExpr_in_parse_org_emftext_language_xpath3_PathExprChild8322);
                    c0=parse_org_emftext_language_xpath3_FilterExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath3.g:7749:4: c1= parse_org_emftext_language_xpath3_FunctionCall
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_FunctionCall_in_parse_org_emftext_language_xpath3_PathExprChild8332);
                    c1=parse_org_emftext_language_xpath3_FunctionCall();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath3.g:7750:4: c2= parse_org_emftext_language_xpath3_ChildStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ChildStepExpr_in_parse_org_emftext_language_xpath3_PathExprChild8342);
                    c2=parse_org_emftext_language_xpath3_ChildStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath3.g:7751:4: c3= parse_org_emftext_language_xpath3_DescOrSelfStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DescOrSelfStepExpr_in_parse_org_emftext_language_xpath3_PathExprChild8352);
                    c3=parse_org_emftext_language_xpath3_DescOrSelfStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath3.g:7752:4: c4= parse_org_emftext_language_xpath3_RootStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_RootStepExpr_in_parse_org_emftext_language_xpath3_PathExprChild8362);
                    c4=parse_org_emftext_language_xpath3_RootStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath3.g:7753:4: c5= parse_org_emftext_language_xpath3_SelfStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_SelfStepExpr_in_parse_org_emftext_language_xpath3_PathExprChild8372);
                    c5=parse_org_emftext_language_xpath3_SelfStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath3.g:7754:4: c6= parse_org_emftext_language_xpath3_GeneralForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_GeneralForwardStep_in_parse_org_emftext_language_xpath3_PathExprChild8382);
                    c6=parse_org_emftext_language_xpath3_GeneralForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xpath3.g:7755:4: c7= parse_org_emftext_language_xpath3_AbbrevForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AbbrevForwardStep_in_parse_org_emftext_language_xpath3_PathExprChild8392);
                    c7=parse_org_emftext_language_xpath3_AbbrevForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xpath3.g:7756:4: c8= parse_org_emftext_language_xpath3_GeneralReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_GeneralReverseStep_in_parse_org_emftext_language_xpath3_PathExprChild8402);
                    c8=parse_org_emftext_language_xpath3_GeneralReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 10 :
                    // Xpath3.g:7757:4: c9= parse_org_emftext_language_xpath3_AbbrevReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AbbrevReverseStep_in_parse_org_emftext_language_xpath3_PathExprChild8412);
                    c9=parse_org_emftext_language_xpath3_AbbrevReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c9; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 11 :
                    // Xpath3.g:7758:4: c10= parse_org_emftext_language_xpath3_VarRef
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_VarRef_in_parse_org_emftext_language_xpath3_PathExprChild8422);
                    c10=parse_org_emftext_language_xpath3_VarRef();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c10; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 12 :
                    // Xpath3.g:7759:4: c11= parse_org_emftext_language_xpath3_ParenthesizedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ParenthesizedExpr_in_parse_org_emftext_language_xpath3_PathExprChild8432);
                    c11=parse_org_emftext_language_xpath3_ParenthesizedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c11; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 13 :
                    // Xpath3.g:7760:4: c12= parse_org_emftext_language_xpath3_ContextItemExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ContextItemExpr_in_parse_org_emftext_language_xpath3_PathExprChild8442);
                    c12=parse_org_emftext_language_xpath3_ContextItemExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c12; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 14 :
                    // Xpath3.g:7761:4: c13= parse_org_emftext_language_xpath3_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IntegerLiteral_in_parse_org_emftext_language_xpath3_PathExprChild8452);
                    c13=parse_org_emftext_language_xpath3_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c13; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 15 :
                    // Xpath3.g:7762:4: c14= parse_org_emftext_language_xpath3_DecimalLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DecimalLiteral_in_parse_org_emftext_language_xpath3_PathExprChild8462);
                    c14=parse_org_emftext_language_xpath3_DecimalLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c14; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 16 :
                    // Xpath3.g:7763:4: c15= parse_org_emftext_language_xpath3_DoubleLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DoubleLiteral_in_parse_org_emftext_language_xpath3_PathExprChild8472);
                    c15=parse_org_emftext_language_xpath3_DoubleLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c15; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 17 :
                    // Xpath3.g:7764:4: c16= parse_org_emftext_language_xpath3_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_StringLiteral_in_parse_org_emftext_language_xpath3_PathExprChild8482);
                    c16=parse_org_emftext_language_xpath3_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c16; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 75, parse_org_emftext_language_xpath3_PathExprChild_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_PathExprChild"



    // $ANTLR start "parse_org_emftext_language_xpath3_StepExpr"
    // Xpath3.g:7768:1: parse_org_emftext_language_xpath3_StepExpr returns [org.emftext.language.xpath3.StepExpr element = null] : (c0= parse_org_emftext_language_xpath3_FilterExpr |c1= parse_org_emftext_language_xpath3_GeneralForwardStep |c2= parse_org_emftext_language_xpath3_AbbrevForwardStep |c3= parse_org_emftext_language_xpath3_GeneralReverseStep |c4= parse_org_emftext_language_xpath3_AbbrevReverseStep );
    public final org.emftext.language.xpath3.StepExpr parse_org_emftext_language_xpath3_StepExpr() throws RecognitionException {
        org.emftext.language.xpath3.StepExpr element =  null;

        int parse_org_emftext_language_xpath3_StepExpr_StartIndex = input.index();

        org.emftext.language.xpath3.FilterExpr c0 =null;

        org.emftext.language.xpath3.GeneralForwardStep c1 =null;

        org.emftext.language.xpath3.AbbrevForwardStep c2 =null;

        org.emftext.language.xpath3.GeneralReverseStep c3 =null;

        org.emftext.language.xpath3.AbbrevReverseStep c4 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return element; }

            // Xpath3.g:7769:2: (c0= parse_org_emftext_language_xpath3_FilterExpr |c1= parse_org_emftext_language_xpath3_GeneralForwardStep |c2= parse_org_emftext_language_xpath3_AbbrevForwardStep |c3= parse_org_emftext_language_xpath3_GeneralReverseStep |c4= parse_org_emftext_language_xpath3_AbbrevReverseStep )
            int alt77=5;
            switch ( input.LA(1) ) {
            case QNAME:
                {
                int LA77_1 = input.LA(2);

                if ( (LA77_1==13) ) {
                    alt77=1;
                }
                else if ( (LA77_1==EOF||LA77_1==11||(LA77_1 >= 14 && LA77_1 <= 18)||(LA77_1 >= 21 && LA77_1 <= 22)||(LA77_1 >= 25 && LA77_1 <= 31)||(LA77_1 >= 34 && LA77_1 <= 35)||LA77_1==38||(LA77_1 >= 41 && LA77_1 <= 42)||LA77_1==47||LA77_1==50||LA77_1==52||LA77_1==54||(LA77_1 >= 58 && LA77_1 <= 60)||(LA77_1 >= 63 && LA77_1 <= 65)||(LA77_1 >= 67 && LA77_1 <= 69)||LA77_1==71||LA77_1==74||(LA77_1 >= 79 && LA77_1 <= 80)||(LA77_1 >= 87 && LA77_1 <= 90)) ) {
                    alt77=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 77, 1, input);

                    throw nvae;

                }
                }
                break;
            case NCNAME:
                {
                int LA77_2 = input.LA(2);

                if ( (LA77_2==13) ) {
                    alt77=1;
                }
                else if ( (LA77_2==EOF||LA77_2==11||(LA77_2 >= 14 && LA77_2 <= 18)||(LA77_2 >= 21 && LA77_2 <= 23)||(LA77_2 >= 25 && LA77_2 <= 31)||(LA77_2 >= 34 && LA77_2 <= 35)||LA77_2==38||(LA77_2 >= 41 && LA77_2 <= 42)||LA77_2==47||LA77_2==50||LA77_2==52||LA77_2==54||(LA77_2 >= 58 && LA77_2 <= 60)||(LA77_2 >= 63 && LA77_2 <= 65)||(LA77_2 >= 67 && LA77_2 <= 69)||LA77_2==71||LA77_2==74||(LA77_2 >= 79 && LA77_2 <= 80)||(LA77_2 >= 87 && LA77_2 <= 90)) ) {
                    alt77=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 77, 2, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL_LITERAL:
            case DOUBLE_LITERAL:
            case INTEGER_LITERAL:
            case STRING_LITERAL:
            case 12:
            case 13:
            case 19:
                {
                alt77=1;
                }
                break;
            case 43:
            case 45:
            case 46:
            case 55:
            case 56:
            case 70:
            case 83:
                {
                alt77=2;
                }
                break;
            case 40:
                {
                int LA77_5 = input.LA(2);

                if ( (LA77_5==24) ) {
                    alt77=2;
                }
                else if ( (LA77_5==13) ) {
                    alt77=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 77, 5, input);

                    throw nvae;

                }
                }
                break;
            case 15:
            case 33:
            case 44:
            case 48:
            case 49:
            case 72:
            case 78:
            case 81:
            case 82:
            case 85:
                {
                alt77=3;
                }
                break;
            case 36:
            case 37:
            case 75:
            case 76:
            case 77:
                {
                alt77=4;
                }
                break;
            case 20:
                {
                alt77=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;

            }

            switch (alt77) {
                case 1 :
                    // Xpath3.g:7770:2: c0= parse_org_emftext_language_xpath3_FilterExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_FilterExpr_in_parse_org_emftext_language_xpath3_StepExpr8503);
                    c0=parse_org_emftext_language_xpath3_FilterExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath3.g:7771:4: c1= parse_org_emftext_language_xpath3_GeneralForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_GeneralForwardStep_in_parse_org_emftext_language_xpath3_StepExpr8513);
                    c1=parse_org_emftext_language_xpath3_GeneralForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath3.g:7772:4: c2= parse_org_emftext_language_xpath3_AbbrevForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AbbrevForwardStep_in_parse_org_emftext_language_xpath3_StepExpr8523);
                    c2=parse_org_emftext_language_xpath3_AbbrevForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath3.g:7773:4: c3= parse_org_emftext_language_xpath3_GeneralReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_GeneralReverseStep_in_parse_org_emftext_language_xpath3_StepExpr8533);
                    c3=parse_org_emftext_language_xpath3_GeneralReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath3.g:7774:4: c4= parse_org_emftext_language_xpath3_AbbrevReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AbbrevReverseStep_in_parse_org_emftext_language_xpath3_StepExpr8543);
                    c4=parse_org_emftext_language_xpath3_AbbrevReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 76, parse_org_emftext_language_xpath3_StepExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_StepExpr"



    // $ANTLR start "parse_org_emftext_language_xpath3_SelfStepExprChild"
    // Xpath3.g:7778:1: parse_org_emftext_language_xpath3_SelfStepExprChild returns [org.emftext.language.xpath3.SelfStepExprChild element = null] : (c0= parse_org_emftext_language_xpath3_FilterExpr |c1= parse_org_emftext_language_xpath3_FunctionCall |c2= parse_org_emftext_language_xpath3_GeneralForwardStep |c3= parse_org_emftext_language_xpath3_AbbrevForwardStep |c4= parse_org_emftext_language_xpath3_GeneralReverseStep |c5= parse_org_emftext_language_xpath3_AbbrevReverseStep |c6= parse_org_emftext_language_xpath3_VarRef |c7= parse_org_emftext_language_xpath3_ParenthesizedExpr |c8= parse_org_emftext_language_xpath3_ContextItemExpr |c9= parse_org_emftext_language_xpath3_IntegerLiteral |c10= parse_org_emftext_language_xpath3_DecimalLiteral |c11= parse_org_emftext_language_xpath3_DoubleLiteral |c12= parse_org_emftext_language_xpath3_StringLiteral );
    public final org.emftext.language.xpath3.SelfStepExprChild parse_org_emftext_language_xpath3_SelfStepExprChild() throws RecognitionException {
        org.emftext.language.xpath3.SelfStepExprChild element =  null;

        int parse_org_emftext_language_xpath3_SelfStepExprChild_StartIndex = input.index();

        org.emftext.language.xpath3.FilterExpr c0 =null;

        org.emftext.language.xpath3.FunctionCall c1 =null;

        org.emftext.language.xpath3.GeneralForwardStep c2 =null;

        org.emftext.language.xpath3.AbbrevForwardStep c3 =null;

        org.emftext.language.xpath3.GeneralReverseStep c4 =null;

        org.emftext.language.xpath3.AbbrevReverseStep c5 =null;

        org.emftext.language.xpath3.VarRef c6 =null;

        org.emftext.language.xpath3.ParenthesizedExpr c7 =null;

        org.emftext.language.xpath3.ContextItemExpr c8 =null;

        org.emftext.language.xpath3.IntegerLiteral c9 =null;

        org.emftext.language.xpath3.DecimalLiteral c10 =null;

        org.emftext.language.xpath3.DoubleLiteral c11 =null;

        org.emftext.language.xpath3.StringLiteral c12 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return element; }

            // Xpath3.g:7779:2: (c0= parse_org_emftext_language_xpath3_FilterExpr |c1= parse_org_emftext_language_xpath3_FunctionCall |c2= parse_org_emftext_language_xpath3_GeneralForwardStep |c3= parse_org_emftext_language_xpath3_AbbrevForwardStep |c4= parse_org_emftext_language_xpath3_GeneralReverseStep |c5= parse_org_emftext_language_xpath3_AbbrevReverseStep |c6= parse_org_emftext_language_xpath3_VarRef |c7= parse_org_emftext_language_xpath3_ParenthesizedExpr |c8= parse_org_emftext_language_xpath3_ContextItemExpr |c9= parse_org_emftext_language_xpath3_IntegerLiteral |c10= parse_org_emftext_language_xpath3_DecimalLiteral |c11= parse_org_emftext_language_xpath3_DoubleLiteral |c12= parse_org_emftext_language_xpath3_StringLiteral )
            int alt78=13;
            switch ( input.LA(1) ) {
            case QNAME:
                {
                int LA78_1 = input.LA(2);

                if ( (synpred179_Xpath3()) ) {
                    alt78=1;
                }
                else if ( (synpred180_Xpath3()) ) {
                    alt78=2;
                }
                else if ( (synpred182_Xpath3()) ) {
                    alt78=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 1, input);

                    throw nvae;

                }
                }
                break;
            case NCNAME:
                {
                int LA78_2 = input.LA(2);

                if ( (synpred179_Xpath3()) ) {
                    alt78=1;
                }
                else if ( (synpred180_Xpath3()) ) {
                    alt78=2;
                }
                else if ( (synpred182_Xpath3()) ) {
                    alt78=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 2, input);

                    throw nvae;

                }
                }
                break;
            case 12:
                {
                int LA78_3 = input.LA(2);

                if ( (synpred179_Xpath3()) ) {
                    alt78=1;
                }
                else if ( (synpred185_Xpath3()) ) {
                    alt78=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 3, input);

                    throw nvae;

                }
                }
                break;
            case 13:
                {
                int LA78_4 = input.LA(2);

                if ( (synpred179_Xpath3()) ) {
                    alt78=1;
                }
                else if ( (synpred186_Xpath3()) ) {
                    alt78=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 4, input);

                    throw nvae;

                }
                }
                break;
            case 19:
                {
                int LA78_5 = input.LA(2);

                if ( (synpred179_Xpath3()) ) {
                    alt78=1;
                }
                else if ( (synpred187_Xpath3()) ) {
                    alt78=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 5, input);

                    throw nvae;

                }
                }
                break;
            case INTEGER_LITERAL:
                {
                int LA78_6 = input.LA(2);

                if ( (synpred179_Xpath3()) ) {
                    alt78=1;
                }
                else if ( (synpred188_Xpath3()) ) {
                    alt78=10;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 6, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL_LITERAL:
                {
                int LA78_7 = input.LA(2);

                if ( (synpred179_Xpath3()) ) {
                    alt78=1;
                }
                else if ( (synpred189_Xpath3()) ) {
                    alt78=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 7, input);

                    throw nvae;

                }
                }
                break;
            case DOUBLE_LITERAL:
                {
                int LA78_8 = input.LA(2);

                if ( (synpred179_Xpath3()) ) {
                    alt78=1;
                }
                else if ( (synpred190_Xpath3()) ) {
                    alt78=12;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 8, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA78_9 = input.LA(2);

                if ( (synpred179_Xpath3()) ) {
                    alt78=1;
                }
                else if ( (true) ) {
                    alt78=13;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 9, input);

                    throw nvae;

                }
                }
                break;
            case 43:
            case 45:
            case 46:
            case 55:
            case 56:
            case 70:
            case 83:
                {
                alt78=3;
                }
                break;
            case 40:
                {
                int LA78_12 = input.LA(2);

                if ( (synpred181_Xpath3()) ) {
                    alt78=3;
                }
                else if ( (synpred182_Xpath3()) ) {
                    alt78=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 12, input);

                    throw nvae;

                }
                }
                break;
            case 15:
            case 33:
            case 44:
            case 48:
            case 49:
            case 72:
            case 78:
            case 81:
            case 82:
            case 85:
                {
                alt78=4;
                }
                break;
            case 36:
            case 37:
            case 75:
            case 76:
            case 77:
                {
                alt78=5;
                }
                break;
            case 20:
                {
                alt78=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;

            }

            switch (alt78) {
                case 1 :
                    // Xpath3.g:7780:2: c0= parse_org_emftext_language_xpath3_FilterExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_FilterExpr_in_parse_org_emftext_language_xpath3_SelfStepExprChild8564);
                    c0=parse_org_emftext_language_xpath3_FilterExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath3.g:7781:4: c1= parse_org_emftext_language_xpath3_FunctionCall
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_FunctionCall_in_parse_org_emftext_language_xpath3_SelfStepExprChild8574);
                    c1=parse_org_emftext_language_xpath3_FunctionCall();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath3.g:7782:4: c2= parse_org_emftext_language_xpath3_GeneralForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_GeneralForwardStep_in_parse_org_emftext_language_xpath3_SelfStepExprChild8584);
                    c2=parse_org_emftext_language_xpath3_GeneralForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath3.g:7783:4: c3= parse_org_emftext_language_xpath3_AbbrevForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AbbrevForwardStep_in_parse_org_emftext_language_xpath3_SelfStepExprChild8594);
                    c3=parse_org_emftext_language_xpath3_AbbrevForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath3.g:7784:4: c4= parse_org_emftext_language_xpath3_GeneralReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_GeneralReverseStep_in_parse_org_emftext_language_xpath3_SelfStepExprChild8604);
                    c4=parse_org_emftext_language_xpath3_GeneralReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath3.g:7785:4: c5= parse_org_emftext_language_xpath3_AbbrevReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AbbrevReverseStep_in_parse_org_emftext_language_xpath3_SelfStepExprChild8614);
                    c5=parse_org_emftext_language_xpath3_AbbrevReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath3.g:7786:4: c6= parse_org_emftext_language_xpath3_VarRef
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_VarRef_in_parse_org_emftext_language_xpath3_SelfStepExprChild8624);
                    c6=parse_org_emftext_language_xpath3_VarRef();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xpath3.g:7787:4: c7= parse_org_emftext_language_xpath3_ParenthesizedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ParenthesizedExpr_in_parse_org_emftext_language_xpath3_SelfStepExprChild8634);
                    c7=parse_org_emftext_language_xpath3_ParenthesizedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xpath3.g:7788:4: c8= parse_org_emftext_language_xpath3_ContextItemExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ContextItemExpr_in_parse_org_emftext_language_xpath3_SelfStepExprChild8644);
                    c8=parse_org_emftext_language_xpath3_ContextItemExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 10 :
                    // Xpath3.g:7789:4: c9= parse_org_emftext_language_xpath3_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IntegerLiteral_in_parse_org_emftext_language_xpath3_SelfStepExprChild8654);
                    c9=parse_org_emftext_language_xpath3_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c9; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 11 :
                    // Xpath3.g:7790:4: c10= parse_org_emftext_language_xpath3_DecimalLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DecimalLiteral_in_parse_org_emftext_language_xpath3_SelfStepExprChild8664);
                    c10=parse_org_emftext_language_xpath3_DecimalLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c10; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 12 :
                    // Xpath3.g:7791:4: c11= parse_org_emftext_language_xpath3_DoubleLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DoubleLiteral_in_parse_org_emftext_language_xpath3_SelfStepExprChild8674);
                    c11=parse_org_emftext_language_xpath3_DoubleLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c11; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 13 :
                    // Xpath3.g:7792:4: c12= parse_org_emftext_language_xpath3_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_StringLiteral_in_parse_org_emftext_language_xpath3_SelfStepExprChild8684);
                    c12=parse_org_emftext_language_xpath3_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c12; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 77, parse_org_emftext_language_xpath3_SelfStepExprChild_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_SelfStepExprChild"



    // $ANTLR start "parse_org_emftext_language_xpath3_NodeTest"
    // Xpath3.g:7796:1: parse_org_emftext_language_xpath3_NodeTest returns [org.emftext.language.xpath3.NodeTest element = null] : (c0= parse_org_emftext_language_xpath3_NodeKindTest |c1= parse_org_emftext_language_xpath3_QNameTest |c2= parse_org_emftext_language_xpath3_AnyWildcard |c3= parse_org_emftext_language_xpath3_LocalNameWildcard |c4= parse_org_emftext_language_xpath3_NamespaceWildcard );
    public final org.emftext.language.xpath3.NodeTest parse_org_emftext_language_xpath3_NodeTest() throws RecognitionException {
        org.emftext.language.xpath3.NodeTest element =  null;

        int parse_org_emftext_language_xpath3_NodeTest_StartIndex = input.index();

        org.emftext.language.xpath3.NodeKindTest c0 =null;

        org.emftext.language.xpath3.QNameTest c1 =null;

        org.emftext.language.xpath3.AnyWildcard c2 =null;

        org.emftext.language.xpath3.LocalNameWildcard c3 =null;

        org.emftext.language.xpath3.NamespaceWildcard c4 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return element; }

            // Xpath3.g:7797:2: (c0= parse_org_emftext_language_xpath3_NodeKindTest |c1= parse_org_emftext_language_xpath3_QNameTest |c2= parse_org_emftext_language_xpath3_AnyWildcard |c3= parse_org_emftext_language_xpath3_LocalNameWildcard |c4= parse_org_emftext_language_xpath3_NamespaceWildcard )
            int alt79=5;
            switch ( input.LA(1) ) {
            case 40:
            case 44:
            case 48:
            case 49:
            case 72:
            case 78:
            case 81:
            case 82:
            case 85:
                {
                alt79=1;
                }
                break;
            case QNAME:
                {
                alt79=2;
                }
                break;
            case NCNAME:
                {
                int LA79_3 = input.LA(2);

                if ( (LA79_3==EOF||LA79_3==11||(LA79_3 >= 14 && LA79_3 <= 18)||(LA79_3 >= 21 && LA79_3 <= 22)||(LA79_3 >= 25 && LA79_3 <= 31)||(LA79_3 >= 34 && LA79_3 <= 35)||LA79_3==38||(LA79_3 >= 41 && LA79_3 <= 42)||LA79_3==47||LA79_3==50||LA79_3==52||LA79_3==54||(LA79_3 >= 58 && LA79_3 <= 60)||(LA79_3 >= 63 && LA79_3 <= 65)||(LA79_3 >= 67 && LA79_3 <= 69)||LA79_3==71||LA79_3==74||(LA79_3 >= 79 && LA79_3 <= 80)||(LA79_3 >= 87 && LA79_3 <= 90)) ) {
                    alt79=2;
                }
                else if ( (LA79_3==23) ) {
                    alt79=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 79, 3, input);

                    throw nvae;

                }
                }
                break;
            case 15:
                {
                int LA79_4 = input.LA(2);

                if ( (LA79_4==EOF||LA79_4==11||(LA79_4 >= 14 && LA79_4 <= 18)||(LA79_4 >= 21 && LA79_4 <= 22)||(LA79_4 >= 25 && LA79_4 <= 31)||(LA79_4 >= 34 && LA79_4 <= 35)||LA79_4==38||(LA79_4 >= 41 && LA79_4 <= 42)||LA79_4==47||LA79_4==50||LA79_4==52||LA79_4==54||(LA79_4 >= 58 && LA79_4 <= 60)||(LA79_4 >= 63 && LA79_4 <= 65)||(LA79_4 >= 67 && LA79_4 <= 69)||LA79_4==71||LA79_4==74||(LA79_4 >= 79 && LA79_4 <= 80)||(LA79_4 >= 87 && LA79_4 <= 90)) ) {
                    alt79=3;
                }
                else if ( (LA79_4==23) ) {
                    alt79=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 79, 4, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;

            }

            switch (alt79) {
                case 1 :
                    // Xpath3.g:7798:2: c0= parse_org_emftext_language_xpath3_NodeKindTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_NodeKindTest_in_parse_org_emftext_language_xpath3_NodeTest8705);
                    c0=parse_org_emftext_language_xpath3_NodeKindTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath3.g:7799:4: c1= parse_org_emftext_language_xpath3_QNameTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_QNameTest_in_parse_org_emftext_language_xpath3_NodeTest8715);
                    c1=parse_org_emftext_language_xpath3_QNameTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath3.g:7800:4: c2= parse_org_emftext_language_xpath3_AnyWildcard
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AnyWildcard_in_parse_org_emftext_language_xpath3_NodeTest8725);
                    c2=parse_org_emftext_language_xpath3_AnyWildcard();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath3.g:7801:4: c3= parse_org_emftext_language_xpath3_LocalNameWildcard
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_LocalNameWildcard_in_parse_org_emftext_language_xpath3_NodeTest8735);
                    c3=parse_org_emftext_language_xpath3_LocalNameWildcard();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath3.g:7802:4: c4= parse_org_emftext_language_xpath3_NamespaceWildcard
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_NamespaceWildcard_in_parse_org_emftext_language_xpath3_NodeTest8745);
                    c4=parse_org_emftext_language_xpath3_NamespaceWildcard();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 78, parse_org_emftext_language_xpath3_NodeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_NodeTest"



    // $ANTLR start "parse_org_emftext_language_xpath3_KindTest"
    // Xpath3.g:7806:1: parse_org_emftext_language_xpath3_KindTest returns [org.emftext.language.xpath3.KindTest element = null] : (c0= parse_org_emftext_language_xpath3_AnyKindTest |c1= parse_org_emftext_language_xpath3_DocumentTest |c2= parse_org_emftext_language_xpath3_TextTest |c3= parse_org_emftext_language_xpath3_CommentTest |c4= parse_org_emftext_language_xpath3_PITest |c5= parse_org_emftext_language_xpath3_NCNamePITest |c6= parse_org_emftext_language_xpath3_StringLiteralPITest |c7= parse_org_emftext_language_xpath3_AttributeTest |c8= parse_org_emftext_language_xpath3_WildcardAttributeTest |c9= parse_org_emftext_language_xpath3_NameAttributeTest |c10= parse_org_emftext_language_xpath3_SchemaAttributeTest |c11= parse_org_emftext_language_xpath3_ElementTest |c12= parse_org_emftext_language_xpath3_WildcardElementTest |c13= parse_org_emftext_language_xpath3_NameElementTest |c14= parse_org_emftext_language_xpath3_SchemaElementTest );
    public final org.emftext.language.xpath3.KindTest parse_org_emftext_language_xpath3_KindTest() throws RecognitionException {
        org.emftext.language.xpath3.KindTest element =  null;

        int parse_org_emftext_language_xpath3_KindTest_StartIndex = input.index();

        org.emftext.language.xpath3.AnyKindTest c0 =null;

        org.emftext.language.xpath3.DocumentTest c1 =null;

        org.emftext.language.xpath3.TextTest c2 =null;

        org.emftext.language.xpath3.CommentTest c3 =null;

        org.emftext.language.xpath3.PITest c4 =null;

        org.emftext.language.xpath3.NCNamePITest c5 =null;

        org.emftext.language.xpath3.StringLiteralPITest c6 =null;

        org.emftext.language.xpath3.AttributeTest c7 =null;

        org.emftext.language.xpath3.WildcardAttributeTest c8 =null;

        org.emftext.language.xpath3.NameAttributeTest c9 =null;

        org.emftext.language.xpath3.SchemaAttributeTest c10 =null;

        org.emftext.language.xpath3.ElementTest c11 =null;

        org.emftext.language.xpath3.WildcardElementTest c12 =null;

        org.emftext.language.xpath3.NameElementTest c13 =null;

        org.emftext.language.xpath3.SchemaElementTest c14 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return element; }

            // Xpath3.g:7807:2: (c0= parse_org_emftext_language_xpath3_AnyKindTest |c1= parse_org_emftext_language_xpath3_DocumentTest |c2= parse_org_emftext_language_xpath3_TextTest |c3= parse_org_emftext_language_xpath3_CommentTest |c4= parse_org_emftext_language_xpath3_PITest |c5= parse_org_emftext_language_xpath3_NCNamePITest |c6= parse_org_emftext_language_xpath3_StringLiteralPITest |c7= parse_org_emftext_language_xpath3_AttributeTest |c8= parse_org_emftext_language_xpath3_WildcardAttributeTest |c9= parse_org_emftext_language_xpath3_NameAttributeTest |c10= parse_org_emftext_language_xpath3_SchemaAttributeTest |c11= parse_org_emftext_language_xpath3_ElementTest |c12= parse_org_emftext_language_xpath3_WildcardElementTest |c13= parse_org_emftext_language_xpath3_NameElementTest |c14= parse_org_emftext_language_xpath3_SchemaElementTest )
            int alt80=15;
            switch ( input.LA(1) ) {
            case 72:
                {
                alt80=1;
                }
                break;
            case 48:
                {
                alt80=2;
                }
                break;
            case 85:
                {
                alt80=3;
                }
                break;
            case 44:
                {
                alt80=4;
                }
                break;
            case 78:
                {
                int LA80_5 = input.LA(2);

                if ( (LA80_5==13) ) {
                    switch ( input.LA(3) ) {
                    case 14:
                        {
                        alt80=5;
                        }
                        break;
                    case NCNAME:
                        {
                        int LA80_14 = input.LA(4);

                        if ( (LA80_14==14) ) {
                            int LA80_24 = input.LA(5);

                            if ( (synpred199_Xpath3()) ) {
                                alt80=5;
                            }
                            else if ( (synpred200_Xpath3()) ) {
                                alt80=6;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 24, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 80, 14, input);

                            throw nvae;

                        }
                        }
                        break;
                    case STRING_LITERAL:
                        {
                        int LA80_15 = input.LA(4);

                        if ( (LA80_15==14) ) {
                            int LA80_25 = input.LA(5);

                            if ( (synpred199_Xpath3()) ) {
                                alt80=5;
                            }
                            else if ( (synpred201_Xpath3()) ) {
                                alt80=7;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 25, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 80, 15, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 80, 10, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 5, input);

                    throw nvae;

                }
                }
                break;
            case 40:
                {
                int LA80_6 = input.LA(2);

                if ( (LA80_6==13) ) {
                    switch ( input.LA(3) ) {
                    case 14:
                        {
                        alt80=8;
                        }
                        break;
                    case 15:
                        {
                        int LA80_17 = input.LA(4);

                        if ( (LA80_17==17) ) {
                            int LA80_26 = input.LA(5);

                            if ( (LA80_26==QNAME) ) {
                                int LA80_36 = input.LA(6);

                                if ( (LA80_36==14) ) {
                                    int LA80_27 = input.LA(7);

                                    if ( (synpred202_Xpath3()) ) {
                                        alt80=8;
                                    }
                                    else if ( (synpred203_Xpath3()) ) {
                                        alt80=9;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 27, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 36, input);

                                    throw nvae;

                                }
                            }
                            else if ( (LA80_26==NCNAME) ) {
                                int LA80_37 = input.LA(6);

                                if ( (LA80_37==14) ) {
                                    int LA80_27 = input.LA(7);

                                    if ( (synpred202_Xpath3()) ) {
                                        alt80=8;
                                    }
                                    else if ( (synpred203_Xpath3()) ) {
                                        alt80=9;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 27, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 37, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 26, input);

                                throw nvae;

                            }
                        }
                        else if ( (LA80_17==14) ) {
                            int LA80_27 = input.LA(5);

                            if ( (synpred202_Xpath3()) ) {
                                alt80=8;
                            }
                            else if ( (synpred203_Xpath3()) ) {
                                alt80=9;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 27, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 80, 17, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QNAME:
                        {
                        int LA80_18 = input.LA(4);

                        if ( (LA80_18==17) ) {
                            int LA80_28 = input.LA(5);

                            if ( (LA80_28==QNAME) ) {
                                int LA80_39 = input.LA(6);

                                if ( (LA80_39==14) ) {
                                    int LA80_29 = input.LA(7);

                                    if ( (synpred202_Xpath3()) ) {
                                        alt80=8;
                                    }
                                    else if ( (synpred204_Xpath3()) ) {
                                        alt80=10;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 29, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 39, input);

                                    throw nvae;

                                }
                            }
                            else if ( (LA80_28==NCNAME) ) {
                                int LA80_40 = input.LA(6);

                                if ( (LA80_40==14) ) {
                                    int LA80_29 = input.LA(7);

                                    if ( (synpred202_Xpath3()) ) {
                                        alt80=8;
                                    }
                                    else if ( (synpred204_Xpath3()) ) {
                                        alt80=10;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 29, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 40, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 28, input);

                                throw nvae;

                            }
                        }
                        else if ( (LA80_18==14) ) {
                            int LA80_29 = input.LA(5);

                            if ( (synpred202_Xpath3()) ) {
                                alt80=8;
                            }
                            else if ( (synpred204_Xpath3()) ) {
                                alt80=10;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 29, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 80, 18, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NCNAME:
                        {
                        int LA80_19 = input.LA(4);

                        if ( (LA80_19==17) ) {
                            int LA80_28 = input.LA(5);

                            if ( (LA80_28==QNAME) ) {
                                int LA80_39 = input.LA(6);

                                if ( (LA80_39==14) ) {
                                    int LA80_29 = input.LA(7);

                                    if ( (synpred202_Xpath3()) ) {
                                        alt80=8;
                                    }
                                    else if ( (synpred204_Xpath3()) ) {
                                        alt80=10;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 29, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 39, input);

                                    throw nvae;

                                }
                            }
                            else if ( (LA80_28==NCNAME) ) {
                                int LA80_40 = input.LA(6);

                                if ( (LA80_40==14) ) {
                                    int LA80_29 = input.LA(7);

                                    if ( (synpred202_Xpath3()) ) {
                                        alt80=8;
                                    }
                                    else if ( (synpred204_Xpath3()) ) {
                                        alt80=10;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 29, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 40, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 28, input);

                                throw nvae;

                            }
                        }
                        else if ( (LA80_19==14) ) {
                            int LA80_29 = input.LA(5);

                            if ( (synpred202_Xpath3()) ) {
                                alt80=8;
                            }
                            else if ( (synpred204_Xpath3()) ) {
                                alt80=10;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 29, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 80, 19, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 80, 11, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 6, input);

                    throw nvae;

                }
                }
                break;
            case 81:
                {
                alt80=11;
                }
                break;
            case 49:
                {
                int LA80_8 = input.LA(2);

                if ( (LA80_8==13) ) {
                    switch ( input.LA(3) ) {
                    case 14:
                        {
                        alt80=12;
                        }
                        break;
                    case 15:
                        {
                        int LA80_21 = input.LA(4);

                        if ( (LA80_21==17) ) {
                            int LA80_30 = input.LA(5);

                            if ( (LA80_30==QNAME) ) {
                                int LA80_42 = input.LA(6);

                                if ( (LA80_42==32) ) {
                                    int LA80_48 = input.LA(7);

                                    if ( (LA80_48==14) ) {
                                        int LA80_31 = input.LA(8);

                                        if ( (synpred206_Xpath3()) ) {
                                            alt80=12;
                                        }
                                        else if ( (synpred207_Xpath3()) ) {
                                            alt80=13;
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 80, 31, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 48, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA80_42==14) ) {
                                    int LA80_31 = input.LA(7);

                                    if ( (synpred206_Xpath3()) ) {
                                        alt80=12;
                                    }
                                    else if ( (synpred207_Xpath3()) ) {
                                        alt80=13;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 31, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 42, input);

                                    throw nvae;

                                }
                            }
                            else if ( (LA80_30==NCNAME) ) {
                                int LA80_43 = input.LA(6);

                                if ( (LA80_43==32) ) {
                                    int LA80_48 = input.LA(7);

                                    if ( (LA80_48==14) ) {
                                        int LA80_31 = input.LA(8);

                                        if ( (synpred206_Xpath3()) ) {
                                            alt80=12;
                                        }
                                        else if ( (synpred207_Xpath3()) ) {
                                            alt80=13;
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 80, 31, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 48, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA80_43==14) ) {
                                    int LA80_31 = input.LA(7);

                                    if ( (synpred206_Xpath3()) ) {
                                        alt80=12;
                                    }
                                    else if ( (synpred207_Xpath3()) ) {
                                        alt80=13;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 31, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 43, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 30, input);

                                throw nvae;

                            }
                        }
                        else if ( (LA80_21==14) ) {
                            int LA80_31 = input.LA(5);

                            if ( (synpred206_Xpath3()) ) {
                                alt80=12;
                            }
                            else if ( (synpred207_Xpath3()) ) {
                                alt80=13;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 31, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 80, 21, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QNAME:
                        {
                        int LA80_22 = input.LA(4);

                        if ( (LA80_22==17) ) {
                            int LA80_32 = input.LA(5);

                            if ( (LA80_32==QNAME) ) {
                                int LA80_45 = input.LA(6);

                                if ( (LA80_45==32) ) {
                                    int LA80_49 = input.LA(7);

                                    if ( (LA80_49==14) ) {
                                        int LA80_33 = input.LA(8);

                                        if ( (synpred206_Xpath3()) ) {
                                            alt80=12;
                                        }
                                        else if ( (synpred208_Xpath3()) ) {
                                            alt80=14;
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 80, 33, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 49, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA80_45==14) ) {
                                    int LA80_33 = input.LA(7);

                                    if ( (synpred206_Xpath3()) ) {
                                        alt80=12;
                                    }
                                    else if ( (synpred208_Xpath3()) ) {
                                        alt80=14;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 33, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 45, input);

                                    throw nvae;

                                }
                            }
                            else if ( (LA80_32==NCNAME) ) {
                                int LA80_46 = input.LA(6);

                                if ( (LA80_46==32) ) {
                                    int LA80_49 = input.LA(7);

                                    if ( (LA80_49==14) ) {
                                        int LA80_33 = input.LA(8);

                                        if ( (synpred206_Xpath3()) ) {
                                            alt80=12;
                                        }
                                        else if ( (synpred208_Xpath3()) ) {
                                            alt80=14;
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 80, 33, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 49, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA80_46==14) ) {
                                    int LA80_33 = input.LA(7);

                                    if ( (synpred206_Xpath3()) ) {
                                        alt80=12;
                                    }
                                    else if ( (synpred208_Xpath3()) ) {
                                        alt80=14;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 33, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 46, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 32, input);

                                throw nvae;

                            }
                        }
                        else if ( (LA80_22==14) ) {
                            int LA80_33 = input.LA(5);

                            if ( (synpred206_Xpath3()) ) {
                                alt80=12;
                            }
                            else if ( (synpred208_Xpath3()) ) {
                                alt80=14;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 33, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 80, 22, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NCNAME:
                        {
                        int LA80_23 = input.LA(4);

                        if ( (LA80_23==17) ) {
                            int LA80_32 = input.LA(5);

                            if ( (LA80_32==QNAME) ) {
                                int LA80_45 = input.LA(6);

                                if ( (LA80_45==32) ) {
                                    int LA80_49 = input.LA(7);

                                    if ( (LA80_49==14) ) {
                                        int LA80_33 = input.LA(8);

                                        if ( (synpred206_Xpath3()) ) {
                                            alt80=12;
                                        }
                                        else if ( (synpred208_Xpath3()) ) {
                                            alt80=14;
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 80, 33, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 49, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA80_45==14) ) {
                                    int LA80_33 = input.LA(7);

                                    if ( (synpred206_Xpath3()) ) {
                                        alt80=12;
                                    }
                                    else if ( (synpred208_Xpath3()) ) {
                                        alt80=14;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 33, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 45, input);

                                    throw nvae;

                                }
                            }
                            else if ( (LA80_32==NCNAME) ) {
                                int LA80_46 = input.LA(6);

                                if ( (LA80_46==32) ) {
                                    int LA80_49 = input.LA(7);

                                    if ( (LA80_49==14) ) {
                                        int LA80_33 = input.LA(8);

                                        if ( (synpred206_Xpath3()) ) {
                                            alt80=12;
                                        }
                                        else if ( (synpred208_Xpath3()) ) {
                                            alt80=14;
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 80, 33, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 49, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA80_46==14) ) {
                                    int LA80_33 = input.LA(7);

                                    if ( (synpred206_Xpath3()) ) {
                                        alt80=12;
                                    }
                                    else if ( (synpred208_Xpath3()) ) {
                                        alt80=14;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 33, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 46, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 32, input);

                                throw nvae;

                            }
                        }
                        else if ( (LA80_23==14) ) {
                            int LA80_33 = input.LA(5);

                            if ( (synpred206_Xpath3()) ) {
                                alt80=12;
                            }
                            else if ( (synpred208_Xpath3()) ) {
                                alt80=14;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 33, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 80, 23, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 80, 12, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 8, input);

                    throw nvae;

                }
                }
                break;
            case 82:
                {
                alt80=15;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;

            }

            switch (alt80) {
                case 1 :
                    // Xpath3.g:7808:2: c0= parse_org_emftext_language_xpath3_AnyKindTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AnyKindTest_in_parse_org_emftext_language_xpath3_KindTest8766);
                    c0=parse_org_emftext_language_xpath3_AnyKindTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath3.g:7809:4: c1= parse_org_emftext_language_xpath3_DocumentTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DocumentTest_in_parse_org_emftext_language_xpath3_KindTest8776);
                    c1=parse_org_emftext_language_xpath3_DocumentTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath3.g:7810:4: c2= parse_org_emftext_language_xpath3_TextTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_TextTest_in_parse_org_emftext_language_xpath3_KindTest8786);
                    c2=parse_org_emftext_language_xpath3_TextTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath3.g:7811:4: c3= parse_org_emftext_language_xpath3_CommentTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_CommentTest_in_parse_org_emftext_language_xpath3_KindTest8796);
                    c3=parse_org_emftext_language_xpath3_CommentTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath3.g:7812:4: c4= parse_org_emftext_language_xpath3_PITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_PITest_in_parse_org_emftext_language_xpath3_KindTest8806);
                    c4=parse_org_emftext_language_xpath3_PITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath3.g:7813:4: c5= parse_org_emftext_language_xpath3_NCNamePITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_NCNamePITest_in_parse_org_emftext_language_xpath3_KindTest8816);
                    c5=parse_org_emftext_language_xpath3_NCNamePITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath3.g:7814:4: c6= parse_org_emftext_language_xpath3_StringLiteralPITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_StringLiteralPITest_in_parse_org_emftext_language_xpath3_KindTest8826);
                    c6=parse_org_emftext_language_xpath3_StringLiteralPITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xpath3.g:7815:4: c7= parse_org_emftext_language_xpath3_AttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AttributeTest_in_parse_org_emftext_language_xpath3_KindTest8836);
                    c7=parse_org_emftext_language_xpath3_AttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xpath3.g:7816:4: c8= parse_org_emftext_language_xpath3_WildcardAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_WildcardAttributeTest_in_parse_org_emftext_language_xpath3_KindTest8846);
                    c8=parse_org_emftext_language_xpath3_WildcardAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 10 :
                    // Xpath3.g:7817:4: c9= parse_org_emftext_language_xpath3_NameAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_NameAttributeTest_in_parse_org_emftext_language_xpath3_KindTest8856);
                    c9=parse_org_emftext_language_xpath3_NameAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c9; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 11 :
                    // Xpath3.g:7818:4: c10= parse_org_emftext_language_xpath3_SchemaAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_SchemaAttributeTest_in_parse_org_emftext_language_xpath3_KindTest8866);
                    c10=parse_org_emftext_language_xpath3_SchemaAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c10; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 12 :
                    // Xpath3.g:7819:4: c11= parse_org_emftext_language_xpath3_ElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ElementTest_in_parse_org_emftext_language_xpath3_KindTest8876);
                    c11=parse_org_emftext_language_xpath3_ElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c11; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 13 :
                    // Xpath3.g:7820:4: c12= parse_org_emftext_language_xpath3_WildcardElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_WildcardElementTest_in_parse_org_emftext_language_xpath3_KindTest8886);
                    c12=parse_org_emftext_language_xpath3_WildcardElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c12; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 14 :
                    // Xpath3.g:7821:4: c13= parse_org_emftext_language_xpath3_NameElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_NameElementTest_in_parse_org_emftext_language_xpath3_KindTest8896);
                    c13=parse_org_emftext_language_xpath3_NameElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c13; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 15 :
                    // Xpath3.g:7822:4: c14= parse_org_emftext_language_xpath3_SchemaElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_SchemaElementTest_in_parse_org_emftext_language_xpath3_KindTest8906);
                    c14=parse_org_emftext_language_xpath3_SchemaElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c14; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 79, parse_org_emftext_language_xpath3_KindTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_KindTest"



    // $ANTLR start "parse_org_emftext_language_xpath3_ItemType"
    // Xpath3.g:7826:1: parse_org_emftext_language_xpath3_ItemType returns [org.emftext.language.xpath3.ItemType element = null] : (c0= parse_org_emftext_language_xpath3_ItemKindTest |c1= parse_org_emftext_language_xpath3_AnyItemType |c2= parse_org_emftext_language_xpath3_AtomicItemType );
    public final org.emftext.language.xpath3.ItemType parse_org_emftext_language_xpath3_ItemType() throws RecognitionException {
        org.emftext.language.xpath3.ItemType element =  null;

        int parse_org_emftext_language_xpath3_ItemType_StartIndex = input.index();

        org.emftext.language.xpath3.ItemKindTest c0 =null;

        org.emftext.language.xpath3.AnyItemType c1 =null;

        org.emftext.language.xpath3.AtomicItemType c2 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return element; }

            // Xpath3.g:7827:2: (c0= parse_org_emftext_language_xpath3_ItemKindTest |c1= parse_org_emftext_language_xpath3_AnyItemType |c2= parse_org_emftext_language_xpath3_AtomicItemType )
            int alt81=3;
            switch ( input.LA(1) ) {
            case 40:
            case 44:
            case 48:
            case 49:
            case 72:
            case 78:
            case 81:
            case 82:
            case 85:
                {
                alt81=1;
                }
                break;
            case 66:
                {
                alt81=2;
                }
                break;
            case NCNAME:
            case QNAME:
                {
                alt81=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 81, 0, input);

                throw nvae;

            }

            switch (alt81) {
                case 1 :
                    // Xpath3.g:7828:2: c0= parse_org_emftext_language_xpath3_ItemKindTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ItemKindTest_in_parse_org_emftext_language_xpath3_ItemType8927);
                    c0=parse_org_emftext_language_xpath3_ItemKindTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath3.g:7829:4: c1= parse_org_emftext_language_xpath3_AnyItemType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AnyItemType_in_parse_org_emftext_language_xpath3_ItemType8937);
                    c1=parse_org_emftext_language_xpath3_AnyItemType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath3.g:7830:4: c2= parse_org_emftext_language_xpath3_AtomicItemType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AtomicItemType_in_parse_org_emftext_language_xpath3_ItemType8947);
                    c2=parse_org_emftext_language_xpath3_AtomicItemType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 80, parse_org_emftext_language_xpath3_ItemType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath3_ItemType"

    // $ANTLR start synpred18_Xpath3
    public final void synpred18_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.Expr a2_0 =null;


        // Xpath3.g:1487:3: (a2_0= parse_org_emftext_language_xpath3_Expr )
        // Xpath3.g:1487:3: a2_0= parse_org_emftext_language_xpath3_Expr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_Expr_in_synpred18_Xpath3949);
        a2_0=parse_org_emftext_language_xpath3_Expr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred18_Xpath3

    // $ANTLR start synpred19_Xpath3
    public final void synpred19_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.IfExpr a2_1 =null;


        // Xpath3.g:1506:6: (a2_1= parse_org_emftext_language_xpath3_IfExpr )
        // Xpath3.g:1506:6: a2_1= parse_org_emftext_language_xpath3_IfExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_synpred19_Xpath3963);
        a2_1=parse_org_emftext_language_xpath3_IfExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred19_Xpath3

    // $ANTLR start synpred20_Xpath3
    public final void synpred20_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.ForExpr a2_2 =null;


        // Xpath3.g:1525:6: (a2_2= parse_org_emftext_language_xpath3_ForExpr )
        // Xpath3.g:1525:6: a2_2= parse_org_emftext_language_xpath3_ForExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_synpred20_Xpath3977);
        a2_2=parse_org_emftext_language_xpath3_ForExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred20_Xpath3

    // $ANTLR start synpred21_Xpath3
    public final void synpred21_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.QuantifiedExpr a2_3 =null;


        // Xpath3.g:1544:6: (a2_3= parse_org_emftext_language_xpath3_QuantifiedExpr )
        // Xpath3.g:1544:6: a2_3= parse_org_emftext_language_xpath3_QuantifiedExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_synpred21_Xpath3991);
        a2_3=parse_org_emftext_language_xpath3_QuantifiedExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred21_Xpath3

    // $ANTLR start synpred93_Xpath3
    public final void synpred93_Xpath3_fragment() throws RecognitionException {
        Token a2=null;

        // Xpath3.g:5402:8: (a2= '*' )
        // Xpath3.g:5402:8: a2= '*'
        {
        a2=(Token)match(input,15,FOLLOW_15_in_synpred93_Xpath35365); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred93_Xpath3

    // $ANTLR start synpred94_Xpath3
    public final void synpred94_Xpath3_fragment() throws RecognitionException {
        Token a3=null;

        // Xpath3.g:5418:8: (a3= '+' )
        // Xpath3.g:5418:8: a3= '+'
        {
        a3=(Token)match(input,16,FOLLOW_16_in_synpred94_Xpath35380); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred94_Xpath3

    // $ANTLR start synpred119_Xpath3
    public final void synpred119_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.OrExpr c3 =null;


        // Xpath3.g:7678:4: (c3= parse_org_emftext_language_xpath3_OrExpr )
        // Xpath3.g:7678:4: c3= parse_org_emftext_language_xpath3_OrExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_synpred119_Xpath37817);
        c3=parse_org_emftext_language_xpath3_OrExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred119_Xpath3

    // $ANTLR start synpred120_Xpath3
    public final void synpred120_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.AndExpr c4 =null;


        // Xpath3.g:7679:4: (c4= parse_org_emftext_language_xpath3_AndExpr )
        // Xpath3.g:7679:4: c4= parse_org_emftext_language_xpath3_AndExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AndExpr_in_synpred120_Xpath37827);
        c4=parse_org_emftext_language_xpath3_AndExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred120_Xpath3

    // $ANTLR start synpred121_Xpath3
    public final void synpred121_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.ComparisonExpr c5 =null;


        // Xpath3.g:7680:4: (c5= parse_org_emftext_language_xpath3_ComparisonExpr )
        // Xpath3.g:7680:4: c5= parse_org_emftext_language_xpath3_ComparisonExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ComparisonExpr_in_synpred121_Xpath37837);
        c5=parse_org_emftext_language_xpath3_ComparisonExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred121_Xpath3

    // $ANTLR start synpred122_Xpath3
    public final void synpred122_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.RangeExpr c6 =null;


        // Xpath3.g:7681:4: (c6= parse_org_emftext_language_xpath3_RangeExpr )
        // Xpath3.g:7681:4: c6= parse_org_emftext_language_xpath3_RangeExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_RangeExpr_in_synpred122_Xpath37847);
        c6=parse_org_emftext_language_xpath3_RangeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred122_Xpath3

    // $ANTLR start synpred123_Xpath3
    public final void synpred123_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.AdditiveExpr c7 =null;


        // Xpath3.g:7682:4: (c7= parse_org_emftext_language_xpath3_AdditiveExpr )
        // Xpath3.g:7682:4: c7= parse_org_emftext_language_xpath3_AdditiveExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AdditiveExpr_in_synpred123_Xpath37857);
        c7=parse_org_emftext_language_xpath3_AdditiveExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred123_Xpath3

    // $ANTLR start synpred124_Xpath3
    public final void synpred124_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.MultiplicativeExpr c8 =null;


        // Xpath3.g:7683:4: (c8= parse_org_emftext_language_xpath3_MultiplicativeExpr )
        // Xpath3.g:7683:4: c8= parse_org_emftext_language_xpath3_MultiplicativeExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_MultiplicativeExpr_in_synpred124_Xpath37867);
        c8=parse_org_emftext_language_xpath3_MultiplicativeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred124_Xpath3

    // $ANTLR start synpred125_Xpath3
    public final void synpred125_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.UnionExpr c9 =null;


        // Xpath3.g:7684:4: (c9= parse_org_emftext_language_xpath3_UnionExpr )
        // Xpath3.g:7684:4: c9= parse_org_emftext_language_xpath3_UnionExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_UnionExpr_in_synpred125_Xpath37877);
        c9=parse_org_emftext_language_xpath3_UnionExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred125_Xpath3

    // $ANTLR start synpred126_Xpath3
    public final void synpred126_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.IntersectExceptExpr c10 =null;


        // Xpath3.g:7685:4: (c10= parse_org_emftext_language_xpath3_IntersectExceptExpr )
        // Xpath3.g:7685:4: c10= parse_org_emftext_language_xpath3_IntersectExceptExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IntersectExceptExpr_in_synpred126_Xpath37887);
        c10=parse_org_emftext_language_xpath3_IntersectExceptExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred126_Xpath3

    // $ANTLR start synpred127_Xpath3
    public final void synpred127_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.InstanceofExpr c11 =null;


        // Xpath3.g:7686:4: (c11= parse_org_emftext_language_xpath3_InstanceofExpr )
        // Xpath3.g:7686:4: c11= parse_org_emftext_language_xpath3_InstanceofExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_InstanceofExpr_in_synpred127_Xpath37897);
        c11=parse_org_emftext_language_xpath3_InstanceofExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred127_Xpath3

    // $ANTLR start synpred128_Xpath3
    public final void synpred128_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.TreatExpr c12 =null;


        // Xpath3.g:7687:4: (c12= parse_org_emftext_language_xpath3_TreatExpr )
        // Xpath3.g:7687:4: c12= parse_org_emftext_language_xpath3_TreatExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_TreatExpr_in_synpred128_Xpath37907);
        c12=parse_org_emftext_language_xpath3_TreatExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred128_Xpath3

    // $ANTLR start synpred129_Xpath3
    public final void synpred129_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.CastableExpr c13 =null;


        // Xpath3.g:7688:4: (c13= parse_org_emftext_language_xpath3_CastableExpr )
        // Xpath3.g:7688:4: c13= parse_org_emftext_language_xpath3_CastableExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_CastableExpr_in_synpred129_Xpath37917);
        c13=parse_org_emftext_language_xpath3_CastableExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred129_Xpath3

    // $ANTLR start synpred130_Xpath3
    public final void synpred130_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.CastExpr c14 =null;


        // Xpath3.g:7689:4: (c14= parse_org_emftext_language_xpath3_CastExpr )
        // Xpath3.g:7689:4: c14= parse_org_emftext_language_xpath3_CastExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_CastExpr_in_synpred130_Xpath37927);
        c14=parse_org_emftext_language_xpath3_CastExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred130_Xpath3

    // $ANTLR start synpred131_Xpath3
    public final void synpred131_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.UnaryExpr c15 =null;


        // Xpath3.g:7690:4: (c15= parse_org_emftext_language_xpath3_UnaryExpr )
        // Xpath3.g:7690:4: c15= parse_org_emftext_language_xpath3_UnaryExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_UnaryExpr_in_synpred131_Xpath37937);
        c15=parse_org_emftext_language_xpath3_UnaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred131_Xpath3

    // $ANTLR start synpred132_Xpath3
    public final void synpred132_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.FilterExpr c16 =null;


        // Xpath3.g:7691:4: (c16= parse_org_emftext_language_xpath3_FilterExpr )
        // Xpath3.g:7691:4: c16= parse_org_emftext_language_xpath3_FilterExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_FilterExpr_in_synpred132_Xpath37947);
        c16=parse_org_emftext_language_xpath3_FilterExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred132_Xpath3

    // $ANTLR start synpred133_Xpath3
    public final void synpred133_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.FunctionCall c17 =null;


        // Xpath3.g:7692:4: (c17= parse_org_emftext_language_xpath3_FunctionCall )
        // Xpath3.g:7692:4: c17= parse_org_emftext_language_xpath3_FunctionCall
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_FunctionCall_in_synpred133_Xpath37957);
        c17=parse_org_emftext_language_xpath3_FunctionCall();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred133_Xpath3

    // $ANTLR start synpred134_Xpath3
    public final void synpred134_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.PathExpr c18 =null;


        // Xpath3.g:7693:4: (c18= parse_org_emftext_language_xpath3_PathExpr )
        // Xpath3.g:7693:4: c18= parse_org_emftext_language_xpath3_PathExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_PathExpr_in_synpred134_Xpath37967);
        c18=parse_org_emftext_language_xpath3_PathExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred134_Xpath3

    // $ANTLR start synpred135_Xpath3
    public final void synpred135_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.ChildStepExpr c19 =null;


        // Xpath3.g:7694:4: (c19= parse_org_emftext_language_xpath3_ChildStepExpr )
        // Xpath3.g:7694:4: c19= parse_org_emftext_language_xpath3_ChildStepExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ChildStepExpr_in_synpred135_Xpath37977);
        c19=parse_org_emftext_language_xpath3_ChildStepExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred135_Xpath3

    // $ANTLR start synpred136_Xpath3
    public final void synpred136_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.DescOrSelfStepExpr c20 =null;


        // Xpath3.g:7695:4: (c20= parse_org_emftext_language_xpath3_DescOrSelfStepExpr )
        // Xpath3.g:7695:4: c20= parse_org_emftext_language_xpath3_DescOrSelfStepExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DescOrSelfStepExpr_in_synpred136_Xpath37987);
        c20=parse_org_emftext_language_xpath3_DescOrSelfStepExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred136_Xpath3

    // $ANTLR start synpred137_Xpath3
    public final void synpred137_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.RootStepExpr c21 =null;


        // Xpath3.g:7696:4: (c21= parse_org_emftext_language_xpath3_RootStepExpr )
        // Xpath3.g:7696:4: c21= parse_org_emftext_language_xpath3_RootStepExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_RootStepExpr_in_synpred137_Xpath37997);
        c21=parse_org_emftext_language_xpath3_RootStepExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred137_Xpath3

    // $ANTLR start synpred138_Xpath3
    public final void synpred138_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.SelfStepExpr c22 =null;


        // Xpath3.g:7697:4: (c22= parse_org_emftext_language_xpath3_SelfStepExpr )
        // Xpath3.g:7697:4: c22= parse_org_emftext_language_xpath3_SelfStepExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_SelfStepExpr_in_synpred138_Xpath38007);
        c22=parse_org_emftext_language_xpath3_SelfStepExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred138_Xpath3

    // $ANTLR start synpred139_Xpath3
    public final void synpred139_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.GeneralForwardStep c23 =null;


        // Xpath3.g:7698:4: (c23= parse_org_emftext_language_xpath3_GeneralForwardStep )
        // Xpath3.g:7698:4: c23= parse_org_emftext_language_xpath3_GeneralForwardStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_GeneralForwardStep_in_synpred139_Xpath38017);
        c23=parse_org_emftext_language_xpath3_GeneralForwardStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred139_Xpath3

    // $ANTLR start synpred140_Xpath3
    public final void synpred140_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.AbbrevForwardStep c24 =null;


        // Xpath3.g:7699:4: (c24= parse_org_emftext_language_xpath3_AbbrevForwardStep )
        // Xpath3.g:7699:4: c24= parse_org_emftext_language_xpath3_AbbrevForwardStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AbbrevForwardStep_in_synpred140_Xpath38027);
        c24=parse_org_emftext_language_xpath3_AbbrevForwardStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred140_Xpath3

    // $ANTLR start synpred141_Xpath3
    public final void synpred141_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.GeneralReverseStep c25 =null;


        // Xpath3.g:7700:4: (c25= parse_org_emftext_language_xpath3_GeneralReverseStep )
        // Xpath3.g:7700:4: c25= parse_org_emftext_language_xpath3_GeneralReverseStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_GeneralReverseStep_in_synpred141_Xpath38037);
        c25=parse_org_emftext_language_xpath3_GeneralReverseStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred141_Xpath3

    // $ANTLR start synpred142_Xpath3
    public final void synpred142_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.AbbrevReverseStep c26 =null;


        // Xpath3.g:7701:4: (c26= parse_org_emftext_language_xpath3_AbbrevReverseStep )
        // Xpath3.g:7701:4: c26= parse_org_emftext_language_xpath3_AbbrevReverseStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AbbrevReverseStep_in_synpred142_Xpath38047);
        c26=parse_org_emftext_language_xpath3_AbbrevReverseStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred142_Xpath3

    // $ANTLR start synpred143_Xpath3
    public final void synpred143_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.VarRef c27 =null;


        // Xpath3.g:7702:4: (c27= parse_org_emftext_language_xpath3_VarRef )
        // Xpath3.g:7702:4: c27= parse_org_emftext_language_xpath3_VarRef
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_VarRef_in_synpred143_Xpath38057);
        c27=parse_org_emftext_language_xpath3_VarRef();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred143_Xpath3

    // $ANTLR start synpred144_Xpath3
    public final void synpred144_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.ParenthesizedExpr c28 =null;


        // Xpath3.g:7703:4: (c28= parse_org_emftext_language_xpath3_ParenthesizedExpr )
        // Xpath3.g:7703:4: c28= parse_org_emftext_language_xpath3_ParenthesizedExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ParenthesizedExpr_in_synpred144_Xpath38067);
        c28=parse_org_emftext_language_xpath3_ParenthesizedExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred144_Xpath3

    // $ANTLR start synpred145_Xpath3
    public final void synpred145_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.ContextItemExpr c29 =null;


        // Xpath3.g:7704:4: (c29= parse_org_emftext_language_xpath3_ContextItemExpr )
        // Xpath3.g:7704:4: c29= parse_org_emftext_language_xpath3_ContextItemExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ContextItemExpr_in_synpred145_Xpath38077);
        c29=parse_org_emftext_language_xpath3_ContextItemExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred145_Xpath3

    // $ANTLR start synpred146_Xpath3
    public final void synpred146_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.IntegerLiteral c30 =null;


        // Xpath3.g:7705:4: (c30= parse_org_emftext_language_xpath3_IntegerLiteral )
        // Xpath3.g:7705:4: c30= parse_org_emftext_language_xpath3_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IntegerLiteral_in_synpred146_Xpath38087);
        c30=parse_org_emftext_language_xpath3_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred146_Xpath3

    // $ANTLR start synpred147_Xpath3
    public final void synpred147_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.DecimalLiteral c31 =null;


        // Xpath3.g:7706:4: (c31= parse_org_emftext_language_xpath3_DecimalLiteral )
        // Xpath3.g:7706:4: c31= parse_org_emftext_language_xpath3_DecimalLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DecimalLiteral_in_synpred147_Xpath38097);
        c31=parse_org_emftext_language_xpath3_DecimalLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred147_Xpath3

    // $ANTLR start synpred148_Xpath3
    public final void synpred148_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.DoubleLiteral c32 =null;


        // Xpath3.g:7707:4: (c32= parse_org_emftext_language_xpath3_DoubleLiteral )
        // Xpath3.g:7707:4: c32= parse_org_emftext_language_xpath3_DoubleLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DoubleLiteral_in_synpred148_Xpath38107);
        c32=parse_org_emftext_language_xpath3_DoubleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred148_Xpath3

    // $ANTLR start synpred159_Xpath3
    public final void synpred159_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.FilterExpr c0 =null;


        // Xpath3.g:7748:2: (c0= parse_org_emftext_language_xpath3_FilterExpr )
        // Xpath3.g:7748:2: c0= parse_org_emftext_language_xpath3_FilterExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_FilterExpr_in_synpred159_Xpath38322);
        c0=parse_org_emftext_language_xpath3_FilterExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred159_Xpath3

    // $ANTLR start synpred160_Xpath3
    public final void synpred160_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.FunctionCall c1 =null;


        // Xpath3.g:7749:4: (c1= parse_org_emftext_language_xpath3_FunctionCall )
        // Xpath3.g:7749:4: c1= parse_org_emftext_language_xpath3_FunctionCall
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_FunctionCall_in_synpred160_Xpath38332);
        c1=parse_org_emftext_language_xpath3_FunctionCall();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred160_Xpath3

    // $ANTLR start synpred161_Xpath3
    public final void synpred161_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.ChildStepExpr c2 =null;


        // Xpath3.g:7750:4: (c2= parse_org_emftext_language_xpath3_ChildStepExpr )
        // Xpath3.g:7750:4: c2= parse_org_emftext_language_xpath3_ChildStepExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ChildStepExpr_in_synpred161_Xpath38342);
        c2=parse_org_emftext_language_xpath3_ChildStepExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred161_Xpath3

    // $ANTLR start synpred163_Xpath3
    public final void synpred163_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.RootStepExpr c4 =null;


        // Xpath3.g:7752:4: (c4= parse_org_emftext_language_xpath3_RootStepExpr )
        // Xpath3.g:7752:4: c4= parse_org_emftext_language_xpath3_RootStepExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_RootStepExpr_in_synpred163_Xpath38362);
        c4=parse_org_emftext_language_xpath3_RootStepExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred163_Xpath3

    // $ANTLR start synpred164_Xpath3
    public final void synpred164_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.SelfStepExpr c5 =null;


        // Xpath3.g:7753:4: (c5= parse_org_emftext_language_xpath3_SelfStepExpr )
        // Xpath3.g:7753:4: c5= parse_org_emftext_language_xpath3_SelfStepExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_SelfStepExpr_in_synpred164_Xpath38372);
        c5=parse_org_emftext_language_xpath3_SelfStepExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred164_Xpath3

    // $ANTLR start synpred165_Xpath3
    public final void synpred165_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.GeneralForwardStep c6 =null;


        // Xpath3.g:7754:4: (c6= parse_org_emftext_language_xpath3_GeneralForwardStep )
        // Xpath3.g:7754:4: c6= parse_org_emftext_language_xpath3_GeneralForwardStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_GeneralForwardStep_in_synpred165_Xpath38382);
        c6=parse_org_emftext_language_xpath3_GeneralForwardStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred165_Xpath3

    // $ANTLR start synpred166_Xpath3
    public final void synpred166_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.AbbrevForwardStep c7 =null;


        // Xpath3.g:7755:4: (c7= parse_org_emftext_language_xpath3_AbbrevForwardStep )
        // Xpath3.g:7755:4: c7= parse_org_emftext_language_xpath3_AbbrevForwardStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AbbrevForwardStep_in_synpred166_Xpath38392);
        c7=parse_org_emftext_language_xpath3_AbbrevForwardStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred166_Xpath3

    // $ANTLR start synpred167_Xpath3
    public final void synpred167_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.GeneralReverseStep c8 =null;


        // Xpath3.g:7756:4: (c8= parse_org_emftext_language_xpath3_GeneralReverseStep )
        // Xpath3.g:7756:4: c8= parse_org_emftext_language_xpath3_GeneralReverseStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_GeneralReverseStep_in_synpred167_Xpath38402);
        c8=parse_org_emftext_language_xpath3_GeneralReverseStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred167_Xpath3

    // $ANTLR start synpred168_Xpath3
    public final void synpred168_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.AbbrevReverseStep c9 =null;


        // Xpath3.g:7757:4: (c9= parse_org_emftext_language_xpath3_AbbrevReverseStep )
        // Xpath3.g:7757:4: c9= parse_org_emftext_language_xpath3_AbbrevReverseStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AbbrevReverseStep_in_synpred168_Xpath38412);
        c9=parse_org_emftext_language_xpath3_AbbrevReverseStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred168_Xpath3

    // $ANTLR start synpred169_Xpath3
    public final void synpred169_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.VarRef c10 =null;


        // Xpath3.g:7758:4: (c10= parse_org_emftext_language_xpath3_VarRef )
        // Xpath3.g:7758:4: c10= parse_org_emftext_language_xpath3_VarRef
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_VarRef_in_synpred169_Xpath38422);
        c10=parse_org_emftext_language_xpath3_VarRef();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred169_Xpath3

    // $ANTLR start synpred170_Xpath3
    public final void synpred170_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.ParenthesizedExpr c11 =null;


        // Xpath3.g:7759:4: (c11= parse_org_emftext_language_xpath3_ParenthesizedExpr )
        // Xpath3.g:7759:4: c11= parse_org_emftext_language_xpath3_ParenthesizedExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ParenthesizedExpr_in_synpred170_Xpath38432);
        c11=parse_org_emftext_language_xpath3_ParenthesizedExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred170_Xpath3

    // $ANTLR start synpred171_Xpath3
    public final void synpred171_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.ContextItemExpr c12 =null;


        // Xpath3.g:7760:4: (c12= parse_org_emftext_language_xpath3_ContextItemExpr )
        // Xpath3.g:7760:4: c12= parse_org_emftext_language_xpath3_ContextItemExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ContextItemExpr_in_synpred171_Xpath38442);
        c12=parse_org_emftext_language_xpath3_ContextItemExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred171_Xpath3

    // $ANTLR start synpred172_Xpath3
    public final void synpred172_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.IntegerLiteral c13 =null;


        // Xpath3.g:7761:4: (c13= parse_org_emftext_language_xpath3_IntegerLiteral )
        // Xpath3.g:7761:4: c13= parse_org_emftext_language_xpath3_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IntegerLiteral_in_synpred172_Xpath38452);
        c13=parse_org_emftext_language_xpath3_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred172_Xpath3

    // $ANTLR start synpred173_Xpath3
    public final void synpred173_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.DecimalLiteral c14 =null;


        // Xpath3.g:7762:4: (c14= parse_org_emftext_language_xpath3_DecimalLiteral )
        // Xpath3.g:7762:4: c14= parse_org_emftext_language_xpath3_DecimalLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DecimalLiteral_in_synpred173_Xpath38462);
        c14=parse_org_emftext_language_xpath3_DecimalLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred173_Xpath3

    // $ANTLR start synpred174_Xpath3
    public final void synpred174_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.DoubleLiteral c15 =null;


        // Xpath3.g:7763:4: (c15= parse_org_emftext_language_xpath3_DoubleLiteral )
        // Xpath3.g:7763:4: c15= parse_org_emftext_language_xpath3_DoubleLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DoubleLiteral_in_synpred174_Xpath38472);
        c15=parse_org_emftext_language_xpath3_DoubleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred174_Xpath3

    // $ANTLR start synpred179_Xpath3
    public final void synpred179_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.FilterExpr c0 =null;


        // Xpath3.g:7780:2: (c0= parse_org_emftext_language_xpath3_FilterExpr )
        // Xpath3.g:7780:2: c0= parse_org_emftext_language_xpath3_FilterExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_FilterExpr_in_synpred179_Xpath38564);
        c0=parse_org_emftext_language_xpath3_FilterExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred179_Xpath3

    // $ANTLR start synpred180_Xpath3
    public final void synpred180_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.FunctionCall c1 =null;


        // Xpath3.g:7781:4: (c1= parse_org_emftext_language_xpath3_FunctionCall )
        // Xpath3.g:7781:4: c1= parse_org_emftext_language_xpath3_FunctionCall
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_FunctionCall_in_synpred180_Xpath38574);
        c1=parse_org_emftext_language_xpath3_FunctionCall();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred180_Xpath3

    // $ANTLR start synpred181_Xpath3
    public final void synpred181_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.GeneralForwardStep c2 =null;


        // Xpath3.g:7782:4: (c2= parse_org_emftext_language_xpath3_GeneralForwardStep )
        // Xpath3.g:7782:4: c2= parse_org_emftext_language_xpath3_GeneralForwardStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_GeneralForwardStep_in_synpred181_Xpath38584);
        c2=parse_org_emftext_language_xpath3_GeneralForwardStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred181_Xpath3

    // $ANTLR start synpred182_Xpath3
    public final void synpred182_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.AbbrevForwardStep c3 =null;


        // Xpath3.g:7783:4: (c3= parse_org_emftext_language_xpath3_AbbrevForwardStep )
        // Xpath3.g:7783:4: c3= parse_org_emftext_language_xpath3_AbbrevForwardStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AbbrevForwardStep_in_synpred182_Xpath38594);
        c3=parse_org_emftext_language_xpath3_AbbrevForwardStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred182_Xpath3

    // $ANTLR start synpred185_Xpath3
    public final void synpred185_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.VarRef c6 =null;


        // Xpath3.g:7786:4: (c6= parse_org_emftext_language_xpath3_VarRef )
        // Xpath3.g:7786:4: c6= parse_org_emftext_language_xpath3_VarRef
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_VarRef_in_synpred185_Xpath38624);
        c6=parse_org_emftext_language_xpath3_VarRef();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred185_Xpath3

    // $ANTLR start synpred186_Xpath3
    public final void synpred186_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.ParenthesizedExpr c7 =null;


        // Xpath3.g:7787:4: (c7= parse_org_emftext_language_xpath3_ParenthesizedExpr )
        // Xpath3.g:7787:4: c7= parse_org_emftext_language_xpath3_ParenthesizedExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ParenthesizedExpr_in_synpred186_Xpath38634);
        c7=parse_org_emftext_language_xpath3_ParenthesizedExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred186_Xpath3

    // $ANTLR start synpred187_Xpath3
    public final void synpred187_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.ContextItemExpr c8 =null;


        // Xpath3.g:7788:4: (c8= parse_org_emftext_language_xpath3_ContextItemExpr )
        // Xpath3.g:7788:4: c8= parse_org_emftext_language_xpath3_ContextItemExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ContextItemExpr_in_synpred187_Xpath38644);
        c8=parse_org_emftext_language_xpath3_ContextItemExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred187_Xpath3

    // $ANTLR start synpred188_Xpath3
    public final void synpred188_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.IntegerLiteral c9 =null;


        // Xpath3.g:7789:4: (c9= parse_org_emftext_language_xpath3_IntegerLiteral )
        // Xpath3.g:7789:4: c9= parse_org_emftext_language_xpath3_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_IntegerLiteral_in_synpred188_Xpath38654);
        c9=parse_org_emftext_language_xpath3_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred188_Xpath3

    // $ANTLR start synpred189_Xpath3
    public final void synpred189_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.DecimalLiteral c10 =null;


        // Xpath3.g:7790:4: (c10= parse_org_emftext_language_xpath3_DecimalLiteral )
        // Xpath3.g:7790:4: c10= parse_org_emftext_language_xpath3_DecimalLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DecimalLiteral_in_synpred189_Xpath38664);
        c10=parse_org_emftext_language_xpath3_DecimalLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred189_Xpath3

    // $ANTLR start synpred190_Xpath3
    public final void synpred190_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.DoubleLiteral c11 =null;


        // Xpath3.g:7791:4: (c11= parse_org_emftext_language_xpath3_DoubleLiteral )
        // Xpath3.g:7791:4: c11= parse_org_emftext_language_xpath3_DoubleLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_DoubleLiteral_in_synpred190_Xpath38674);
        c11=parse_org_emftext_language_xpath3_DoubleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred190_Xpath3

    // $ANTLR start synpred199_Xpath3
    public final void synpred199_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.PITest c4 =null;


        // Xpath3.g:7812:4: (c4= parse_org_emftext_language_xpath3_PITest )
        // Xpath3.g:7812:4: c4= parse_org_emftext_language_xpath3_PITest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_PITest_in_synpred199_Xpath38806);
        c4=parse_org_emftext_language_xpath3_PITest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred199_Xpath3

    // $ANTLR start synpred200_Xpath3
    public final void synpred200_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.NCNamePITest c5 =null;


        // Xpath3.g:7813:4: (c5= parse_org_emftext_language_xpath3_NCNamePITest )
        // Xpath3.g:7813:4: c5= parse_org_emftext_language_xpath3_NCNamePITest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_NCNamePITest_in_synpred200_Xpath38816);
        c5=parse_org_emftext_language_xpath3_NCNamePITest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred200_Xpath3

    // $ANTLR start synpred201_Xpath3
    public final void synpred201_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.StringLiteralPITest c6 =null;


        // Xpath3.g:7814:4: (c6= parse_org_emftext_language_xpath3_StringLiteralPITest )
        // Xpath3.g:7814:4: c6= parse_org_emftext_language_xpath3_StringLiteralPITest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_StringLiteralPITest_in_synpred201_Xpath38826);
        c6=parse_org_emftext_language_xpath3_StringLiteralPITest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred201_Xpath3

    // $ANTLR start synpred202_Xpath3
    public final void synpred202_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.AttributeTest c7 =null;


        // Xpath3.g:7815:4: (c7= parse_org_emftext_language_xpath3_AttributeTest )
        // Xpath3.g:7815:4: c7= parse_org_emftext_language_xpath3_AttributeTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_AttributeTest_in_synpred202_Xpath38836);
        c7=parse_org_emftext_language_xpath3_AttributeTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred202_Xpath3

    // $ANTLR start synpred203_Xpath3
    public final void synpred203_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.WildcardAttributeTest c8 =null;


        // Xpath3.g:7816:4: (c8= parse_org_emftext_language_xpath3_WildcardAttributeTest )
        // Xpath3.g:7816:4: c8= parse_org_emftext_language_xpath3_WildcardAttributeTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_WildcardAttributeTest_in_synpred203_Xpath38846);
        c8=parse_org_emftext_language_xpath3_WildcardAttributeTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred203_Xpath3

    // $ANTLR start synpred204_Xpath3
    public final void synpred204_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.NameAttributeTest c9 =null;


        // Xpath3.g:7817:4: (c9= parse_org_emftext_language_xpath3_NameAttributeTest )
        // Xpath3.g:7817:4: c9= parse_org_emftext_language_xpath3_NameAttributeTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_NameAttributeTest_in_synpred204_Xpath38856);
        c9=parse_org_emftext_language_xpath3_NameAttributeTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred204_Xpath3

    // $ANTLR start synpred206_Xpath3
    public final void synpred206_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.ElementTest c11 =null;


        // Xpath3.g:7819:4: (c11= parse_org_emftext_language_xpath3_ElementTest )
        // Xpath3.g:7819:4: c11= parse_org_emftext_language_xpath3_ElementTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_ElementTest_in_synpred206_Xpath38876);
        c11=parse_org_emftext_language_xpath3_ElementTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred206_Xpath3

    // $ANTLR start synpred207_Xpath3
    public final void synpred207_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.WildcardElementTest c12 =null;


        // Xpath3.g:7820:4: (c12= parse_org_emftext_language_xpath3_WildcardElementTest )
        // Xpath3.g:7820:4: c12= parse_org_emftext_language_xpath3_WildcardElementTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_WildcardElementTest_in_synpred207_Xpath38886);
        c12=parse_org_emftext_language_xpath3_WildcardElementTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred207_Xpath3

    // $ANTLR start synpred208_Xpath3
    public final void synpred208_Xpath3_fragment() throws RecognitionException {
        org.emftext.language.xpath3.NameElementTest c13 =null;


        // Xpath3.g:7821:4: (c13= parse_org_emftext_language_xpath3_NameElementTest )
        // Xpath3.g:7821:4: c13= parse_org_emftext_language_xpath3_NameElementTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath3_NameElementTest_in_synpred208_Xpath38896);
        c13=parse_org_emftext_language_xpath3_NameElementTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred208_Xpath3

    // Delegated rules

    public final boolean synpred187_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred187_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred186_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred186_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred200_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred200_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred169_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred169_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred201_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred201_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred202_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred202_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred165_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred165_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred167_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred167_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred164_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred164_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred207_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred207_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred163_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred180_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred180_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred206_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred206_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred208_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred208_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred203_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred203_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred182_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred182_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred204_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred204_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred181_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred181_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred188_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred188_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred189_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred189_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred185_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred185_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred161_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred161_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred145_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred145_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred179_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred179_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred159_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred159_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred170_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred170_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred171_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred171_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred172_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred172_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred173_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred173_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred174_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred174_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred199_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred199_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred190_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred190_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred160_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred160_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred148_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred146_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_Xpath3() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_Xpath3_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA72 dfa72 = new DFA72(this);
    static final String DFA72_eotS =
        "\111\uffff";
    static final String DFA72_eofS =
        "\111\uffff";
    static final String DFA72_minS =
        "\1\4\4\uffff\45\0\37\uffff";
    static final String DFA72_maxS =
        "\1\125\4\uffff\45\0\37\uffff";
    static final String DFA72_acceptS =
        "\1\uffff\1\1\1\2\1\uffff\1\3\45\uffff\1\4\1\5\1\6\1\7\1\10\1\11"+
        "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\27\1\31\1\34"+
        "\1\35\1\36\1\37\1\40\1\41\1\42\1\24\1\26\1\25\1\30\1\32\1\33";
    static final String DFA72_specialS =
        "\5\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14"+
        "\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31"+
        "\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\37\uffff}>";
    static final String[] DFA72_transitionS = {
            "\1\15\1\16\1\14\1\10\1\7\1\17\2\uffff\1\11\1\12\1\uffff\1\43"+
            "\1\5\1\uffff\1\6\1\13\1\51\1\20\1\21\12\uffff\1\32\2\uffff\1"+
            "\45\1\50\2\uffff\1\24\2\uffff\1\22\1\36\1\23\1\26\1\uffff\1"+
            "\34\1\41\3\uffff\1\2\1\uffff\1\30\1\27\1\1\3\uffff\1\4\10\uffff"+
            "\1\31\1\uffff\1\33\2\uffff\1\44\1\47\1\46\1\37\2\uffff\1\40"+
            "\1\42\1\25\1\2\1\35",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA72_eot = DFA.unpackEncodedString(DFA72_eotS);
    static final short[] DFA72_eof = DFA.unpackEncodedString(DFA72_eofS);
    static final char[] DFA72_min = DFA.unpackEncodedStringToUnsignedChars(DFA72_minS);
    static final char[] DFA72_max = DFA.unpackEncodedStringToUnsignedChars(DFA72_maxS);
    static final short[] DFA72_accept = DFA.unpackEncodedString(DFA72_acceptS);
    static final short[] DFA72_special = DFA.unpackEncodedString(DFA72_specialS);
    static final short[][] DFA72_transition;

    static {
        int numStates = DFA72_transitionS.length;
        DFA72_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA72_transition[i] = DFA.unpackEncodedString(DFA72_transitionS[i]);
        }
    }

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = DFA72_eot;
            this.eof = DFA72_eof;
            this.min = DFA72_min;
            this.max = DFA72_max;
            this.accept = DFA72_accept;
            this.special = DFA72_special;
            this.transition = DFA72_transition;
        }
        public String getDescription() {
            return "7673:1: parse_org_emftext_language_xpath3_ExprSingle returns [org.emftext.language.xpath3.ExprSingle element = null] : (c0= parse_org_emftext_language_xpath3_ForExpr |c1= parse_org_emftext_language_xpath3_QuantifiedExpr |c2= parse_org_emftext_language_xpath3_IfExpr |c3= parse_org_emftext_language_xpath3_OrExpr |c4= parse_org_emftext_language_xpath3_AndExpr |c5= parse_org_emftext_language_xpath3_ComparisonExpr |c6= parse_org_emftext_language_xpath3_RangeExpr |c7= parse_org_emftext_language_xpath3_AdditiveExpr |c8= parse_org_emftext_language_xpath3_MultiplicativeExpr |c9= parse_org_emftext_language_xpath3_UnionExpr |c10= parse_org_emftext_language_xpath3_IntersectExceptExpr |c11= parse_org_emftext_language_xpath3_InstanceofExpr |c12= parse_org_emftext_language_xpath3_TreatExpr |c13= parse_org_emftext_language_xpath3_CastableExpr |c14= parse_org_emftext_language_xpath3_CastExpr |c15= parse_org_emftext_language_xpath3_UnaryExpr |c16= parse_org_emftext_language_xpath3_FilterExpr |c17= parse_org_emftext_language_xpath3_FunctionCall |c18= parse_org_emftext_language_xpath3_PathExpr |c19= parse_org_emftext_language_xpath3_ChildStepExpr |c20= parse_org_emftext_language_xpath3_DescOrSelfStepExpr |c21= parse_org_emftext_language_xpath3_RootStepExpr |c22= parse_org_emftext_language_xpath3_SelfStepExpr |c23= parse_org_emftext_language_xpath3_GeneralForwardStep |c24= parse_org_emftext_language_xpath3_AbbrevForwardStep |c25= parse_org_emftext_language_xpath3_GeneralReverseStep |c26= parse_org_emftext_language_xpath3_AbbrevReverseStep |c27= parse_org_emftext_language_xpath3_VarRef |c28= parse_org_emftext_language_xpath3_ParenthesizedExpr |c29= parse_org_emftext_language_xpath3_ContextItemExpr |c30= parse_org_emftext_language_xpath3_IntegerLiteral |c31= parse_org_emftext_language_xpath3_DecimalLiteral |c32= parse_org_emftext_language_xpath3_DoubleLiteral |c33= parse_org_emftext_language_xpath3_StringLiteral );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA72_5 = input.LA(1);

                         
                        int index72_5 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                         
                        input.seek(index72_5);

                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA72_6 = input.LA(1);

                         
                        int index72_6 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                         
                        input.seek(index72_6);

                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA72_7 = input.LA(1);

                         
                        int index72_7 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred132_Xpath3()) ) {s = 55;}

                        else if ( (synpred133_Xpath3()) ) {s = 56;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred140_Xpath3()) ) {s = 59;}

                         
                        input.seek(index72_7);

                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA72_8 = input.LA(1);

                         
                        int index72_8 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred132_Xpath3()) ) {s = 55;}

                        else if ( (synpred133_Xpath3()) ) {s = 56;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred140_Xpath3()) ) {s = 59;}

                         
                        input.seek(index72_8);

                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA72_9 = input.LA(1);

                         
                        int index72_9 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred132_Xpath3()) ) {s = 55;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred143_Xpath3()) ) {s = 60;}

                         
                        input.seek(index72_9);

                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA72_10 = input.LA(1);

                         
                        int index72_10 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred132_Xpath3()) ) {s = 55;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred144_Xpath3()) ) {s = 61;}

                         
                        input.seek(index72_10);

                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA72_11 = input.LA(1);

                         
                        int index72_11 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred132_Xpath3()) ) {s = 55;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred145_Xpath3()) ) {s = 62;}

                         
                        input.seek(index72_11);

                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA72_12 = input.LA(1);

                         
                        int index72_12 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred132_Xpath3()) ) {s = 55;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred146_Xpath3()) ) {s = 63;}

                         
                        input.seek(index72_12);

                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA72_13 = input.LA(1);

                         
                        int index72_13 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred132_Xpath3()) ) {s = 55;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred147_Xpath3()) ) {s = 64;}

                         
                        input.seek(index72_13);

                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA72_14 = input.LA(1);

                         
                        int index72_14 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred132_Xpath3()) ) {s = 55;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred148_Xpath3()) ) {s = 65;}

                         
                        input.seek(index72_14);

                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA72_15 = input.LA(1);

                         
                        int index72_15 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred132_Xpath3()) ) {s = 55;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index72_15);

                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA72_16 = input.LA(1);

                         
                        int index72_16 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred135_Xpath3()) ) {s = 67;}

                        else if ( (synpred137_Xpath3()) ) {s = 68;}

                         
                        input.seek(index72_16);

                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA72_17 = input.LA(1);

                         
                        int index72_17 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred136_Xpath3()) ) {s = 69;}

                         
                        input.seek(index72_17);

                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA72_18 = input.LA(1);

                         
                        int index72_18 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred139_Xpath3()) ) {s = 70;}

                         
                        input.seek(index72_18);

                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA72_19 = input.LA(1);

                         
                        int index72_19 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred139_Xpath3()) ) {s = 70;}

                         
                        input.seek(index72_19);

                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA72_20 = input.LA(1);

                         
                        int index72_20 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred139_Xpath3()) ) {s = 70;}

                        else if ( (synpred140_Xpath3()) ) {s = 59;}

                         
                        input.seek(index72_20);

                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA72_21 = input.LA(1);

                         
                        int index72_21 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred139_Xpath3()) ) {s = 70;}

                         
                        input.seek(index72_21);

                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA72_22 = input.LA(1);

                         
                        int index72_22 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred139_Xpath3()) ) {s = 70;}

                         
                        input.seek(index72_22);

                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA72_23 = input.LA(1);

                         
                        int index72_23 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred139_Xpath3()) ) {s = 70;}

                         
                        input.seek(index72_23);

                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA72_24 = input.LA(1);

                         
                        int index72_24 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred139_Xpath3()) ) {s = 70;}

                         
                        input.seek(index72_24);

                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA72_25 = input.LA(1);

                         
                        int index72_25 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred139_Xpath3()) ) {s = 70;}

                         
                        input.seek(index72_25);

                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA72_26 = input.LA(1);

                         
                        int index72_26 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred140_Xpath3()) ) {s = 59;}

                         
                        input.seek(index72_26);

                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA72_27 = input.LA(1);

                         
                        int index72_27 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred140_Xpath3()) ) {s = 59;}

                         
                        input.seek(index72_27);

                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA72_28 = input.LA(1);

                         
                        int index72_28 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred140_Xpath3()) ) {s = 59;}

                         
                        input.seek(index72_28);

                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA72_29 = input.LA(1);

                         
                        int index72_29 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred140_Xpath3()) ) {s = 59;}

                         
                        input.seek(index72_29);

                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA72_30 = input.LA(1);

                         
                        int index72_30 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred140_Xpath3()) ) {s = 59;}

                         
                        input.seek(index72_30);

                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA72_31 = input.LA(1);

                         
                        int index72_31 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred140_Xpath3()) ) {s = 59;}

                         
                        input.seek(index72_31);

                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA72_32 = input.LA(1);

                         
                        int index72_32 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred140_Xpath3()) ) {s = 59;}

                         
                        input.seek(index72_32);

                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA72_33 = input.LA(1);

                         
                        int index72_33 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred140_Xpath3()) ) {s = 59;}

                         
                        input.seek(index72_33);

                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA72_34 = input.LA(1);

                         
                        int index72_34 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred140_Xpath3()) ) {s = 59;}

                         
                        input.seek(index72_34);

                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA72_35 = input.LA(1);

                         
                        int index72_35 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred140_Xpath3()) ) {s = 59;}

                         
                        input.seek(index72_35);

                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA72_36 = input.LA(1);

                         
                        int index72_36 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred141_Xpath3()) ) {s = 71;}

                         
                        input.seek(index72_36);

                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA72_37 = input.LA(1);

                         
                        int index72_37 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred141_Xpath3()) ) {s = 71;}

                         
                        input.seek(index72_37);

                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA72_38 = input.LA(1);

                         
                        int index72_38 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred141_Xpath3()) ) {s = 71;}

                         
                        input.seek(index72_38);

                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA72_39 = input.LA(1);

                         
                        int index72_39 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred141_Xpath3()) ) {s = 71;}

                         
                        input.seek(index72_39);

                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA72_40 = input.LA(1);

                         
                        int index72_40 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred141_Xpath3()) ) {s = 71;}

                         
                        input.seek(index72_40);

                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA72_41 = input.LA(1);

                         
                        int index72_41 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath3()) ) {s = 42;}

                        else if ( (synpred120_Xpath3()) ) {s = 43;}

                        else if ( (synpred121_Xpath3()) ) {s = 44;}

                        else if ( (synpred122_Xpath3()) ) {s = 45;}

                        else if ( (synpred123_Xpath3()) ) {s = 46;}

                        else if ( (synpred124_Xpath3()) ) {s = 47;}

                        else if ( (synpred125_Xpath3()) ) {s = 48;}

                        else if ( (synpred126_Xpath3()) ) {s = 49;}

                        else if ( (synpred127_Xpath3()) ) {s = 50;}

                        else if ( (synpred128_Xpath3()) ) {s = 51;}

                        else if ( (synpred129_Xpath3()) ) {s = 52;}

                        else if ( (synpred130_Xpath3()) ) {s = 53;}

                        else if ( (synpred131_Xpath3()) ) {s = 54;}

                        else if ( (synpred134_Xpath3()) ) {s = 57;}

                        else if ( (synpred138_Xpath3()) ) {s = 58;}

                        else if ( (synpred142_Xpath3()) ) {s = 72;}

                         
                        input.seek(index72_41);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 72, _s, input);
            error(nvae);
            throw nvae;
        }

    }
 

    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_Expr_in_start82 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_start89 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_Expr119 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_Expr133 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_Expr147 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_Expr161 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath3_Expr188 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_Expr214 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_Expr234 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_Expr254 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_Expr274 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_57_in_parse_org_emftext_language_xpath3_ForExpr330 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_Iterator_in_parse_org_emftext_language_xpath3_ForExpr348 = new BitSet(new long[]{0x0000000000020000L,0x0000000000008000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath3_ForExpr375 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_Iterator_in_parse_org_emftext_language_xpath3_ForExpr401 = new BitSet(new long[]{0x0000000000020000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_parse_org_emftext_language_xpath3_ForExpr442 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ExprSingle_in_parse_org_emftext_language_xpath3_ForExpr460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_parse_org_emftext_language_xpath3_QuantifiedExpr502 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_53_in_parse_org_emftext_language_xpath3_QuantifiedExpr517 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_Iterator_in_parse_org_emftext_language_xpath3_QuantifiedExpr542 = new BitSet(new long[]{0x0000000000020000L,0x0000000000010000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath3_QuantifiedExpr569 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_Iterator_in_parse_org_emftext_language_xpath3_QuantifiedExpr595 = new BitSet(new long[]{0x0000000000020000L,0x0000000000010000L});
    public static final BitSet FOLLOW_80_in_parse_org_emftext_language_xpath3_QuantifiedExpr636 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_QuantifiedExpr654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_QuantifiedExpr668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_QuantifiedExpr682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_QuantifiedExpr696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_12_in_parse_org_emftext_language_xpath3_Iterator729 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_Iterator752 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_Iterator790 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_62_in_parse_org_emftext_language_xpath3_Iterator824 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_Iterator842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_Iterator856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_Iterator870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_Iterator884 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_parse_org_emftext_language_xpath3_IfExpr917 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_IfExpr931 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_Expr_in_parse_org_emftext_language_xpath3_IfExpr949 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_IfExpr963 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_IfExpr977 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_IfExpr991 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_IfExpr1005 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_IfExpr1023 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_parse_org_emftext_language_xpath3_IfExpr1037 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_IfExpr1055 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_IfExpr1069 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_IfExpr1083 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_IfExpr1097 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_parse_org_emftext_language_xpath3_IfExpr1115 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_IfExpr1133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_IfExpr1147 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_IfExpr1161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_IfExpr1175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AndExpr_in_parse_org_emftext_language_xpath3_OrExpr1212 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_parse_org_emftext_language_xpath3_OrExpr1239 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AndExpr_in_parse_org_emftext_language_xpath3_OrExpr1265 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ComparisonExpr_in_parse_org_emftext_language_xpath3_AndExpr1325 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_38_in_parse_org_emftext_language_xpath3_AndExpr1352 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ComparisonExpr_in_parse_org_emftext_language_xpath3_AndExpr1378 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_RangeExpr_in_parse_org_emftext_language_xpath3_ComparisonExpr1438 = new BitSet(new long[]{0x0C100000FE000802L,0x000000000000009AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_Comp_in_parse_org_emftext_language_xpath3_ComparisonExpr1471 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_RangeExpr_in_parse_org_emftext_language_xpath3_ComparisonExpr1505 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AdditiveExpr_in_parse_org_emftext_language_xpath3_RangeExpr1565 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
    public static final BitSet FOLLOW_87_in_parse_org_emftext_language_xpath3_RangeExpr1592 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AdditiveExpr_in_parse_org_emftext_language_xpath3_RangeExpr1618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_parse_org_emftext_language_xpath3_GeneralComp1683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_11_in_parse_org_emftext_language_xpath3_GeneralComp1698 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_parse_org_emftext_language_xpath3_GeneralComp1713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_parse_org_emftext_language_xpath3_GeneralComp1728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_parse_org_emftext_language_xpath3_GeneralComp1743 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_parse_org_emftext_language_xpath3_GeneralComp1758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_parse_org_emftext_language_xpath3_ValueComp1803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_parse_org_emftext_language_xpath3_ValueComp1818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_parse_org_emftext_language_xpath3_ValueComp1833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_parse_org_emftext_language_xpath3_ValueComp1848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_parse_org_emftext_language_xpath3_ValueComp1863 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_parse_org_emftext_language_xpath3_ValueComp1878 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_parse_org_emftext_language_xpath3_NodeComp1923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_parse_org_emftext_language_xpath3_NodeComp1938 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_parse_org_emftext_language_xpath3_NodeComp1953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_MultiplicativeExpr_in_parse_org_emftext_language_xpath3_AdditiveExpr1993 = new BitSet(new long[]{0x0000000000050002L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath3_AdditiveExpr2033 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_18_in_parse_org_emftext_language_xpath3_AdditiveExpr2052 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_MultiplicativeExpr_in_parse_org_emftext_language_xpath3_AdditiveExpr2089 = new BitSet(new long[]{0x0000000000050002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_UnionExpr_in_parse_org_emftext_language_xpath3_MultiplicativeExpr2149 = new BitSet(new long[]{0x1000800000008002L,0x0000000000000020L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath3_MultiplicativeExpr2189 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_47_in_parse_org_emftext_language_xpath3_MultiplicativeExpr2208 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_60_in_parse_org_emftext_language_xpath3_MultiplicativeExpr2227 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_69_in_parse_org_emftext_language_xpath3_MultiplicativeExpr2246 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_UnionExpr_in_parse_org_emftext_language_xpath3_MultiplicativeExpr2283 = new BitSet(new long[]{0x1000800000008002L,0x0000000000000020L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IntersectExceptExpr_in_parse_org_emftext_language_xpath3_UnionExpr2343 = new BitSet(new long[]{0x0000000000000002L,0x0000000006000000L});
    public static final BitSet FOLLOW_89_in_parse_org_emftext_language_xpath3_UnionExpr2383 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_90_in_parse_org_emftext_language_xpath3_UnionExpr2402 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IntersectExceptExpr_in_parse_org_emftext_language_xpath3_UnionExpr2439 = new BitSet(new long[]{0x0000000000000002L,0x0000000006000000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_InstanceofExpr_in_parse_org_emftext_language_xpath3_IntersectExceptExpr2499 = new BitSet(new long[]{0x0040000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_64_in_parse_org_emftext_language_xpath3_IntersectExceptExpr2539 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_54_in_parse_org_emftext_language_xpath3_IntersectExceptExpr2558 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_InstanceofExpr_in_parse_org_emftext_language_xpath3_IntersectExceptExpr2595 = new BitSet(new long[]{0x0040000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_TreatExpr_in_parse_org_emftext_language_xpath3_InstanceofExpr2655 = new BitSet(new long[]{0x8000000000000002L});
    public static final BitSet FOLLOW_63_in_parse_org_emftext_language_xpath3_InstanceofExpr2682 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_parse_org_emftext_language_xpath3_InstanceofExpr2702 = new BitSet(new long[]{0x000B110000000180L,0x0000000000264104L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_SequenceType_in_parse_org_emftext_language_xpath3_InstanceofExpr2728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_CastableExpr_in_parse_org_emftext_language_xpath3_TreatExpr2788 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_parse_org_emftext_language_xpath3_TreatExpr2815 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_parse_org_emftext_language_xpath3_TreatExpr2835 = new BitSet(new long[]{0x000B110000000180L,0x0000000000264104L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_SequenceType_in_parse_org_emftext_language_xpath3_TreatExpr2861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_CastExpr_in_parse_org_emftext_language_xpath3_CastableExpr2921 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_42_in_parse_org_emftext_language_xpath3_CastableExpr2948 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_parse_org_emftext_language_xpath3_CastableExpr2968 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_SingleType_in_parse_org_emftext_language_xpath3_CastableExpr2994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_UnaryExpr_in_parse_org_emftext_language_xpath3_CastExpr3054 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_41_in_parse_org_emftext_language_xpath3_CastExpr3081 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_parse_org_emftext_language_xpath3_CastExpr3101 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_SingleType_in_parse_org_emftext_language_xpath3_CastExpr3127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath3_UnaryExpr3198 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_18_in_parse_org_emftext_language_xpath3_UnaryExpr3215 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ValueExpr_in_parse_org_emftext_language_xpath3_UnaryExpr3248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_PrimaryExpr_in_parse_org_emftext_language_xpath3_FilterExpr3285 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_Predicate_in_parse_org_emftext_language_xpath3_FilterExpr3312 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_FunctionCall3362 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_FunctionCall3400 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_FunctionCall3434 = new BitSet(new long[]{0x23A37932007DF3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_FunctionCall3463 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_FunctionCall3483 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_FunctionCall3503 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_FunctionCall3523 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath3_FunctionCall3564 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_FunctionCall3598 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_FunctionCall3624 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_FunctionCall3650 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_FunctionCall3676 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_FunctionCall3750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_PathExprChild_in_parse_org_emftext_language_xpath3_PathExpr3783 = new BitSet(new long[]{0x0000000000600002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ChildStepExpr_in_parse_org_emftext_language_xpath3_PathExpr3810 = new BitSet(new long[]{0x0000000000600002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DescOrSelfStepExpr_in_parse_org_emftext_language_xpath3_PathExpr3827 = new BitSet(new long[]{0x0000000000600002L});
    public static final BitSet FOLLOW_21_in_parse_org_emftext_language_xpath3_ChildStepExpr3868 = new BitSet(new long[]{0x018379320018B3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_StepExpr_in_parse_org_emftext_language_xpath3_ChildStepExpr3886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_22_in_parse_org_emftext_language_xpath3_DescOrSelfStepExpr3919 = new BitSet(new long[]{0x018379320018B3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_StepExpr_in_parse_org_emftext_language_xpath3_DescOrSelfStepExpr3937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_parse_org_emftext_language_xpath3_RootStepExpr3970 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_SelfStepExprChild_in_parse_org_emftext_language_xpath3_SelfStepExpr4003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_parse_org_emftext_language_xpath3_GeneralForwardStep4045 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_45_in_parse_org_emftext_language_xpath3_GeneralForwardStep4060 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_40_in_parse_org_emftext_language_xpath3_GeneralForwardStep4075 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_83_in_parse_org_emftext_language_xpath3_GeneralForwardStep4090 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_46_in_parse_org_emftext_language_xpath3_GeneralForwardStep4105 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_56_in_parse_org_emftext_language_xpath3_GeneralForwardStep4120 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_55_in_parse_org_emftext_language_xpath3_GeneralForwardStep4135 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_70_in_parse_org_emftext_language_xpath3_GeneralForwardStep4150 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_parse_org_emftext_language_xpath3_GeneralForwardStep4171 = new BitSet(new long[]{0x0003110000008180L,0x0000000000264100L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_NodeTest_in_parse_org_emftext_language_xpath3_GeneralForwardStep4189 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_Predicate_in_parse_org_emftext_language_xpath3_GeneralForwardStep4216 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_33_in_parse_org_emftext_language_xpath3_AbbrevForwardStep4266 = new BitSet(new long[]{0x0003110000008180L,0x0000000000264100L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_NodeTest_in_parse_org_emftext_language_xpath3_AbbrevForwardStep4291 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_Predicate_in_parse_org_emftext_language_xpath3_AbbrevForwardStep4318 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_75_in_parse_org_emftext_language_xpath3_GeneralReverseStep4368 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_36_in_parse_org_emftext_language_xpath3_GeneralReverseStep4383 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_77_in_parse_org_emftext_language_xpath3_GeneralReverseStep4398 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_76_in_parse_org_emftext_language_xpath3_GeneralReverseStep4413 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_37_in_parse_org_emftext_language_xpath3_GeneralReverseStep4428 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_parse_org_emftext_language_xpath3_GeneralReverseStep4449 = new BitSet(new long[]{0x0003110000008180L,0x0000000000264100L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_NodeTest_in_parse_org_emftext_language_xpath3_GeneralReverseStep4467 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_Predicate_in_parse_org_emftext_language_xpath3_GeneralReverseStep4494 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_20_in_parse_org_emftext_language_xpath3_AbbrevReverseStep4544 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_Predicate_in_parse_org_emftext_language_xpath3_AbbrevReverseStep4574 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_KindTest_in_parse_org_emftext_language_xpath3_NodeKindTest4619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_QNameTest4661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_QNameTest4699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath3_AnyWildcard4748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_LocalNameWildcard4781 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_org_emftext_language_xpath3_LocalNameWildcard4802 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath3_LocalNameWildcard4816 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath3_NamespaceWildcard4845 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_org_emftext_language_xpath3_NamespaceWildcard4859 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_NamespaceWildcard4877 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_parse_org_emftext_language_xpath3_Predicate4913 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_Expr_in_parse_org_emftext_language_xpath3_Predicate4931 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_parse_org_emftext_language_xpath3_Predicate4949 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_12_in_parse_org_emftext_language_xpath3_VarRef4978 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_VarRef5001 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_VarRef5039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_ParenthesizedExpr5088 = new BitSet(new long[]{0x23A37932007DF3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_Expr_in_parse_org_emftext_language_xpath3_ParenthesizedExpr5111 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_ParenthesizedExpr5137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath3_ContextItemExpr5166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AtomicType_in_parse_org_emftext_language_xpath3_SingleType5199 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_32_in_parse_org_emftext_language_xpath3_SingleType5226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_parse_org_emftext_language_xpath3_EmptySequenceType5262 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_EmptySequenceType5276 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_EmptySequenceType5290 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ItemType_in_parse_org_emftext_language_xpath3_ItemSequenceType5323 = new BitSet(new long[]{0x0000000100018002L});
    public static final BitSet FOLLOW_32_in_parse_org_emftext_language_xpath3_ItemSequenceType5350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath3_ItemSequenceType5365 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath3_ItemSequenceType5380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_KindTest_in_parse_org_emftext_language_xpath3_ItemKindTest5420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_parse_org_emftext_language_xpath3_AnyItemType5453 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_AnyItemType5467 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_AnyItemType5481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AtomicType_in_parse_org_emftext_language_xpath3_AtomicItemType5514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_AtomicType5556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_AtomicType5594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_OptionalAtomicType5652 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_OptionalAtomicType5690 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_32_in_parse_org_emftext_language_xpath3_OptionalAtomicType5733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_parse_org_emftext_language_xpath3_AnyKindTest5769 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_AnyKindTest5783 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_AnyKindTest5797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_parse_org_emftext_language_xpath3_DocumentTest5826 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_DocumentTest5840 = new BitSet(new long[]{0x0002000000004000L,0x0000000000040000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ElementTest_in_parse_org_emftext_language_xpath3_DocumentTest5863 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_SchemaElementTest_in_parse_org_emftext_language_xpath3_DocumentTest5880 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_DocumentTest5906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_parse_org_emftext_language_xpath3_TextTest5935 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_TextTest5949 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_TextTest5963 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_parse_org_emftext_language_xpath3_CommentTest5992 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_CommentTest6006 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_CommentTest6020 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_parse_org_emftext_language_xpath3_PITest6049 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_PITest6063 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_PITest6077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_NCNamePITest_in_parse_org_emftext_language_xpath3_PITest6096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_StringLiteralPITest_in_parse_org_emftext_language_xpath3_PITest6106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_parse_org_emftext_language_xpath3_NCNamePITest6131 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_NCNamePITest6145 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_NCNamePITest6163 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_NCNamePITest6184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_parse_org_emftext_language_xpath3_StringLiteralPITest6213 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_StringLiteralPITest6227 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_parse_org_emftext_language_xpath3_StringLiteralPITest6245 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_StringLiteralPITest6266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_parse_org_emftext_language_xpath3_AttributeTest6295 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_AttributeTest6309 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_AttributeTest6323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_WildcardAttributeTest_in_parse_org_emftext_language_xpath3_AttributeTest6342 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_NameAttributeTest_in_parse_org_emftext_language_xpath3_AttributeTest6352 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_parse_org_emftext_language_xpath3_WildcardAttributeTest6377 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_WildcardAttributeTest6391 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath3_WildcardAttributeTest6405 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath3_WildcardAttributeTest6428 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_WildcardAttributeTest6461 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_WildcardAttributeTest6517 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_WildcardAttributeTest6582 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_parse_org_emftext_language_xpath3_NameAttributeTest6611 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_NameAttributeTest6625 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_NameAttributeTest6648 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_NameAttributeTest6686 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath3_NameAttributeTest6729 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_NameAttributeTest6762 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_NameAttributeTest6818 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_NameAttributeTest6883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_parse_org_emftext_language_xpath3_SchemaAttributeTest6912 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_SchemaAttributeTest6926 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_SchemaAttributeTest6949 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_SchemaAttributeTest6987 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_SchemaAttributeTest7021 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_parse_org_emftext_language_xpath3_ElementTest7050 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_ElementTest7064 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_ElementTest7078 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_WildcardElementTest_in_parse_org_emftext_language_xpath3_ElementTest7097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_NameElementTest_in_parse_org_emftext_language_xpath3_ElementTest7107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_parse_org_emftext_language_xpath3_WildcardElementTest7132 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_WildcardElementTest7146 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath3_WildcardElementTest7160 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath3_WildcardElementTest7183 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_OptionalAtomicType_in_parse_org_emftext_language_xpath3_WildcardElementTest7209 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_WildcardElementTest7250 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_parse_org_emftext_language_xpath3_NameElementTest7279 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_NameElementTest7293 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_NameElementTest7316 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_NameElementTest7354 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath3_NameElementTest7397 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_OptionalAtomicType_in_parse_org_emftext_language_xpath3_NameElementTest7423 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_NameElementTest7464 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_parse_org_emftext_language_xpath3_SchemaElementTest7493 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath3_SchemaElementTest7507 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath3_SchemaElementTest7530 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath3_SchemaElementTest7568 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath3_SchemaElementTest7602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_LITERAL_in_parse_org_emftext_language_xpath3_IntegerLiteral7635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DECIMAL_LITERAL_in_parse_org_emftext_language_xpath3_DecimalLiteral7675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DOUBLE_LITERAL_in_parse_org_emftext_language_xpath3_DoubleLiteral7715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_parse_org_emftext_language_xpath3_StringLiteral7755 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_parse_org_emftext_language_xpath3_ExprSingle7787 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_parse_org_emftext_language_xpath3_ExprSingle7797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_parse_org_emftext_language_xpath3_ExprSingle7807 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_parse_org_emftext_language_xpath3_ExprSingle7817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AndExpr_in_parse_org_emftext_language_xpath3_ExprSingle7827 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ComparisonExpr_in_parse_org_emftext_language_xpath3_ExprSingle7837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_RangeExpr_in_parse_org_emftext_language_xpath3_ExprSingle7847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AdditiveExpr_in_parse_org_emftext_language_xpath3_ExprSingle7857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_MultiplicativeExpr_in_parse_org_emftext_language_xpath3_ExprSingle7867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_UnionExpr_in_parse_org_emftext_language_xpath3_ExprSingle7877 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IntersectExceptExpr_in_parse_org_emftext_language_xpath3_ExprSingle7887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_InstanceofExpr_in_parse_org_emftext_language_xpath3_ExprSingle7897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_TreatExpr_in_parse_org_emftext_language_xpath3_ExprSingle7907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_CastableExpr_in_parse_org_emftext_language_xpath3_ExprSingle7917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_CastExpr_in_parse_org_emftext_language_xpath3_ExprSingle7927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_UnaryExpr_in_parse_org_emftext_language_xpath3_ExprSingle7937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_FilterExpr_in_parse_org_emftext_language_xpath3_ExprSingle7947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_FunctionCall_in_parse_org_emftext_language_xpath3_ExprSingle7957 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_PathExpr_in_parse_org_emftext_language_xpath3_ExprSingle7967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ChildStepExpr_in_parse_org_emftext_language_xpath3_ExprSingle7977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DescOrSelfStepExpr_in_parse_org_emftext_language_xpath3_ExprSingle7987 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_RootStepExpr_in_parse_org_emftext_language_xpath3_ExprSingle7997 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_SelfStepExpr_in_parse_org_emftext_language_xpath3_ExprSingle8007 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_GeneralForwardStep_in_parse_org_emftext_language_xpath3_ExprSingle8017 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AbbrevForwardStep_in_parse_org_emftext_language_xpath3_ExprSingle8027 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_GeneralReverseStep_in_parse_org_emftext_language_xpath3_ExprSingle8037 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AbbrevReverseStep_in_parse_org_emftext_language_xpath3_ExprSingle8047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_VarRef_in_parse_org_emftext_language_xpath3_ExprSingle8057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ParenthesizedExpr_in_parse_org_emftext_language_xpath3_ExprSingle8067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ContextItemExpr_in_parse_org_emftext_language_xpath3_ExprSingle8077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IntegerLiteral_in_parse_org_emftext_language_xpath3_ExprSingle8087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DecimalLiteral_in_parse_org_emftext_language_xpath3_ExprSingle8097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DoubleLiteral_in_parse_org_emftext_language_xpath3_ExprSingle8107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_StringLiteral_in_parse_org_emftext_language_xpath3_ExprSingle8117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_GeneralComp_in_parse_org_emftext_language_xpath3_Comp8138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ValueComp_in_parse_org_emftext_language_xpath3_Comp8148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_NodeComp_in_parse_org_emftext_language_xpath3_Comp8158 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_EmptySequenceType_in_parse_org_emftext_language_xpath3_SequenceType8179 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ItemSequenceType_in_parse_org_emftext_language_xpath3_SequenceType8189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_PathExpr_in_parse_org_emftext_language_xpath3_ValueExpr8210 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_FunctionCall_in_parse_org_emftext_language_xpath3_PrimaryExpr8231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_VarRef_in_parse_org_emftext_language_xpath3_PrimaryExpr8241 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ParenthesizedExpr_in_parse_org_emftext_language_xpath3_PrimaryExpr8251 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ContextItemExpr_in_parse_org_emftext_language_xpath3_PrimaryExpr8261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IntegerLiteral_in_parse_org_emftext_language_xpath3_PrimaryExpr8271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DecimalLiteral_in_parse_org_emftext_language_xpath3_PrimaryExpr8281 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DoubleLiteral_in_parse_org_emftext_language_xpath3_PrimaryExpr8291 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_StringLiteral_in_parse_org_emftext_language_xpath3_PrimaryExpr8301 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_FilterExpr_in_parse_org_emftext_language_xpath3_PathExprChild8322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_FunctionCall_in_parse_org_emftext_language_xpath3_PathExprChild8332 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ChildStepExpr_in_parse_org_emftext_language_xpath3_PathExprChild8342 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DescOrSelfStepExpr_in_parse_org_emftext_language_xpath3_PathExprChild8352 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_RootStepExpr_in_parse_org_emftext_language_xpath3_PathExprChild8362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_SelfStepExpr_in_parse_org_emftext_language_xpath3_PathExprChild8372 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_GeneralForwardStep_in_parse_org_emftext_language_xpath3_PathExprChild8382 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AbbrevForwardStep_in_parse_org_emftext_language_xpath3_PathExprChild8392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_GeneralReverseStep_in_parse_org_emftext_language_xpath3_PathExprChild8402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AbbrevReverseStep_in_parse_org_emftext_language_xpath3_PathExprChild8412 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_VarRef_in_parse_org_emftext_language_xpath3_PathExprChild8422 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ParenthesizedExpr_in_parse_org_emftext_language_xpath3_PathExprChild8432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ContextItemExpr_in_parse_org_emftext_language_xpath3_PathExprChild8442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IntegerLiteral_in_parse_org_emftext_language_xpath3_PathExprChild8452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DecimalLiteral_in_parse_org_emftext_language_xpath3_PathExprChild8462 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DoubleLiteral_in_parse_org_emftext_language_xpath3_PathExprChild8472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_StringLiteral_in_parse_org_emftext_language_xpath3_PathExprChild8482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_FilterExpr_in_parse_org_emftext_language_xpath3_StepExpr8503 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_GeneralForwardStep_in_parse_org_emftext_language_xpath3_StepExpr8513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AbbrevForwardStep_in_parse_org_emftext_language_xpath3_StepExpr8523 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_GeneralReverseStep_in_parse_org_emftext_language_xpath3_StepExpr8533 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AbbrevReverseStep_in_parse_org_emftext_language_xpath3_StepExpr8543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_FilterExpr_in_parse_org_emftext_language_xpath3_SelfStepExprChild8564 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_FunctionCall_in_parse_org_emftext_language_xpath3_SelfStepExprChild8574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_GeneralForwardStep_in_parse_org_emftext_language_xpath3_SelfStepExprChild8584 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AbbrevForwardStep_in_parse_org_emftext_language_xpath3_SelfStepExprChild8594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_GeneralReverseStep_in_parse_org_emftext_language_xpath3_SelfStepExprChild8604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AbbrevReverseStep_in_parse_org_emftext_language_xpath3_SelfStepExprChild8614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_VarRef_in_parse_org_emftext_language_xpath3_SelfStepExprChild8624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ParenthesizedExpr_in_parse_org_emftext_language_xpath3_SelfStepExprChild8634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ContextItemExpr_in_parse_org_emftext_language_xpath3_SelfStepExprChild8644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IntegerLiteral_in_parse_org_emftext_language_xpath3_SelfStepExprChild8654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DecimalLiteral_in_parse_org_emftext_language_xpath3_SelfStepExprChild8664 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DoubleLiteral_in_parse_org_emftext_language_xpath3_SelfStepExprChild8674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_StringLiteral_in_parse_org_emftext_language_xpath3_SelfStepExprChild8684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_NodeKindTest_in_parse_org_emftext_language_xpath3_NodeTest8705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_QNameTest_in_parse_org_emftext_language_xpath3_NodeTest8715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AnyWildcard_in_parse_org_emftext_language_xpath3_NodeTest8725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_LocalNameWildcard_in_parse_org_emftext_language_xpath3_NodeTest8735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_NamespaceWildcard_in_parse_org_emftext_language_xpath3_NodeTest8745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AnyKindTest_in_parse_org_emftext_language_xpath3_KindTest8766 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DocumentTest_in_parse_org_emftext_language_xpath3_KindTest8776 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_TextTest_in_parse_org_emftext_language_xpath3_KindTest8786 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_CommentTest_in_parse_org_emftext_language_xpath3_KindTest8796 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_PITest_in_parse_org_emftext_language_xpath3_KindTest8806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_NCNamePITest_in_parse_org_emftext_language_xpath3_KindTest8816 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_StringLiteralPITest_in_parse_org_emftext_language_xpath3_KindTest8826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AttributeTest_in_parse_org_emftext_language_xpath3_KindTest8836 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_WildcardAttributeTest_in_parse_org_emftext_language_xpath3_KindTest8846 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_NameAttributeTest_in_parse_org_emftext_language_xpath3_KindTest8856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_SchemaAttributeTest_in_parse_org_emftext_language_xpath3_KindTest8866 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ElementTest_in_parse_org_emftext_language_xpath3_KindTest8876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_WildcardElementTest_in_parse_org_emftext_language_xpath3_KindTest8886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_NameElementTest_in_parse_org_emftext_language_xpath3_KindTest8896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_SchemaElementTest_in_parse_org_emftext_language_xpath3_KindTest8906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ItemKindTest_in_parse_org_emftext_language_xpath3_ItemType8927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AnyItemType_in_parse_org_emftext_language_xpath3_ItemType8937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AtomicItemType_in_parse_org_emftext_language_xpath3_ItemType8947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_Expr_in_synpred18_Xpath3949 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IfExpr_in_synpred19_Xpath3963 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ForExpr_in_synpred20_Xpath3977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_QuantifiedExpr_in_synpred21_Xpath3991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_synpred93_Xpath35365 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_synpred94_Xpath35380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_OrExpr_in_synpred119_Xpath37817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AndExpr_in_synpred120_Xpath37827 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ComparisonExpr_in_synpred121_Xpath37837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_RangeExpr_in_synpred122_Xpath37847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AdditiveExpr_in_synpred123_Xpath37857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_MultiplicativeExpr_in_synpred124_Xpath37867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_UnionExpr_in_synpred125_Xpath37877 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IntersectExceptExpr_in_synpred126_Xpath37887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_InstanceofExpr_in_synpred127_Xpath37897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_TreatExpr_in_synpred128_Xpath37907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_CastableExpr_in_synpred129_Xpath37917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_CastExpr_in_synpred130_Xpath37927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_UnaryExpr_in_synpred131_Xpath37937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_FilterExpr_in_synpred132_Xpath37947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_FunctionCall_in_synpred133_Xpath37957 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_PathExpr_in_synpred134_Xpath37967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ChildStepExpr_in_synpred135_Xpath37977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DescOrSelfStepExpr_in_synpred136_Xpath37987 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_RootStepExpr_in_synpred137_Xpath37997 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_SelfStepExpr_in_synpred138_Xpath38007 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_GeneralForwardStep_in_synpred139_Xpath38017 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AbbrevForwardStep_in_synpred140_Xpath38027 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_GeneralReverseStep_in_synpred141_Xpath38037 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AbbrevReverseStep_in_synpred142_Xpath38047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_VarRef_in_synpred143_Xpath38057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ParenthesizedExpr_in_synpred144_Xpath38067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ContextItemExpr_in_synpred145_Xpath38077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IntegerLiteral_in_synpred146_Xpath38087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DecimalLiteral_in_synpred147_Xpath38097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DoubleLiteral_in_synpred148_Xpath38107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_FilterExpr_in_synpred159_Xpath38322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_FunctionCall_in_synpred160_Xpath38332 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ChildStepExpr_in_synpred161_Xpath38342 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_RootStepExpr_in_synpred163_Xpath38362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_SelfStepExpr_in_synpred164_Xpath38372 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_GeneralForwardStep_in_synpred165_Xpath38382 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AbbrevForwardStep_in_synpred166_Xpath38392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_GeneralReverseStep_in_synpred167_Xpath38402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AbbrevReverseStep_in_synpred168_Xpath38412 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_VarRef_in_synpred169_Xpath38422 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ParenthesizedExpr_in_synpred170_Xpath38432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ContextItemExpr_in_synpred171_Xpath38442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IntegerLiteral_in_synpred172_Xpath38452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DecimalLiteral_in_synpred173_Xpath38462 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DoubleLiteral_in_synpred174_Xpath38472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_FilterExpr_in_synpred179_Xpath38564 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_FunctionCall_in_synpred180_Xpath38574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_GeneralForwardStep_in_synpred181_Xpath38584 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AbbrevForwardStep_in_synpred182_Xpath38594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_VarRef_in_synpred185_Xpath38624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ParenthesizedExpr_in_synpred186_Xpath38634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ContextItemExpr_in_synpred187_Xpath38644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_IntegerLiteral_in_synpred188_Xpath38654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DecimalLiteral_in_synpred189_Xpath38664 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_DoubleLiteral_in_synpred190_Xpath38674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_PITest_in_synpred199_Xpath38806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_NCNamePITest_in_synpred200_Xpath38816 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_StringLiteralPITest_in_synpred201_Xpath38826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_AttributeTest_in_synpred202_Xpath38836 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_WildcardAttributeTest_in_synpred203_Xpath38846 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_NameAttributeTest_in_synpred204_Xpath38856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_ElementTest_in_synpred206_Xpath38876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_WildcardElementTest_in_synpred207_Xpath38886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath3_NameElementTest_in_synpred208_Xpath38896 = new BitSet(new long[]{0x0000000000000002L});

}